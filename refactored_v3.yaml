openapi: 3.0.3
info:
  title: Automation Hub API
  version: v3
  description: 'Fetch, Upload, Organize, and Distribute Ansible Collections'
  contact:
    name: Pulp Team
    email: pulp-list@redhat.com
    url: 'https://pulpproject.org'
  license:
    name: GPLv2+
    url: 'https://raw.githubusercontent.com/ansible/galaxy_ng/master/LICENSE'
  x-logo:
    url: 'https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg'
  x-pulp-app-versions:
    core: 3.11.0.post0
    container: 2.5.2
    ansible: 0.7.1
    galaxy: 4.4.0dev
paths:
  /v3/:
    summary: API root. Lists out the paths that are available
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRootResponse'
      tags:
        - API Root
  /v3/plugin:
    summary: Lists child URLS
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRootResponse'
      tags:
        - Plugins
  /v3/plugin/ansible:
    summary: Lists child URLS
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRootResponse'
      tags:
        - Pulp Ansible
  /v3/plugin/ansible/search:
    summary: Lists child URLS
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRootResponse'
      tags:
        - Pulp Ansible
  /v3/plugin/ansible/search/collection-versions:
    summary: Search collection versions across all repos.
    get:
      summary: ''
      operationId: get-plugin-ansible-search-collection-versions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionSearch'
      parameters:
        - schema: {}
          in: query
          name: includ_related
          description: 'This should be an array, but swagger crashes '
        - schema: {}
          in: query
          name: show_versions
          description: 'This should be an array, but swagger crashes '
        - schema:
            type: string
          in: query
          name: repo_labels
          description: Show only content from repos that match the given pulp object labels
        - schema:
            type: string
          in: query
          name: repo
          description: Show content from a specific repository.
      description: 'By default, only repos that are labelled with content=public are shown.'
      tags:
        - Pulp Ansible
  /v3/plugin/ansible/distributions/:
    summary: pulp ansible distributions api
    get:
      summary: ''
      operationId: get-plugin-ansible-distributions
      responses:
        '200':
          description: OK
      description: Same as current _ui/v1/distributions/ endpoint
      tags:
        - Pulp Ansible
  /v3/plugin/ansible/collection-remotes/:
    summary: pulp ansible collection remotes api
    get:
      summary: ''
      operationId: get-plugin-ansible-collection-remotes
      responses:
        '200':
          description: OK
      description: Same as current _ui/v1/remotes/ endpoint.
      tags:
        - Pulp Ansible
  '/v3/plugin/ansible/collections/{base_path}/artifacts/collections/':
    post:
      operationId: api_automation_hub_v3_artifacts_collections_create
      description: Dispatch a Collection creation task.
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionUploadWithDownloadUrl'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionUploadWithDownloadUrl'
        required: true
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionUploadWithDownloadUrlResponse'
          description: ''
      tags:
        - Pulp Ansible
  '/v3/plugin/ansible/collections/{base_path}/artifacts/collections/{path}/{filename}':
    get:
      operationId: api_automation_hub_v3_artifacts_collections_read
      description: ''
      parameters:
        - in: path
          name: filename
          schema:
            type: string
          required: true
        - in: path
          name: path
          schema:
            type: string
          required: true
        - in: query
          name: fields
          schema:
            type: string
          description: A list of fields to include in the response.
        - in: query
          name: exclude_fields
          schema:
            type: string
          description: A list of fields to exclude from the response.
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          description: No response body
      tags:
        - Pulp Ansible
  '/v3/plugin/ansible/collections/{base_path}/index/':
    get:
      operationId: api_automation_hub_v3_collections_list
      description: ViewSet for Collections.
      parameters:
        - in: query
          name: deprecated
          schema:
            type: string
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: namespace
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
        - in: query
          name: fields
          schema:
            type: string
          description: A list of fields to include in the response.
        - in: query
          name: exclude_fields
          schema:
            type: string
          description: A list of fields to exclude from the response.
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionWithFixedHrefsResponseList'
          description: ''
      tags:
        - Pulp Ansible
  '/v3/plugin/ansible/collections/{base_path}/index/{namespace}/{name}/':
    get:
      operationId: api_automation_hub_v3_collections_read
      description: ViewSet for Collections.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
        - in: path
          name: namespace
          schema:
            type: string
          required: true
        - in: query
          name: fields
          schema:
            type: string
          description: A list of fields to include in the response.
        - in: query
          name: exclude_fields
          schema:
            type: string
          description: A list of fields to exclude from the response.
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
          description: ''
      tags:
        - Pulp Ansible
    patch:
      operationId: api_automation_hub_v3_collections_update
      description: Update a Collection object.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
        - in: path
          name: namespace
          schema:
            type: string
          required: true
      tags:
        - Pulp Ansible
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
        required: true
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
          description: ''
  '/v3/plugin/ansible/collections/{base_path}/index/{namespace}/{name}/versions/':
    get:
      operationId: api_automation_hub_v3_collections_versions_list
      description: Returns paginated CollectionVersions list.
      parameters:
        - in: query
          name: is_highest
          schema:
            type: boolean
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: path
          name: name
          schema:
            type: string
          required: true
        - in: query
          name: name
          schema:
            type: string
        - in: path
          name: namespace
          schema:
            type: string
          required: true
        - in: query
          name: namespace
          schema:
            type: string
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
        - in: query
          name: q
          schema:
            type: string
        - in: query
          name: repository_version
          schema:
            type: string
          description: Repository Version referenced by HREF
        - in: query
          name: repository_version_added
          schema:
            type: string
          description: Repository Version referenced by HREF
        - in: query
          name: repository_version_removed
          schema:
            type: string
          description: Repository Version referenced by HREF
        - in: query
          name: tags
          schema:
            type: string
          description: Filter by comma separate list of tags that must all be matched
        - in: query
          name: version
          schema:
            type: string
          description: Filter results where version matches value
        - in: query
          name: fields
          schema:
            type: string
          description: A list of fields to include in the response.
        - in: query
          name: exclude_fields
          schema:
            type: string
          description: A list of fields to exclude from the response.
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionVersionWithDownloadUrlResponseList'
          description: ''
      tags:
        - Pulp Ansible
  '/v3/plugin/ansible/collections/{base_path}/index/{namespace}/{name}/versions/{version}/':
    get:
      operationId: api_automation_hub_v3_collections_versions_read
      description: Returns a CollectionVersion object.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
        - in: path
          name: namespace
          schema:
            type: string
          required: true
        - in: path
          name: version
          schema:
            type: string
          required: true
        - in: query
          name: fields
          schema:
            type: string
          description: A list of fields to include in the response.
        - in: query
          name: exclude_fields
          schema:
            type: string
          description: A list of fields to exclude from the response.
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionWithDownloadUrlResponse'
          description: ''
      tags:
        - Pulp Ansible
  '/v3/plugin/ansible/collections/{base_path}/index/{namespace}/{name}/versions/{version}/docs-blob/':
    get:
      operationId: api_automation_hub_v3_collections_versions_docs_blob_read
      description: Returns a CollectionVersion object.
      parameters:
        - in: path
          name: name
          schema:
            type: string
          required: true
        - in: path
          name: namespace
          schema:
            type: string
          required: true
        - in: path
          name: version
          schema:
            type: string
          required: true
        - in: query
          name: fields
          schema:
            type: string
          description: A list of fields to include in the response.
        - in: query
          name: exclude_fields
          schema:
            type: string
          description: A list of fields to exclude from the response.
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionDocsResponse'
          description: ''
      tags:
        - Pulp Ansible
  '/v3/plugin/ansible/collections/{base_path}/index/{namespace}/{name}/versions/{version}/move/{source_path}/{dest_path}/':
    post:
      operationId: api_automation_hub_v3_collections_versions_move_move_content
      description: |-
        Remove content from source repo and add to destination repo.

        Creates new RepositoryVersion of source repo without content included.
        Creates new RepositoryVersion of destination repo with content included.
      parameters:
        - in: path
          name: dest_path
          schema:
            type: string
          required: true
        - in: path
          name: name
          schema:
            type: string
          required: true
        - in: path
          name: namespace
          schema:
            type: string
          required: true
        - in: path
          name: source_path
          schema:
            type: string
          required: true
        - in: path
          name: version
          schema:
            type: string
          required: true
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          description: No response body
      tags:
        - Pulp Ansible
  /v3/tasks/:
    get:
      operationId: tasks_list
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: List tasks
      parameters:
        - in: query
          name: child_tasks
          schema:
            type: string
            format: uuid
          description: Foreign Key referenced by HREF
        - in: query
          name: created_resources
          schema:
            type: string
            format: uuid
        - in: query
          name: finished_at
          schema:
            type: string
            format: date-time
            nullable: true
          description: ISO 8601 formatted dates are supported
        - in: query
          name: finished_at__gt
          schema:
            type: string
            format: date-time
            nullable: true
          description: Filter results where finished_at is greater than value
        - in: query
          name: finished_at__gte
          schema:
            type: string
            format: date-time
            nullable: true
          description: Filter results where finished_at is greater than or equal to value
        - in: query
          name: finished_at__lt
          schema:
            type: string
            format: date-time
            nullable: true
          description: Filter results where finished_at is less than value
        - in: query
          name: finished_at__lte
          schema:
            type: string
            format: date-time
            nullable: true
          description: Filter results where finished_at is less than or equal to value
        - in: query
          name: finished_at__range
          schema:
            type: array
            items:
              type: string
              format: date-time
              nullable: true
          description: Filter results where finished_at is between two comma separated values
          explode: false
          style: form
        - name: limit
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: name__contains
          schema:
            type: string
          description: Filter results where name contains value
        - name: offset
          required: false
          in: query
          description: The initial index from which to return the results.
          schema:
            type: integer
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: parent_task
          schema:
            type: string
            format: uuid
            nullable: true
          description: Foreign Key referenced by HREF
        - in: query
          name: reserved_resources_record
          schema:
            type: string
            format: uuid
        - in: query
          name: started_at
          schema:
            type: string
            format: date-time
            nullable: true
          description: ISO 8601 formatted dates are supported
        - in: query
          name: started_at__gt
          schema:
            type: string
            format: date-time
            nullable: true
          description: Filter results where started_at is greater than value
        - in: query
          name: started_at__gte
          schema:
            type: string
            format: date-time
            nullable: true
          description: Filter results where started_at is greater than or equal to value
        - in: query
          name: started_at__lt
          schema:
            type: string
            format: date-time
            nullable: true
          description: Filter results where started_at is less than value
        - in: query
          name: started_at__lte
          schema:
            type: string
            format: date-time
            nullable: true
          description: Filter results where started_at is less than or equal to value
        - in: query
          name: started_at__range
          schema:
            type: array
            items:
              type: string
              format: date-time
              nullable: true
          description: Filter results where started_at is between two comma separated values
          explode: false
          style: form
        - in: query
          name: state
          schema:
            type: string
            enum:
              - canceled
              - completed
              - failed
              - running
              - skipped
              - waiting
        - in: query
          name: state__in
          schema:
            type: array
            items:
              type: string
              enum:
                - canceled
                - completed
                - failed
                - running
                - skipped
                - waiting
          description: Filter results where state is in a comma-separated list of values
          explode: false
          style: form
        - in: query
          name: task_group
          schema:
            type: string
            format: uuid
            nullable: true
          description: Foreign Key referenced by HREF
        - in: query
          name: worker
          schema:
            type: string
            format: uuid
            nullable: true
          description: Foreign Key referenced by HREF
        - in: query
          name: worker__in
          schema:
            type: array
            items:
              type: string
              format: uuid
              nullable: true
          description: Filter results where worker is in a comma-separated list of values
          explode: false
          style: form
        - in: query
          name: fields
          schema:
            type: string
          description: A list of fields to include in the response.
        - in: query
          name: exclude_fields
          schema:
            type: string
          description: A list of fields to exclude from the response.
      tags:
        - Tasks
      security:
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskSummaryResponseList'
          description: ''
  '/plugin/ansible/collections/{base_path}/all':
    summary: Repository sync metadata
    get:
      summary: ''
      operationId: get-plugin-ansible-collections-distribution-all
      responses:
        '200':
          description: OK
      description: 'Same as Same as current /content/{distro}/v3/collections/all/ endpoint.'
      tags:
        - Pulp Ansible
  /v3/plugin/ansible/namespaces:
    summary: List ansible namespaces
    get:
      summary: ''
      operationId: get-plugin-ansible-namespaces
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    meta:
                      count: 0
                    links:
                      first: /api/automation-hub/v3/namespaces/?keywords=newsasdf&limit=10&offset=0
                      previous: null
                      next: null
                      last: /api/automation-hub/v3/namespaces/?keywords=newsasdf&limit=10&offset=0
                    data: []
                properties:
                  meta:
                    $ref: '#/components/schemas/PaginatedMeta'
                  links:
                    $ref: '#/components/schemas/PaginatedLinks'
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/NamespaceResponseObject'
                required:
                  - meta
                  - links
                  - data
      description: 'Very similar to current namespaces api, with some modifications'
      parameters: []
      tags:
        - Pulp Ansible
    parameters: []
  '/plugins/ansible/namespaces/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: ''
      operationId: get-plugins-ansible-namespaces-name
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponseObject'
      tags:
        - Pulp Ansible
  '/plugins/ansible/namespaces/{name}/users':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: ''
      operationId: get-plugins-ansible-namespaces-name-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObjectPermissionsResponse'
      tags:
        - Pulp Ansible
    put:
      summary: ''
      operationId: post-plugins-ansible-namespaces-name-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectPermissionsObject'
      description: List of object permissions to add or change. Users that are already added on the object will have their permissions updated. Users that don't already have permissions will be added.
      tags:
        - Pulp Ansible
    delete:
      summary: ''
      operationId: delete-plugins-ansible-namespaces-name-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      description: List of user IDs to remove from the object.
      tags:
        - Pulp Ansible
  '/plugins/ansible/namespaces/{name}/groups':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: ''
      operationId: get-plugins-ansible-namespaces-name-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObjectPermissionsResponse'
      tags:
        - Pulp Ansible
    put:
      summary: ''
      operationId: post-plugins-ansible-namespaces-name-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectPermissionsObject'
      description: List of object permissions to add or change. Groups that are already added on the object will have their permissions updated. Groups that don't already have permissions will be added.
      tags:
        - Pulp Ansible
    delete:
      summary: ''
      operationId: delete-plugins-ansible-namespaces-name-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      description: List of group IDs to remove from the object.
      tags:
        - Pulp Ansible
  /v3/plugin/ansible/imports:
    summary: List collection imports
    get:
      summary: ''
      operationId: get-plugin-ansible-imports
      responses:
        '200':
          description: OK
      description: Same as current v3/imports/collections/ endpoint.
      tags:
        - Pulp Ansible
  /v3/plugin/execution-environments:
    summary: List child URLS
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRootResponse'
      tags:
        - Pulp Container
  /v3/plugin/execution-environments/search:
    summary: Seach execution environments
    get:
      summary: ''
      operationId: get-plugin-execution-environments-search
      responses:
        '200':
          description: OK
      description: TBD. This will include the ability to search EEs based on EE metadata.
      tags:
        - Pulp Container
  /v3/plugin/execution-environments/registries:
    summary: List remote registries
  /v3/plugin/execution-environments/repositories:
    summary: List of container repositories
    get:
      summary: ''
      operationId: get-plugin-execution-environments-repositories
      responses:
        '200':
          description: OK
      description: Same as current /_ui/v1/execution-environments/repositories/ endpoint.
      tags:
        - Pulp Container
  '/v3/plugin/execution-environments/repositories/{base_path}/':
    summary: Container repository details
    get:
      summary: ''
      operationId: get-plugin-execution-environments-repositories-base_path
      responses:
        '200':
          description: OK
      description: 'Same as current /_ui/v1/execution-environments/repositories/{base_path} endpoint.'
      tags:
        - Pulp Container
  '/v3/plugin/execution-environments/repositories/{base_path}/_content/history':
    summary: Container repository history
    get:
      summary: ''
      operationId: get-plugin-execution-environments-repositories-base_path-_content-history
      responses:
        '200':
          description: OK
      description: 'Same as current /_ui/v1/execution-environments/repositories/{base_path}/_content/history endpoint.'
      tags:
        - Pulp Container
  '/v3/plugin/execution-environments/repositories/{base_path}/_content/images':
    summary: List of images in a repository
    get:
      summary: ''
      operationId: get-plugin-execution-environments-repositories-base_path-_content-images
      responses:
        '200':
          description: OK
      description: 'Same as current /_ui/v1/execution-environments/repositories/{base_path}/_content/images endpoint.'
      tags:
        - Pulp Container
  '/v3/plugin/execution-environments/repositories/{base_path}/_content/images/{ref}':
    summary: Container details for image manifest
    get:
      summary: ''
      operationId: get-plugin-execution-environments-repositories-base_path-_content-images-ref
      responses:
        '200':
          description: OK
      description: 'Same as current /_ui/v1/execution-environments/repositories/{base_path}/_content/images/{ref} endpoint.'
      tags:
        - Pulp Container
  '/v3/plugin/execution-environments/repositories/{base_path}/_content/readme':
    summary: Repository readme
    get:
      summary: ''
      operationId: get-plugin-execution-environments-repositories-base_path-_content-readme
      responses:
        '200':
          description: OK
      description: 'Same as current /_ui/v1/execution-environments/repositories/{base_path}/_content/readme endpoint.'
      tags:
        - Pulp Container
  /plugin/execution-environments/namespaces:
    summary: List of container namespaces
    get:
      summary: ''
      operationId: get-plugin-execution-environments-namespaces
      responses:
        '200':
          description: OK
      description: Same as current _ui/v1/execution-environments/namespaces/ endpoint.
      tags:
        - Pulp Container
  '/v3/plugin/execution-environments/namespaces/{name}/users':
    summary: List of container namespace users
    get:
      summary: ''
      operationId: get-plugins-execution-environments-namespaces-name-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObjectPermissionsResponse'
      tags:
        - Pulp Container
    put:
      summary: ''
      operationId: put-plugins-execution-environments-namespaces-name-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectPermissionsObject'
      description: List of object permissions to add or change. Users that are already added on the object will have their permissions updated. Users that don't already have permissions will be added.
      tags:
        - Pulp Container
    delete:
      summary: ''
      operationId: delete-plugins-execution-environments-namespaces-name-users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      description: List of user IDs to remove from the object.
      tags:
        - Pulp Container
  '/v3/plugin/execution-environments/namespaces/{name}/groups':
    summary: List of container namespace groups
    get:
      summary: ''
      operationId: get-plugins-execution-environments-namespaces-name-groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObjectPermissionsResponse'
      tags:
        - Pulp Container
    put:
      summary: ''
      operationId: put-plugins-execution-environments-namespaces-name-groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ObjectPermissionsObject'
      description: List of object permissions to add or change. Groups that are already added on the object will have their permissions updated. Groups that don't already have permissions will be added.
      tags:
        - Pulp Container
    delete:
      summary: ''
      operationId: delete-plugins-execution-environments-namespaces-name-groups
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      description: List of group IDs to remove from the object.
      tags:
        - Pulp Container
  /v3/auth:
    summary: List child URLS
    get:
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiRootResponse'
      tags:
        - Authentication
  /v3/auth/me:
    summary: Return information about the current user
    get:
      summary: ''
      operationId: get-auth-me
      responses:
        '200':
          description: OK
      description: Same as current _ui/v1/me/ endpoint.
      tags:
        - Authentication
  /v3/auth/login:
    summary: Login
    get:
      summary: ''
      operationId: get-auth-login
      responses:
        '200':
          description: OK
      description: Same as current _ui/v1/auth/login/ endpoint
      tags:
        - Authentication
  /v3/auth/logout:
    summary: Logout
    get:
      summary: ''
      operationId: get-auth-logout
      responses:
        '200':
          description: OK
      description: Same as current _ui/v1/auth/logout/ endpoint
      tags:
        - Authentication
  /v3/auth/token:
    summary: Get a token for the current user
    get:
      summary: ''
      operationId: get-auth-token
      responses:
        '200':
          description: OK
      description: Same as current v3/auth/token/ endpoint.
      tags:
        - Authentication
    post:
      operationId: api_automation_hub_v3_auth_token_post
      description: Create or refresh user token.
      tags:
        - Authentication
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_automation_hub_v3_auth_token_delete
      description: Invalidate user token.
      tags:
        - Authentication
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
      responses:
        '204':
          description: No response body
  /v3/configuration:
    summary: 'return the current app configuration, including feature flags, default upload repo and default download repo'
    get:
      summary: ''
      operationId: get-configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppConfiguration'
      tags:
        - App Configuration
  /v3/groups:
    summary: current groups api
    get:
      summary: ''
      operationId: get-groups
      responses:
        '200':
          description: OK
      description: Same as current _ui/v1/groups/ endpoint
      tags:
        - Groups
  /v3/users:
    summary: current users api
    get:
      summary: ''
      operationId: get-users
      responses:
        '200':
          description: OK
      description: Same as current _ui/v1/users/ endpoint.
      tags:
        - Users
  /v3/collections:
    get:
      summary: Get Collections
      tags: []
      responses:
        '301':
          description: Moved Permanently
      operationId: get-collections
      description: Redirect or proxy the request to /plugin/ansible/collections/<default_download_repo>/index/
      deprecated: true
  /v3/artifacts:
    get:
      summary: Get collection artifacts
      tags: []
      responses:
        '301':
          description: Moved Permanently
      operationId: get-artifacts
      description: Redirect or proxy the request to /plugin/ansible/collections/<default_upload_repo>/artifacts/
      deprecated: true
  /v3/namespaces:
    get:
      summary: Get collection namespaces
      tags: []
      responses:
        '301':
          description: Moved Permanently
      operationId: get-namespaces
      description: Redirect or proxy the request to /plugin/ansible/namespaces/
      deprecated: true
  /v3/imports:
    get:
      summary: Get collection imports
      tags: []
      responses:
        '301':
          description: Moved Permanently
      operationId: get-imports
      description: Redirect or proxy the request to /plugin/ansible/imports/
      deprecated: true
components:
  schemas:
    ApiRootResponse:
      type: object
      description: List of child routes
      properties:
        subroutes:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/ApiRootResponseObject'
    ApiRootResponseObject:
      type: object
      description: Route
      properties:
        url:
          type: string
        support:
          type: string
          enum:
            - tech_preview
            - supported
            - deprecated
    CollectionVersionSearchObject:
      type: object
      description: Objects returned on collection search
      x-examples: {}
      properties:
        name:
          type: string
        namespace:
          type: string
        version:
          type: string
        requires_ansible:
          type: string
        created_at:
          type: string
        related_fields:
          type: object
          properties:
            metadata:
              $ref: '#/components/schemas/CollectionVersionMetadata'
            namespace:
              $ref: '#/components/schemas/NamespaceSummary'
            distributions:
              type: array
              items:
                $ref: '#/components/schemas/CollectionVersionDistributionSummary'
    CollectionVersionMetadata:
      title: CollectionVersionMetadata
      type: object
      properties:
        id:
          type: string
    CollectionVersionDistributionSummary:
      title: CollectionVersionDistributionSummary
      type: object
      properties:
        collection_url:
          type: string
        repository:
          type: object
          properties:
            name:
              type: string
            pulp_id:
              type: string
        base_path:
          type: string
        name:
          type: string
        pulp_id:
          type: string
    PaginatedCollectionSearch:
      title: PaginatedCollectionSearch
      type: array
      items:
        type: object
        properties:
          meta:
            $ref: '#/components/schemas/PaginatedMeta'
          links:
            $ref: '#/components/schemas/PaginatedLinks'
          data:
            type: array
            items:
              $ref: '#/components/schemas/CollectionVersionSearchObject'
    PaginatedMeta:
      title: PaginatedMeta
      type: object
      properties:
        count:
          type: number
    PaginatedLinks:
      title: PaginatedLinks
      type: object
      properties:
        first:
          type: string
        previous:
          type: string
        next:
          type: string
        last:
          type: string
    NamespaceSummary:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 45
          name: newswangerd
          company: ''
          email: ''
          avatar_url: ''
          description: ''
          groups:
            - id: 2
              name: 'rh-identity-account:6269497'
              object_permissions:
                - change_namespace
                - upload_to_namespace
            - id: 5
              name: test
              object_permissions:
                - change_namespace
                - upload_to_namespace
      properties:
        id:
          type: number
        name:
          type: string
          minLength: 1
        company:
          type: string
        email:
          type: string
        avatar_url:
          type: string
        description:
          type: string
      required:
        - id
        - name
        - company
        - email
        - avatar_url
        - description
    NamespaceResponseObject:
      description: ''
      type: object
      x-examples:
        example-1:
          id: 45
          name: newswangerd
          company: ''
          email: ''
          avatar_url: ''
          description: ''
          groups:
            - id: 2
              name: 'rh-identity-account:6269497'
              object_permissions:
                - change_namespace
                - upload_to_namespace
            - id: 5
              name: test
              object_permissions:
                - change_namespace
                - upload_to_namespace
      properties:
        id:
          type: number
        name:
          type: string
          minLength: 1
        company:
          type: string
        email:
          type: string
        avatar_url:
          type: string
        description:
          type: string
        related_fields:
          type: object
          properties:
            my_permissions:
              type: array
              items:
                type: string
      required:
        - id
        - name
        - company
        - email
        - avatar_url
        - description
    ObjectPermissionsObject:
      description: ''
      type: object
      properties:
        id:
          type: number
        name:
          type: string
          minLength: 1
        object_permissions:
          type: array
          items:
            required: []
            properties: {}
      required:
        - id
        - name
        - object_permissions
      x-examples:
        example-1:
          id: 2
          name: 'rh-identity-account:6269497'
          object_permissions:
            - change_namespace
            - upload_to_namespace
    AppConfiguration:
      title: AppConfiguration
      type: object
      properties:
        plugins:
          type: object
          properties:
            execution_environment:
              type: object
              properties:
                enabled:
                  type: boolean
                configuration:
                  type: object
                  properties:
                    registry_url:
                      type: string
            ansible:
              type: object
              properties:
                enabled:
                  type: boolean
                configuration:
                  type: object
                  properties:
                    default_upload_distribution:
                      type: string
                    default_download_distribution:
                      type: string
        authentication:
          type: string
    PaginatedObjectPermissionsResponse:
      title: PaginatedObjectPermissionsResponse
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/PaginatedMeta'
        links:
          $ref: '#/components/schemas/PaginatedLinks'
        data:
          type: array
          items:
            $ref: '#/components/schemas/ObjectPermissionsObject'
    ArtifactRefResponse:
      type: object
      description: A serializer for an Artifact reference.
      properties:
        filename:
          type: string
        sha256:
          type: string
        size:
          type: integer
      required:
        - filename
        - sha256
        - size
    CollectionMetadataResponse:
      type: object
      description: A serializer for a CollectionVersion metadata.
      properties:
        authors:
          type: array
          items:
            type: string
          readOnly: true
        contents:
          type: object
          readOnly: true
        dependencies:
          type: object
          readOnly: true
        description:
          type: string
          readOnly: true
        documentation:
          type: string
          readOnly: true
        homepage:
          type: string
          readOnly: true
        issues:
          type: string
          readOnly: true
        license:
          type: array
          items:
            type: string
          readOnly: true
        repository:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: string
      required:
        - tags
    CollectionNamespaceResponse:
      type: object
      description: A serializer for a Collection Version namespace field.
      properties:
        name:
          type: string
      required:
        - name
    CollectionUploadWithDownloadUrl:
      type: object
      description: A serializer for the Collection One Shot Upload API.
      properties:
        file:
          type: string
          format: binary
        sha256:
          type: string
      required:
        - file
    CollectionUploadWithDownloadUrlResponse:
      type: object
      description: A serializer for the Collection One Shot Upload API.
      properties:
        file:
          type: string
        sha256:
          type: string
      required:
        - file
    CollectionVersionDocsResponse:
      type: object
      description: A serializer to display the docs_blob of a CollectionVersion.
      properties:
        docs_blob:
          type: object
      required:
        - docs_blob
    CollectionVersionWithDownloadUrlResponse:
      type: object
      description: A serializer for a CollectionVersion.
      properties:
        version:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        requires_ansible:
          type: string
          nullable: true
          maxLength: 255
        artifact:
          allOf:
            - $ref: '#/components/schemas/ArtifactRefResponse'
          readOnly: true
        collection:
          allOf:
            - $ref: '#/components/schemas/CollectionWithFixedHrefsRefResponse'
          readOnly: true
        download_url:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        namespace:
          allOf:
            - $ref: '#/components/schemas/CollectionNamespaceResponse'
          readOnly: true
        metadata:
          allOf:
            - $ref: '#/components/schemas/CollectionMetadataResponse'
          readOnly: true
        manifest:
          type: object
          readOnly: true
          description: A JSON field holding MANIFEST.json data.
        files:
          type: object
          readOnly: true
          description: A JSON field holding FILES.json data.
      required:
        - created_at
        - updated_at
    CollectionWithFixedHrefsRefResponse:
      type: object
      description: A serializer for a Collection reference.
      properties:
        id:
          type: string
        name:
          type: string
        href:
          type: string
          readOnly: true
      required:
        - id
        - name
    CollectionWithFixedHrefsResponse:
      type: object
      description: A serializer for a Collection.
      properties:
        href:
          type: string
          readOnly: true
        namespace:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        deprecated:
          type: boolean
          readOnly: true
        versions_url:
          type: string
          readOnly: true
        highest_version:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    Namespace:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        links:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceLink'
        groups:
          type: string
        resources:
          type: string
      required:
        - groups
        - name
    NamespaceLink:
      type: object
      properties:
        name:
          type: string
          maxLength: 32
        url:
          type: string
          maxLength: 256
      required:
        - name
        - url
    NamespaceLinkResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 32
        url:
          type: string
          maxLength: 256
      required:
        - name
        - url
    NamespaceResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        links:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceLinkResponse'
        groups:
          type: string
        resources:
          type: string
      required:
        - groups
        - name
    NamespaceSummaryResponse:
      type: object
      description: |-
        NamespaceSerializer but without 'links' or 'resources'.

        For use in _ui/collection detail views.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        groups:
          type: string
      required:
        - groups
    PaginatedCollectionVersionWithDownloadUrlResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'http://api.example.org/accounts/?offset=400&limit=100'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'http://api.example.org/accounts/?offset=200&limit=100'
        results:
          type: array
          items:
            $ref: '#/components/schemas/CollectionVersionWithDownloadUrlResponse'
    PaginatedCollectionWithFixedHrefsResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'http://api.example.org/accounts/?offset=400&limit=100'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'http://api.example.org/accounts/?offset=200&limit=100'
        results:
          type: array
          items:
            $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
    PaginatedNamespaceSummaryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'http://api.example.org/accounts/?offset=400&limit=100'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'http://api.example.org/accounts/?offset=200&limit=100'
        results:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceSummaryResponse'
    PaginatedTaskSummaryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'http://api.example.org/accounts/?offset=400&limit=100'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'http://api.example.org/accounts/?offset=200&limit=100'
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskSummaryResponse'
    PatchedCollectionWithFixedHrefs:
      type: object
      description: A serializer for a Collection.
      properties: {}
    TaskSummaryResponse:
      type: object
      description: |-
        TaskSerializer but without detail fields.

        For use in /tasks/<str:pk>/ detail views.
      properties:
        pulp_id:
          type: string
          format: uuid
        name:
          type: string
        repository:
          type: string
          nullable: true
          readOnly: true
        state:
          type: string
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        href:
          type: string
          readOnly: true
      required:
        - finished_at
        - name
        - pulp_id
        - started_at
        - state
    ansible.CollectionRemote:
      type: object
      description: A serializer for Collection Remotes.
      properties:
        url:
          type: string
          description: The URL of an external content source.
        auth_url:
          type: string
          nullable: true
          description: 'The URL to receive a session token from, e.g. used with Automation Hub.'
          maxLength: 255
        token:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 2000
        policy:
          allOf:
            - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        requirements_file:
          type: string
          nullable: true
          description: The string version of Collection requirements yaml.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
          description: Remote user.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: Remote password.
        tls_validation:
          type: boolean
          description: 'If True, TLS peer validation must be performed.'
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate presented by the remote server.
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          nullable: true
          description: User for proxy authentication.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: Password for proxy authentication.
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
      required:
        - url
    ansible.CollectionRemoteResponse:
      type: object
      description: A serializer for Collection Remotes.
      properties:
        pk:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        url:
          type: string
          description: The URL of an external content source.
        auth_url:
          type: string
          nullable: true
          description: 'The URL to receive a session token from, e.g. used with Automation Hub.'
          maxLength: 255
        policy:
          allOf:
            - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        requirements_file:
          type: string
          nullable: true
          description: The string version of Collection requirements yaml.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
          description: Remote user.
        tls_validation:
          type: boolean
          description: 'If True, TLS peer validation must be performed.'
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate presented by the remote server.
        last_sync_task:
          type: string
          readOnly: true
        repositories:
          type: string
          readOnly: true
        pulp_href:
          type: string
          format: uri
          readOnly: true
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          nullable: true
          description: User for proxy authentication.
        write_only_fields:
          type: string
          readOnly: true
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
      required:
        - url
    PolicyDb6Enum:
      enum:
        - immediate
        - 'When syncing, download all metadata and content now.'
      type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
  - url: 'http://localhost:5001/'
