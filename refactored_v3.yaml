openapi: 3.0.3
info:
  title: Automation Hub API
  version: v3
  description: Fetch, Upload, Organize, and Distribute Ansible Collections
  contact:
    name: Pulp Team
    email: pulp-list@redhat.com
    url: https://pulpproject.org
  license:
    name: GPLv2+
    url: https://raw.githubusercontent.com/ansible/galaxy_ng/master/LICENSE
  x-logo:
    url: https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg
  x-pulp-app-versions:
    core: 3.11.0.post0
    container: 2.5.2
    ansible: 0.7.1
    galaxy: 4.4.0dev
paths:
  /api/automation-hub/:
    get:
      operationId: api_automation_hub_get
      description: ''
      tags:
      - 'Api: Automation-Hub'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/_ui/:
    get:
      operationId: api_automation_hub__ui_read
      description: ''
      tags:
      - 'Api: _Ui'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/_ui/v1/auth/login/:
    get:
      operationId: api_automation_hub__ui_v1_auth_login_get
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui V1 Login'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/galaxy.LoginResponse'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_auth_login_post
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui V1 Login'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/galaxy.Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/galaxy.Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/galaxy.Login'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/galaxy.LoginResponse'
          description: ''
  /api/automation-hub/_ui/v1/auth/logout/:
    post:
      operationId: api_automation_hub__ui_v1_auth_logout_post
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui V1 Logout'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/_ui/v1/collection-versions/:
    get:
      operationId: api_automation_hub__ui_v1_collection_versions_list
      description: ''
      summary: List collection versions
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: repository
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - collection
            - namespace
            - pulp_created
            - version
        description: Ordering
        explode: false
        style: form
      - in: query
        name: version
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Collection-Versions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedgalaxy.LoginResponseList'
          description: ''
  /api/automation-hub/_ui/v1/execution-environments/repositories/:
    get:
      operationId: api_automation_hub__ui_v1_execution_environments_repositories_list
      description: ''
      summary: List container distributions
      parameters:
      - in: query
        name: description
        schema:
          type: string
          nullable: true
      - in: query
        name: description__contains
        schema:
          type: string
          nullable: true
      - in: query
        name: description__icontains
        schema:
          type: string
          nullable: true
      - in: query
        name: description__startswith
        schema:
          type: string
          nullable: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: my_permissions
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: name__startswith
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -created
            - -description
            - -name
            - -updated
            - created
            - description
            - name
            - updated
        description: Ordering
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Repositories'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContainerRepositoryResponseList'
          description: ''

  /api/automation-hub/_ui/v1/execution-environments/repositories/{base_path}/_content/history/:
    get:
      operationId: api_automation_hub__ui_v1_execution_environments_repositories__content_history_list
      description: ''
      parameters:
      - in: path
        name: base_path
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Execution-Environments Repositories History'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContainerRepositoryHistoryResponseList'
          description: ''
  /api/automation-hub/_ui/v1/execution-environments/repositories/{base_path}/_content/images/:
    get:
      operationId: api_automation_hub__ui_v1_execution_environments_repositories__content_images_list
      description: ''
      parameters:
      - in: path
        name: base_path
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Execution-Environments Repositories Images'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContainerManifestResponseList'
          description: ''
  /api/automation-hub/_ui/v1/execution-environments/repositories/{base_path}/_content/images/{manifest_ref}/:
    get:
      operationId: api_automation_hub__ui_v1_execution_environments_repositories__content_images_read
      description: ''
      parameters:
      - in: path
        name: base_path
        schema:
          type: string
        required: true
      - in: path
        name: manifest_ref
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Execution-Environments Repositories Images'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerManifestDetailResponse'
          description: ''
  /api/automation-hub/_ui/v1/feature-flags/:
    get:
      operationId: api_automation_hub__ui_v1_feature_flags_get
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui Feature-Flags'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/_ui/v1/groups/:
    get:
      operationId: groups_list
      description: |-
        ViewSet for Group.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: List groups
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__startswith
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -name
            - name
        description: Ordering
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Groups
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupResponseList'
          description: ''
    post:
      operationId: groups_create
      description: |-
        ViewSet for Group.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Create a group
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: ''
  /api/automation-hub/_ui/v1/imports/collections/:
    get:
      operationId: api_automation_hub__ui_v1_imports_collections_list
      description: ViewSet for CollectionImports.
      summary: List collection imports
      parameters:
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -created
            - created
        description: Ordering
        explode: false
        style: form
      - in: query
        name: version
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImportTaskListResponseList'
          description: ''
  /api/automation-hub/_ui/v1/me/:
    get:
      operationId: api_automation_hub__ui_v1_me_read
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui Me'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUserResponse'
          description: ''
    put:
      operationId: api_automation_hub__ui_v1_me_update
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui Me'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurrentUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurrentUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUserResponse'
          description: ''
  /api/automation-hub/_ui/v1/my-distributions/:
    get:
      operationId: api_automation_hub__ui_v1_my_distributions_list
      description: ''
      summary: List ansible distributions
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui My-Distributions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDistributionResponseList'
          description: ''
  /api/automation-hub/_ui/v1/my-namespaces/:
    get:
      operationId: api_automation_hub__ui_v1_my_namespaces_list
      description: ''
      summary: List namespaces
      parameters:
      - in: query
        name: company
        schema:
          type: string
      - in: query
        name: keywords
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -company
            - -id
            - -name
            - company
            - id
            - name
        description: Ordering
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui My-Namespaces'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNamespaceSummaryResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_my_namespaces_create
      description: Override to validate for name duplication before serializer validation.
      summary: Create a namespace
      tags:
      - 'Api: Automation-Hub _Ui My-Namespaces'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Namespace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponse'
          description: ''
  /api/automation-hub/_ui/v1/my-synclists/:
    get:
      operationId: api_automation_hub__ui_v1_my_synclists_list
      description: ''
      summary: List sync lists
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui My-Synclists'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSyncListResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_my_synclists_create
      description: ''
      summary: Create a sync list
      tags:
      - 'Api: Automation-Hub _Ui My-Synclists'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyncList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyncList'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncListResponse'
          description: ''
  /api/automation-hub/_ui/v1/namespaces/:
    get:
      operationId: api_automation_hub__ui_v1_namespaces_list
      description: ''
      summary: List namespaces
      parameters:
      - in: query
        name: company
        schema:
          type: string
      - in: query
        name: keywords
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -company
            - -id
            - -name
            - company
            - id
            - name
        description: Ordering
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Namespaces'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNamespaceSummaryResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_namespaces_create
      description: Override to validate for name duplication before serializer validation.
      summary: Create a namespace
      tags:
      - 'Api: Automation-Hub _Ui Namespaces'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Namespace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponse'
          description: ''
  /api/automation-hub/_ui/v1/remotes/:
    get:
      operationId: api_automation_hub__ui_v1_remotes_list
      description: ''
      summary: List collection remotes
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Remotes'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedansible.CollectionRemoteResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_remotes_create
      description: ''
      summary: Create a collection remote
      tags:
      - 'Api: Automation-Hub _Ui Remotes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.CollectionRemoteResponse'
          description: ''
  /api/automation-hub/_ui/v1/repo/{path}/:
    get:
      operationId: api_automation_hub__ui_v1_repo_list
      description: |-
        Viewset that uses CollectionVersion's within distribution to display data for Collection's.

        Collection list is filterable by FilterSet and includes latest CollectionVersion.

        Collection detail includes CollectionVersion that is latest or via query param 'version'.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Repo'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedgalaxy.LoginResponseList'
          description: ''
  /api/automation-hub/_ui/v1/repo/{path}/{namespace}/{name}/:
    get:
      operationId: api_automation_hub__ui_v1_repo_read
      description: |-
        Viewset that uses CollectionVersion's within distribution to display data for Collection's.

        Collection list is filterable by FilterSet and includes latest CollectionVersion.

        Collection detail includes CollectionVersion that is latest or via query param 'version'.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Repo'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/galaxy.LoginResponse'
          description: ''
  /api/automation-hub/_ui/v1/synclists/:
    get:
      operationId: api_automation_hub__ui_v1_synclists_list
      description: ''
      summary: List sync lists
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Synclists'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSyncListResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_synclists_create
      description: ''
      summary: Create a sync list
      tags:
      - 'Api: Automation-Hub _Ui Synclists'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyncList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyncList'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncListResponse'
          description: ''
  /api/automation-hub/_ui/v1/tags/:
    get:
      operationId: api_automation_hub__ui_v1_tags_list
      description: ''
      summary: List tags
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Tags'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagResponseList'
          description: ''
  /api/automation-hub/_ui/v1/users/:
    get:
      operationId: api_automation_hub__ui_v1_users_list
      description: ''
      summary: List users
      parameters:
      - in: query
        name: date_joined
        schema:
          type: string
          format: date-time
      - in: query
        name: email
        schema:
          type: string
          format: email
      - in: query
        name: email__contains
        schema:
          type: string
          format: email
      - in: query
        name: email__startswith
        schema:
          type: string
          format: email
      - in: query
        name: first_name
        schema:
          type: string
      - in: query
        name: first_name__contains
        schema:
          type: string
      - in: query
        name: first_name__startswith
        schema:
          type: string
      - in: query
        name: groups
        schema:
          type: array
          items:
            type: integer
        description: The groups this user belongs to. A user will get all permissions
          granted to each of their groups.
      - in: query
        name: groups__name
        schema:
          type: string
      - in: query
        name: last_name
        schema:
          type: string
      - in: query
        name: last_name__contains
        schema:
          type: string
      - in: query
        name: last_name__startswith
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -date_joined
            - -email
            - -first_name
            - -last_name
            - -username
            - date_joined
            - email
            - first_name
            - last_name
            - username
        description: Ordering
        explode: false
        style: form
      - in: query
        name: username
        schema:
          type: string
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
      - in: query
        name: username__contains
        schema:
          type: string
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
      - in: query
        name: username__startswith
        schema:
          type: string
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Users'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_users_create
      description: ''
      summary: Create an user
      tags:
      - 'Api: Automation-Hub _Ui Users'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
  /api/automation-hub/api/:
    get:
      operationId: api_automation_hub_api_get
      description: ''
      tags:
      - 'Api: Api'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/:
    get:
      operationId: api_automation_hub_content_get
      description: ''
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Content'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/api/:
    get:
      operationId: api_automation_hub_content_api_get
      description: ''
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Api'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/v3/artifacts/collections/:
    post:
      operationId: api_automation_hub_content_v3_artifacts_collections_create
      description: Dispatch a Collection creation task.
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Content V3 Collections'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionUploadWithDownloadUrl'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionUploadWithDownloadUrl'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionUploadWithDownloadUrlResponse'
          description: ''
  /api/automation-hub/content/{path}/v3/artifacts/collections/{path}/{filename}:
    get:
      operationId: api_automation_hub_content_v3_artifacts_collections_read
      description: ''
      parameters:
      - in: path
        name: filename
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content V3 Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/v3/collections/:
    get:
      operationId: api_automation_hub_content_v3_collections_list
      description: ViewSet for Collections.
      parameters:
      - in: query
        name: deprecated
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionWithFixedHrefsResponseList'
          description: ''
  /api/automation-hub/content/{path}/v3/collections/{namespace}/{name}/:
    get:
      operationId: api_automation_hub_content_v3_collections_read
      description: ViewSet for Collections.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
          description: ''
    patch:
      operationId: api_automation_hub_content_v3_collections_update
      description: Update a Collection object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Content Collections'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
          description: ''
  /api/automation-hub/content/{path}/v3/collections/{namespace}/{name}/versions/:
    get:
      operationId: api_automation_hub_content_v3_collections_versions_list
      description: Returns paginated CollectionVersions list.
      parameters:
      - in: query
        name: is_highest
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: query
        name: name
        schema:
          type: string
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: tags
        schema:
          type: string
        description: Filter by comma separate list of tags that must all be matched
      - in: query
        name: version
        schema:
          type: string
        description: Filter results where version matches value
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content V3 Versions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionVersionWithDownloadUrlResponseList'
          description: ''
  /api/automation-hub/content/{path}/v3/collections/{namespace}/{name}/versions/{version}/:
    get:
      operationId: api_automation_hub_content_v3_collections_versions_read
      description: Returns a CollectionVersion object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content V3 Versions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionWithDownloadUrlResponse'
          description: ''
  /api/automation-hub/content/{path}/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/:
    get:
      operationId: api_automation_hub_content_v3_collections_versions_docs_blob_read
      description: Returns a CollectionVersion object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content V3 Collections Docs-Blob'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionDocsResponse'
          description: ''
  /api/automation-hub/content/{path}/v3/collections/{namespace}/{name}/versions/{version}/move/{source_path}/{dest_path}/:
    post:
      operationId: api_automation_hub_content_v3_collections_versions_move_move_content
      description: |-
        Remove content from source repo and add to destination repo.

        Creates new RepositoryVersion of source repo without content included.
        Creates new RepositoryVersion of destination repo with content included.
      parameters:
      - in: path
        name: dest_path
        schema:
          type: string
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: path
        name: source_path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Content V3 Collections Move'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/v3/sync/:
    post:
      operationId: api_automation_hub_content_v3_sync_sync
      description: ''
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Content Sync'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/v3/sync/config/:
    get:
      operationId: api_automation_hub_content_v3_sync_config_read
      description: ''
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content V3 Config'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.CollectionRemoteResponse'
          description: ''
    put:
      operationId: api_automation_hub_content_v3_sync_config_update
      description: ''
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Content V3 Config'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.CollectionRemoteResponse'
          description: ''
  /api/automation-hub/v3/artifacts/collections/:
    post:
      operationId: api_automation_hub_v3_artifacts_collections_create
      description: Dispatch a Collection creation task.
      tags:
      - 'Api: Automation-Hub V3 Collections'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionUploadWithDownloadUrl'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionUploadWithDownloadUrl'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionUploadWithDownloadUrlResponse'
          description: ''
  /api/automation-hub/v3/artifacts/collections/{path}/{filename}:
    get:
      operationId: api_automation_hub_v3_artifacts_collections_read
      description: ''
      parameters:
      - in: path
        name: filename
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub V3 Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/v3/auth/token/:
    post:
      operationId: api_automation_hub_v3_auth_token_post
      description: Create or refresh user token.
      tags:
      - 'Api: Automation-Hub V3 Token'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_automation_hub_v3_auth_token_delete
      description: Invalidate user token.
      tags:
      - 'Api: Automation-Hub V3 Token'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/automation-hub/v3/collections/:
    get:
      operationId: api_automation_hub_v3_collections_list
      description: ViewSet for Collections.
      parameters:
      - in: query
        name: deprecated
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionWithFixedHrefsResponseList'
          description: ''
  /api/automation-hub/v3/collections/{namespace}/{name}/:
    get:
      operationId: api_automation_hub_v3_collections_read
      description: ViewSet for Collections.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
          description: ''
    patch:
      operationId: api_automation_hub_v3_collections_update
      description: Update a Collection object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Collections'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
          description: ''
  /api/automation-hub/v3/collections/{namespace}/{name}/versions/:
    get:
      operationId: api_automation_hub_v3_collections_versions_list
      description: Returns paginated CollectionVersions list.
      parameters:
      - in: query
        name: is_highest
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: query
        name: name
        schema:
          type: string
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: tags
        schema:
          type: string
        description: Filter by comma separate list of tags that must all be matched
      - in: query
        name: version
        schema:
          type: string
        description: Filter results where version matches value
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub V3 Versions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionVersionWithDownloadUrlResponseList'
          description: ''
  /api/automation-hub/v3/collections/{namespace}/{name}/versions/{version}/:
    get:
      operationId: api_automation_hub_v3_collections_versions_read
      description: Returns a CollectionVersion object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub V3 Versions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionWithDownloadUrlResponse'
          description: ''
  /api/automation-hub/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/:
    get:
      operationId: api_automation_hub_v3_collections_versions_docs_blob_read
      description: Returns a CollectionVersion object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub V3 Collections Docs-Blob'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionDocsResponse'
          description: ''
  /api/automation-hub/v3/collections/{namespace}/{name}/versions/{version}/move/{source_path}/{dest_path}/:
    post:
      operationId: api_automation_hub_v3_collections_versions_move_move_content
      description: |-
        Remove content from source repo and add to destination repo.

        Creates new RepositoryVersion of source repo without content included.
        Creates new RepositoryVersion of destination repo with content included.
      parameters:
      - in: path
        name: dest_path
        schema:
          type: string
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: source_path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub V3 Collections Move'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/v3/namespaces/:
    get:
      operationId: api_automation_hub_v3_namespaces_list
      description: ''
      summary: List namespaces
      parameters:
      - in: query
        name: company
        schema:
          type: string
      - in: query
        name: keywords
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -company
            - -id
            - -name
            - company
            - id
            - name
        description: Ordering
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Namespaces'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNamespaceSummaryResponseList'
          description: ''
    post:
      operationId: api_automation_hub_v3_namespaces_create
      description: Override to validate for name duplication before serializer validation.
      summary: Create a namespace
      tags:
      - 'Api: Automation-Hub Namespaces'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Namespace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponse'
          description: ''
  /api/automation-hub/v3/openapi.json:
    get:
      operationId: api_automation_hub_v3_openapi.json_get
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - th
          - tr
          - tt
          - udm
          - uk
          - ur
          - vi
          - zh-hans
          - zh-hant
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Openapi.Json'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/automation-hub/v3/openapi.yaml:
    get:
      operationId: api_automation_hub_v3_openapi.yaml_get
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - th
          - tr
          - tt
          - udm
          - uk
          - ur
          - vi
          - zh-hans
          - zh-hant
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Openapi.Yaml'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/automation-hub/v3/tasks/:
    get:
      operationId: tasks_list
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: List tasks
      parameters:
      - in: query
        name: child_tasks
        schema:
          type: string
          format: uuid
        description: Foreign Key referenced by HREF
      - in: query
        name: created_resources
        schema:
          type: string
          format: uuid
      - in: query
        name: finished_at
        schema:
          type: string
          format: date-time
          nullable: true
        description: ISO 8601 formatted dates are supported
      - in: query
        name: finished_at__gt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is greater than value
      - in: query
        name: finished_at__gte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is greater than or equal to
          value
      - in: query
        name: finished_at__lt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is less than value
      - in: query
        name: finished_at__lte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is less than or equal to value
      - in: query
        name: finished_at__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            nullable: true
        description: Filter results where finished_at is between two comma separated
          values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: parent_task
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: reserved_resources_record
        schema:
          type: string
          format: uuid
      - in: query
        name: started_at
        schema:
          type: string
          format: date-time
          nullable: true
        description: ISO 8601 formatted dates are supported
      - in: query
        name: started_at__gt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is greater than value
      - in: query
        name: started_at__gte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is greater than or equal to value
      - in: query
        name: started_at__lt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is less than value
      - in: query
        name: started_at__lte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is less than or equal to value
      - in: query
        name: started_at__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            nullable: true
        description: Filter results where started_at is between two comma separated
          values
        explode: false
        style: form
      - in: query
        name: state
        schema:
          type: string
          enum:
          - canceled
          - completed
          - failed
          - running
          - skipped
          - waiting
      - in: query
        name: state__in
        schema:
          type: array
          items:
            type: string
            enum:
            - canceled
            - completed
            - failed
            - running
            - skipped
            - waiting
        description: Filter results where state is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: task_group
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: worker
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: worker__in
        schema:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
        description: Filter results where worker is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Tasks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskSummaryResponseList'
          description: ''
components:
  schemas:
    AccessPolicyResponse:
      type: object
      description: Serializer for AccessPolicy.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        permissions_assignment:
          type: array
          items:
            type: object
          description: List of callables that define the new permissions to be created
            for new objects.
        statements:
          type: array
          items:
            type: object
          description: List of policy statements defining the policy.
        viewset_name:
          type: string
          readOnly: true
          description: The name of ViewSet this AccessPolicy authorizes.
        customized:
          type: boolean
          readOnly: true
          description: True if the AccessPolicy has been user-modified. False otherwise.
      required:
      - permissions_assignment
      - statements
    ArtifactRefResponse:
      type: object
      description: A serializer for an Artifact reference.
      properties:
        filename:
          type: string
        sha256:
          type: string
        size:
          type: integer
      required:
      - filename
      - sha256
      - size
    ArtifactResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        file:
          type: string
          description: The stored file.
        size:
          type: integer
          description: The size of the file in bytes.
        md5:
          type: string
          nullable: true
          description: The MD5 checksum of the file if available.
        sha1:
          type: string
          nullable: true
          description: The SHA-1 checksum of the file if available.
        sha224:
          type: string
          nullable: true
          description: The SHA-224 checksum of the file if available.
        sha256:
          type: string
          nullable: true
          description: The SHA-256 checksum of the file if available.
        sha384:
          type: string
          nullable: true
          description: The SHA-384 checksum of the file if available.
        sha512:
          type: string
          nullable: true
          description: The SHA-512 checksum of the file if available.
      required:
      - file
    CollectionMetadataResponse:
      type: object
      description: A serializer for a CollectionVersion metadata.
      properties:
        authors:
          type: array
          items:
            type: string
          readOnly: true
        contents:
          type: object
          readOnly: true
        dependencies:
          type: object
          readOnly: true
        description:
          type: string
          readOnly: true
        documentation:
          type: string
          readOnly: true
        homepage:
          type: string
          readOnly: true
        issues:
          type: string
          readOnly: true
        license:
          type: array
          items:
            type: string
          readOnly: true
        repository:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: string
      required:
      - tags
    CollectionNamespaceResponse:
      type: object
      description: A serializer for a Collection Version namespace field.
      properties:
        name:
          type: string
      required:
      - name
    CollectionRefResponse:
      type: object
      description: A serializer for a Collection reference.
      properties:
        id:
          type: string
        name:
          type: string
        href:
          type: string
          readOnly: true
      required:
      - id
      - name
    CollectionResponse:
      type: object
      description: A serializer for a Collection.
      properties:
        href:
          type: string
          readOnly: true
        namespace:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        deprecated:
          type: boolean
          readOnly: true
        versions_url:
          type: string
          readOnly: true
        highest_version:
          type: object
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    CollectionUploadWithDownloadUrl:
      type: object
      description: A serializer for the Collection One Shot Upload API.
      properties:
        file:
          type: string
          format: binary
        sha256:
          type: string
      required:
      - file
    CollectionUploadWithDownloadUrlResponse:
      type: object
      description: A serializer for the Collection One Shot Upload API.
      properties:
        file:
          type: string
        sha256:
          type: string
      required:
      - file
    CollectionVersionDocsResponse:
      type: object
      description: A serializer to display the docs_blob of a CollectionVersion.
      properties:
        docs_blob:
          type: object
      required:
      - docs_blob
    CollectionVersionResponse:
      type: object
      description: A serializer for a CollectionVersion.
      properties:
        version:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        requires_ansible:
          type: string
          nullable: true
          maxLength: 255
        artifact:
          allOf:
          - $ref: '#/components/schemas/ArtifactRefResponse'
          readOnly: true
        collection:
          allOf:
          - $ref: '#/components/schemas/CollectionRefResponse'
          readOnly: true
        download_url:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        namespace:
          allOf:
          - $ref: '#/components/schemas/CollectionNamespaceResponse'
          readOnly: true
        metadata:
          allOf:
          - $ref: '#/components/schemas/CollectionMetadataResponse'
          readOnly: true
        manifest:
          type: object
          readOnly: true
          description: A JSON field holding MANIFEST.json data.
        files:
          type: object
          readOnly: true
          description: A JSON field holding FILES.json data.
      required:
      - created_at
      - updated_at
    CollectionVersionWithDownloadUrlResponse:
      type: object
      description: A serializer for a CollectionVersion.
      properties:
        version:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        requires_ansible:
          type: string
          nullable: true
          maxLength: 255
        artifact:
          allOf:
          - $ref: '#/components/schemas/ArtifactRefResponse'
          readOnly: true
        collection:
          allOf:
          - $ref: '#/components/schemas/CollectionWithFixedHrefsRefResponse'
          readOnly: true
        download_url:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        namespace:
          allOf:
          - $ref: '#/components/schemas/CollectionNamespaceResponse'
          readOnly: true
        metadata:
          allOf:
          - $ref: '#/components/schemas/CollectionMetadataResponse'
          readOnly: true
        manifest:
          type: object
          readOnly: true
          description: A JSON field holding MANIFEST.json data.
        files:
          type: object
          readOnly: true
          description: A JSON field holding FILES.json data.
      required:
      - created_at
      - updated_at
    CollectionWithFixedHrefsRefResponse:
      type: object
      description: A serializer for a Collection reference.
      properties:
        id:
          type: string
        name:
          type: string
        href:
          type: string
          readOnly: true
      required:
      - id
      - name
    CollectionWithFixedHrefsResponse:
      type: object
      description: A serializer for a Collection.
      properties:
        href:
          type: string
          readOnly: true
        namespace:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        deprecated:
          type: boolean
          readOnly: true
        versions_url:
          type: string
          readOnly: true
        highest_version:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    ContainerManifestDetailResponse:
      type: object
      properties:
        pulp_id:
          type: string
          format: uuid
          readOnly: true
        digest:
          type: string
          maxLength: 255
        schema_version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        media_type:
          $ref: '#/components/schemas/MediaTypeEnum'
        config_blob:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
        layers:
          type: string
          readOnly: true
      required:
      - digest
      - media_type
      - schema_version
    ContainerManifestResponse:
      type: object
      properties:
        pulp_id:
          type: string
          format: uuid
          readOnly: true
        digest:
          type: string
          maxLength: 255
        schema_version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        media_type:
          $ref: '#/components/schemas/MediaTypeEnum'
        config_blob:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
        layers:
          type: string
          readOnly: true
      required:
      - digest
      - media_type
      - schema_version
    ContainerNamespaceDetail:
      type: object
      properties:
        groups:
          type: string
      required:
      - groups
    ContainerNamespaceDetailResponse:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        my_permissions:
          allOf:
          - $ref: '#/components/schemas/MyPermissionsFieldResponse'
          readOnly: true
        owners:
          type: string
          readOnly: true
        groups:
          type: string
      required:
      - groups
    ContainerNamespaceResponse:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        my_permissions:
          allOf:
          - $ref: '#/components/schemas/MyPermissionsFieldResponse'
          readOnly: true
        owners:
          type: string
          readOnly: true
    ContainerReadme:
      type: object
      properties:
        text:
          type: string
    ContainerReadmeResponse:
      type: object
      properties:
        updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
    ContainerRepositoryHistoryResponse:
      type: object
      properties:
        pulp_id:
          type: string
          format: uuid
          readOnly: true
        added:
          type: string
          readOnly: true
        removed:
          type: string
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
        number:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - number
    ContainerRepositoryResponse:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        pulp:
          type: string
          readOnly: true
        namespace:
          $ref: '#/components/schemas/ContainerNamespaceResponse'
        description:
          type: string
          readOnly: true
        created:
          type: string
          readOnly: true
        updated:
          type: string
          readOnly: true
      required:
      - namespace
    ContentAppStatusResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the worker.
        last_heartbeat:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the last time the worker talked to the service.
    ContentGuardResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: The unique name.
        description:
          type: string
          nullable: true
          description: An optional description.
      required:
      - name
    ContentSummary:
      type: object
      description: Serializer for the RepositoryVersion content summary
      properties:
        added:
          type: object
        removed:
          type: object
        present:
          type: object
      required:
      - added
      - present
      - removed
    ContentSummaryResponse:
      type: object
      description: Serializer for the RepositoryVersion content summary
      properties:
        added:
          type: object
        removed:
          type: object
        present:
          type: object
      required:
      - added
      - present
      - removed
    Copy:
      type: object
      description: A serializer for Content Copy API.
      properties:
        config:
          type: object
          description: A JSON document describing sources, destinations, and content
            to be copied
      required:
      - config
    CurrentUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - username
    CurrentUserResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          readOnly: true
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
        model_permissions:
          type: string
          readOnly: true
      required:
      - username
    DatabaseConnectionResponse:
      type: object
      description: Serializer for the database connection information
      properties:
        connected:
          type: boolean
          description: Info about whether the app can connect to the database
      required:
      - connected
    DistributionResponse:
      type: object
      properties:
        pulp_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        base_path:
          type: string
        repository:
          $ref: '#/components/schemas/RepositoryResponse'
      required:
      - base_path
      - name
      - repository
    EvaluationResponse:
      type: object
      description: Results from evaluating a proposed parameter to a PulpImport call.
      properties:
        context:
          type: string
          description: Parameter value being evaluated.
        is_valid:
          type: boolean
          description: True if evaluation passed, false otherwise.
        messages:
          type: array
          items:
            type: string
          description: Messages describing results of all evaluations done. May be
            an empty list.
      required:
      - context
      - is_valid
      - messages
    GalaxyCollection:
      type: object
      description: A serializer for a Collection.
      properties:
        id:
          type: string
        name:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
      required:
      - created
      - id
      - modified
      - name
    GalaxyCollectionResponse:
      type: object
      description: A serializer for a Collection.
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: object
          readOnly: true
        href:
          type: string
          readOnly: true
        versions_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        latest_version:
          type: object
          readOnly: true
      required:
      - created
      - id
      - modified
      - name
    GalaxyCollectionVersionResponse:
      type: object
      description: A serializer for a CollectionVersion.
      properties:
        version:
          type: string
        href:
          type: string
          readOnly: true
        namespace:
          type: object
          readOnly: true
        collection:
          type: object
          readOnly: true
        artifact:
          type: object
          readOnly: true
        metadata:
          $ref: '#/components/schemas/CollectionMetadataResponse'
      required:
      - metadata
      - version
    GalaxyRoleResponse:
      type: object
      description: A serializer for Galaxy's representation of Roles.
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      - namespace
    GalaxyRoleVersionResponse:
      type: object
      description: A serializer for Galaxy's representation of Role versions.
      properties:
        name:
          type: string
        source:
          type: string
          readOnly: true
      required:
      - name
    Group:
      type: object
      description: Serializer for Group.
      properties:
        name:
          type: string
          description: Name
          maxLength: 150
      required:
      - name
    GroupProgressReportResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        message:
          type: string
          readOnly: true
          description: The message shown to the user for the group progress report.
        code:
          type: string
          readOnly: true
          description: Identifies the type of group progress report'.
        total:
          type: integer
          readOnly: true
          description: The total count of items.
        done:
          type: integer
          readOnly: true
          description: The count of items already processed. Defaults to 0.
        suffix:
          type: string
          readOnly: true
          nullable: true
          description: The suffix to be shown with the group progress report.
    GroupResponse:
      type: object
      description: Serializer for Group.
      properties:
        name:
          type: string
          description: Name
          maxLength: 150
        pulp_href:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
      required:
      - name
    GroupUser:
      type: object
      description: Serializer for Users that belong to a Group.
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          maxLength: 150
      required:
      - username
    GroupUserResponse:
      type: object
      description: Serializer for Users that belong to a Group.
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          maxLength: 150
        pulp_href:
          type: string
          format: uri
          readOnly: true
      required:
      - username
    ImportResponse:
      type: object
      description: Serializer for Imports.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        task:
          type: string
          format: uri
          description: A URI of the Task that ran the Import.
        params:
          type: object
          description: Any parameters that were used to create the import.
      required:
      - params
      - task
    ImportTaskDetailResponse:
      type: object
      description: A serializer for a CollectionImport list view.
      properties:
        id:
          type: string
          format: uuid
        state:
          type: string
        namespace:
          type: string
        name:
          type: string
        version:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        error:
          type: object
        messages:
          type: object
      required:
      - created_at
      - error
      - finished_at
      - id
      - messages
      - name
      - namespace
      - started_at
      - state
      - updated_at
      - version
    ImportTaskListResponse:
      type: object
      description: A serializer for a CollectionImport list view.
      properties:
        id:
          type: string
          format: uuid
        state:
          type: string
        namespace:
          type: string
        name:
          type: string
        version:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
      required:
      - created_at
      - finished_at
      - id
      - name
      - namespace
      - started_at
      - state
      - updated_at
      - version
    ManifestCopy:
      type: object
      description: Serializer for copying manifests from a source repository to a
        destination repository.
      properties:
        source_repository:
          type: string
          format: uri
          description: A URI of the repository to copy content from.
        source_repository_version:
          type: string
          format: uri
          description: A URI of the repository version to copy content from.
        digests:
          type: array
          items: {}
          description: A list of manifest digests to copy.
        media_types:
          type: array
          items:
            $ref: '#/components/schemas/MediaTypesEnum'
          description: A list of media_types to copy.
    MediaTypeEnum:
      enum:
      - application/vnd.docker.distribution.manifest.v1+json
      - application/vnd.docker.distribution.manifest.v2+json
      - application/vnd.docker.distribution.manifest.list.v2+json
      - application/vnd.oci.image.manifest.v1+json
      - application/vnd.oci.image.index.v1+json
      type: string
    MediaTypesEnum:
      enum:
      - application/vnd.docker.distribution.manifest.v1+json
      - application/vnd.docker.distribution.manifest.v2+json
      - application/vnd.docker.distribution.manifest.list.v2+json
      - application/vnd.oci.image.manifest.v1+json
      - application/vnd.oci.image.index.v1+json
      type: string
    MultipleArtifactContentResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        artifacts:
          type: object
          description: 'A dict mapping relative paths inside the Content to the correspondingArtifact
            URLs. E.g.: {''relative/path'': ''/artifacts/1/'''
      required:
      - artifacts
    MyPermissionsField:
      type: object
    MyPermissionsFieldResponse:
      type: object
    Namespace:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        links:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceLink'
        groups:
          type: string
        resources:
          type: string
      required:
      - groups
      - name
    NamespaceLink:
      type: object
      properties:
        name:
          type: string
          maxLength: 32
        url:
          type: string
          maxLength: 256
      required:
      - name
      - url
    NamespaceLinkResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 32
        url:
          type: string
          maxLength: 256
      required:
      - name
      - url
    NamespaceResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        links:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceLinkResponse'
        groups:
          type: string
        resources:
          type: string
      required:
      - groups
      - name
    NamespaceSummaryResponse:
      type: object
      description: |-
        NamespaceSerializer but without 'links' or 'resources'.

        For use in _ui/collection detail views.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        groups:
          type: string
      required:
      - groups
    OCIBuildImage:
      type: object
      description: |-
        Serializer for building an OCI container image from a Containerfile.

        The Containerfile can either be specified via an artifact url, or a new file can be uploaded.
        A repository must be specified, to which the container image content will be added.
      properties:
        containerfile_artifact:
          type: string
          format: uri
          description: Artifact representing the Containerfile that should be used
            to run buildah.
        containerfile:
          type: string
          format: binary
          description: An uploaded Containerfile that should be used to run buildah.
        tag:
          type: string
          default: latest
          description: A tag name for the new image being built.
        artifacts:
          type: object
          description: A JSON string where each key is an artifact href and the value
            is it's relative path (name) inside the /pulp_working_directory of the
            build container executing the Containerfile.
    PaginatedAccessPolicyResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccessPolicyResponse'
    PaginatedArtifactResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactResponse'
    PaginatedCollectionResponseList:
      type: object
      properties:
        meta:
          type: object
          properties:
            count:
              type: integer
              example: 123
        links:
          type: object
          properties:
            first:
              type: string
              nullable: true
            previous:
              type: string
              nullable: true
            next:
              type: string
              nullable: true
            last:
              type: string
              nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/CollectionResponse'
    PaginatedCollectionVersionResponseList:
      type: object
      properties:
        meta:
          type: object
          properties:
            count:
              type: integer
              example: 123
        links:
          type: object
          properties:
            first:
              type: string
              nullable: true
            previous:
              type: string
              nullable: true
            next:
              type: string
              nullable: true
            last:
              type: string
              nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/CollectionVersionResponse'
    PaginatedCollectionVersionWithDownloadUrlResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CollectionVersionWithDownloadUrlResponse'
    PaginatedCollectionWithFixedHrefsResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
    PaginatedContainerManifestResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContainerManifestResponse'
    PaginatedContainerNamespaceDetailResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContainerNamespaceDetailResponse'
    PaginatedContainerRepositoryHistoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContainerRepositoryHistoryResponse'
    PaginatedContainerRepositoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContainerRepositoryResponse'
    PaginatedContentGuardResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContentGuardResponse'
    PaginatedDistributionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DistributionResponse'
    PaginatedGalaxyCollectionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GalaxyCollectionResponse'
    PaginatedGalaxyCollectionVersionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GalaxyCollectionVersionResponse'
    PaginatedGalaxyRoleResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GalaxyRoleResponse'
    PaginatedGalaxyRoleVersionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GalaxyRoleVersionResponse'
    PaginatedGroupResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupResponse'
    PaginatedGroupUserResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupUserResponse'
    PaginatedImportResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ImportResponse'
    PaginatedImportTaskListResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ImportTaskListResponse'
    PaginatedMultipleArtifactContentResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MultipleArtifactContentResponse'
    PaginatedNamespaceSummaryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceSummaryResponse'
    PaginatedPermissionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PermissionResponse'
    PaginatedPulpExportResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PulpExportResponse'
    PaginatedPulpExporterResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PulpExporterResponse'
    PaginatedPulpImporterResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PulpImporterResponse'
    PaginatedRepositoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryResponse'
    PaginatedRepositoryVersionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryVersionResponse'
    PaginatedSigningServiceResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SigningServiceResponse'
    PaginatedSyncListResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SyncListResponse'
    PaginatedTagResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
    PaginatedTaskGroupResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskGroupResponse'
    PaginatedTaskResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskResponse'
    PaginatedTaskSummaryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskSummaryResponse'
    PaginatedUploadResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UploadResponse'
    PaginatedUserResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
    PaginatedWorkerResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkerResponse'
    Paginatedansible.AnsibleDistributionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.AnsibleDistributionResponse'
    Paginatedansible.AnsibleRepositoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.AnsibleRepositoryResponse'
    Paginatedansible.CollectionRemoteResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.CollectionRemoteResponse'
    Paginatedansible.CollectionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.CollectionResponse'
    Paginatedansible.CollectionVersionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.CollectionVersionResponse'
    Paginatedansible.RoleRemoteResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.RoleRemoteResponse'
    Paginatedansible.RoleResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.RoleResponse'
    Paginatedcontainer.BlobResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.BlobResponse'
    Paginatedcontainer.ContainerDistributionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContainerDistributionResponse'
    Paginatedcontainer.ContainerNamespaceResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContainerNamespaceResponse'
    Paginatedcontainer.ContainerPushRepositoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContainerPushRepositoryResponse'
    Paginatedcontainer.ContainerRemoteResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContainerRemoteResponse'
    Paginatedcontainer.ContainerRepositoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContainerRepositoryResponse'
    Paginatedcontainer.ContentRedirectContentGuardResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContentRedirectContentGuardResponse'
    Paginatedcontainer.ManifestResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ManifestResponse'
    Paginatedcontainer.TagResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.TagResponse'
    Paginatedgalaxy.LoginResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/galaxy.LoginResponse'
    PatchedAccessPolicy:
      type: object
      description: Serializer for AccessPolicy.
      properties:
        permissions_assignment:
          type: array
          items:
            type: object
          description: List of callables that define the new permissions to be created
            for new objects.
        statements:
          type: array
          items:
            type: object
          description: List of policy statements defining the policy.
    PatchedCollection:
      type: object
      description: A serializer for a Collection.
      properties: {}
    PatchedCollectionWithFixedHrefs:
      type: object
      description: A serializer for a Collection.
      properties: {}
    PatchedGroup:
      type: object
      description: Serializer for Group.
      properties:
        name:
          type: string
          description: Name
          maxLength: 150
    PatchedNamespace:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        links:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceLink'
        groups:
          type: string
        resources:
          type: string
    PatchedPulpExporter:
      type: object
      description: Serializer for pulp exporters.
      properties:
        name:
          type: string
          description: Unique name of the file system exporter.
        path:
          type: string
          description: File system directory to store exported tar.gzs.
        repositories:
          type: array
          items:
            type: string
            format: uri
        last_export:
          type: string
          format: uri
          nullable: true
          description: Last attempted export for this PulpExporter
    PatchedPulpImporter:
      type: object
      description: Serializer for PulpImporters.
      properties:
        name:
          type: string
          description: Unique name of the Importer.
        repo_mapping:
          type: object
          description: 'Mapping of repo names in an export file to the repo names
            in Pulp. For example, if the export has a repo named ''foo'' and the repo
            to import content into was ''bar'', the mapping would be "{''foo'': ''bar''}".'
    PatchedSyncList:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        policy:
          $ref: '#/components/schemas/Policy8baEnum'
        upstream_repository:
          type: string
          format: uuid
        collections:
          type: array
          items:
            $ref: '#/components/schemas/SyncListCollectionSummary'
        namespaces:
          type: array
          items:
            type: string
        groups:
          type: string
    PatchedTaskCancel:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        state:
          type: string
          description: The desired state of the task. Only 'canceled' is accepted.
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
    Patchedansible.AnsibleDistribution:
      type: object
      description: Serializer for Ansible Distributions.
      properties:
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        content_guard:
          type: string
          format: uri
          nullable: true
          description: An optional content-guard.
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
    Patchedansible.AnsibleRepository:
      type: object
      description: Serializer for Ansible Repositories.
      properties:
        pulp_labels:
          type: object
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
        last_synced_metadata_time:
          type: string
          format: date-time
          nullable: true
          description: Last synced metadata time.
    Patchedansible.CollectionRemote:
      type: object
      description: A serializer for Collection Remotes.
      properties:
        url:
          type: string
          description: The URL of an external content source.
        auth_url:
          type: string
          nullable: true
          description: The URL to receive a session token from, e.g. used with Automation
            Hub.
          maxLength: 255
        token:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 2000
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        requirements_file:
          type: string
          nullable: true
          description: The string version of Collection requirements yaml.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
          description: Remote user.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: Remote password.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          nullable: true
          description: User for proxy authentication.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: Password for proxy authentication.
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
    Patchedansible.RoleRemote:
      type: object
      description: A serializer for Ansible Remotes.
      properties:
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to authenticte to the proxy.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to authenticte to the proxy.
        username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to be used for authentication when syncing.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to be used for authentication when syncing.
        pulp_labels:
          type: object
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
    Patchedcontainer.ContainerDistribution:
      type: object
      description: A serializer for ContainerDistribution.
      properties:
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
        pulp_labels:
          type: object
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        content_guard:
          type: string
          format: uri
          description: An optional content-guard. If none is specified, a default
            one will be used.
        private:
          type: boolean
          description: Restrict pull access to explicitly authorized users. Defaults
            to unrestricted pull access.
        description:
          type: string
          nullable: true
          description: An optional description.
    Patchedcontainer.ContainerRemote:
      type: object
      description: A Serializer for ContainerRemote.
      properties:
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to authenticte to the proxy.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to authenticte to the proxy.
        username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to be used for authentication when syncing.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to be used for authentication when syncing.
        pulp_labels:
          type: object
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/Policy762Enum'
          default: immediate
          description: "\n        immediate - All manifests and blobs are downloaded\
            \ and saved during a sync.\n        on_demand - Only tags and manifests\
            \ are downloaded. Blobs are not\n                    downloaded until\
            \ they are requested for the first time by a client.\n        streamed\
            \ - Blobs are streamed to the client with every request and never saved.\n\
            \        "
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
        upstream_name:
          type: string
          description: Name of the upstream repository
        include_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to include during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'include_tags' is\
            \ evaluated before 'exclude_tags'.\n            "
        exclude_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to exclude during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'exclude_tags' is\
            \ evaluated after 'include_tags'.\n            "
    Patchedcontainer.ContainerRepository:
      type: object
      description: Serializer for Container Repositories.
      properties:
        pulp_labels:
          type: object
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
    Patchedcontainer.ContentRedirectContentGuard:
      type: object
      description: A serializer for ContentRedirectContentGuard.
      properties:
        name:
          type: string
          description: The unique name.
        description:
          type: string
          nullable: true
          description: An optional description.
    Permission:
      type: object
      description: Serializer for User/Group object permission.
      properties: {}
    PermissionResponse:
      type: object
      description: Serializer for User/Group object permission.
      properties:
        pulp_href:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        permission:
          type: string
          readOnly: true
        obj:
          type: string
          readOnly: true
          description: Content object.
    Policy762Enum:
      enum:
      - immediate
      - on_demand
      - streamed
      type: string
    Policy8baEnum:
      enum:
      - exclude
      - include
      type: string
    PolicyDb6Enum:
      enum:
      - immediate
      - When syncing, download all metadata and content now.
      type: string
    ProgressReportResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        message:
          type: string
          readOnly: true
          description: The message shown to the user for the progress report.
        code:
          type: string
          readOnly: true
          description: Identifies the type of progress report'.
        state:
          type: string
          readOnly: true
          description: 'The current state of the progress report. The possible values
            are: ''waiting'', ''skipped'', ''running'', ''completed'', ''failed''
            and ''canceled''. The default is ''waiting''.'
        total:
          type: integer
          readOnly: true
          description: The total count of items.
        done:
          type: integer
          readOnly: true
          description: The count of items already processed. Defaults to 0.
        suffix:
          type: string
          readOnly: true
          nullable: true
          description: The suffix to be shown with the progress report.
    PulpExport:
      type: object
      description: Serializer for PulpExports.
      properties:
        task:
          type: string
          format: uri
          nullable: true
          description: A URI of the task that ran the Export.
        full:
          type: boolean
          writeOnly: true
          default: true
          description: Do a Full (true) or Incremental (false) export.
        dry_run:
          type: boolean
          writeOnly: true
          default: false
          description: Generate report on what would be exported and disk-space required.
        versions:
          type: array
          items:
            type: string
            format: uri
            writeOnly: true
          writeOnly: true
          description: List of explicit repo-version hrefs to export (replaces current_version).
        chunk_size:
          type: string
          writeOnly: true
          description: Chunk export-tarfile into pieces of chunk_size bytes.Recognizes
            units of B/KB/MB/GB/TB.
        start_versions:
          type: array
          items:
            type: string
            format: uri
            writeOnly: true
          writeOnly: true
          description: List of explicit last-exported-repo-version hrefs (replaces
            last_export).
    PulpExportResponse:
      type: object
      description: Serializer for PulpExports.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        task:
          type: string
          format: uri
          nullable: true
          description: A URI of the task that ran the Export.
        exported_resources:
          type: array
          items: {}
          readOnly: true
          description: Resources that were exported.
        params:
          type: object
          readOnly: true
          description: Any additional parameters that were used to create the export.
        output_file_info:
          type: object
          readOnly: true
          description: 'Dictionary of filename: sha256hash entries for export-output-file(s)'
        toc_info:
          type: object
          readOnly: true
          description: Filename and sha256-checksum of table-of-contents for this
            export
    PulpExporter:
      type: object
      description: Serializer for pulp exporters.
      properties:
        name:
          type: string
          description: Unique name of the file system exporter.
        path:
          type: string
          description: File system directory to store exported tar.gzs.
        repositories:
          type: array
          items:
            type: string
            format: uri
        last_export:
          type: string
          format: uri
          nullable: true
          description: Last attempted export for this PulpExporter
      required:
      - name
      - path
      - repositories
    PulpExporterResponse:
      type: object
      description: Serializer for pulp exporters.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: Unique name of the file system exporter.
        path:
          type: string
          description: File system directory to store exported tar.gzs.
        repositories:
          type: array
          items:
            type: string
            format: uri
        last_export:
          type: string
          format: uri
          nullable: true
          description: Last attempted export for this PulpExporter
      required:
      - name
      - path
      - repositories
    PulpImport:
      type: object
      description: Serializer for call to import into Pulp.
      properties:
        path:
          type: string
          description: Path to export that will be imported.
        toc:
          type: string
          description: Path to a table-of-contents file describing chunks to be validated,
            reassembled, and imported.
    PulpImportCheck:
      type: object
      description: |-
        Check validity of provided import-options.

        Provides the ability to check that an import is 'sane' without having to actually
        create an importer.
      properties:
        path:
          type: string
          description: Path to export-tar-gz that will be imported.
        toc:
          type: string
          description: Path to a table-of-contents file describing chunks to be validated,
            reassembled, and imported.
        repo_mapping:
          type: string
          description: 'Mapping of repo names in an export file to the repo names
            in Pulp. For example, if the export has a repo named ''foo'' and the repo
            to import content into was ''bar'', the mapping would be "{''foo'': ''bar''}".'
    PulpImportCheckResponse:
      type: object
      description: Return the response to a PulpImport import-check call.
      properties:
        toc:
          allOf:
          - $ref: '#/components/schemas/EvaluationResponse'
          description: Evaluation of proposed 'toc' file for PulpImport
        path:
          allOf:
          - $ref: '#/components/schemas/EvaluationResponse'
          description: Evaluation of proposed 'path' file for PulpImport
        repo_mapping:
          allOf:
          - $ref: '#/components/schemas/EvaluationResponse'
          description: Evaluation of proposed 'repo_mapping' file for PulpImport
    PulpImporter:
      type: object
      description: Serializer for PulpImporters.
      properties:
        name:
          type: string
          description: Unique name of the Importer.
        repo_mapping:
          type: object
          description: 'Mapping of repo names in an export file to the repo names
            in Pulp. For example, if the export has a repo named ''foo'' and the repo
            to import content into was ''bar'', the mapping would be "{''foo'': ''bar''}".'
      required:
      - name
    PulpImporterResponse:
      type: object
      description: Serializer for PulpImporters.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: Unique name of the Importer.
        repo_mapping:
          type: object
          description: 'Mapping of repo names in an export file to the repo names
            in Pulp. For example, if the export has a repo named ''foo'' and the repo
            to import content into was ''bar'', the mapping would be "{''foo'': ''bar''}".'
      required:
      - name
    RecursiveManage:
      type: object
      description: Serializer for adding and removing content to/from a Container
        repository.
      properties:
        content_units:
          type: array
          items: {}
          description: A list of content units to operate on.
    RedisConnectionResponse:
      type: object
      description: Serializer for information about the Redis connection
      properties:
        connected:
          type: boolean
          description: Info about whether the app can connect to Redis
      required:
      - connected
    RemoveImage:
      type: object
      description: A serializer for parsing and validating data associated with the
        image removal.
      properties:
        digest:
          type: string
          description: sha256 of the Manifest file
      required:
      - digest
    RepoMetadataResponse:
      type: object
      description: A serializer to display RepositoryVersion metadata.
      properties:
        published:
          type: string
          format: date-time
      required:
      - published
    RepositoryAddRemoveContent:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        add_content_units:
          type: array
          items: {}
          description: A list of content units to add to a new repository version.
            This content is added after remove_content_units are removed.
        remove_content_units:
          type: array
          items: {}
          description: A list of content units to remove from the latest repository
            version. You may also specify '*' as an entry to remove all content. This
            content is removed before add_content_units are added.
        base_version:
          type: string
          format: uri
          description: A repository version whose content will be used as the initial
            set of content for the new repository version
    RepositoryResponse:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        pulp_id:
          type: string
          format: uuid
          readOnly: true
        pulp_last_updated:
          type: string
          format: date-time
          readOnly: true
        content_count:
          type: string
          readOnly: true
      required:
      - name
    RepositorySyncURL:
      type: object
      description: A mixin for validating unknown serializers' fields.
      properties:
        remote:
          type: string
          format: uri
          description: A remote to sync from. This will override a remote set on repository.
        mirror:
          type: boolean
          default: false
          description: If ``True``, synchronization will remove all content that is
            not present in the remote repository. If ``False``, sync will be additive
            only.
    RepositoryVersion:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        base_version:
          type: string
          format: uri
          description: A repository version whose content was used as the initial
            set of content for this repository version
    RepositoryVersionResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        number:
          type: integer
          readOnly: true
        base_version:
          type: string
          format: uri
          description: A repository version whose content was used as the initial
            set of content for this repository version
        content_summary:
          allOf:
          - $ref: '#/components/schemas/ContentSummaryResponse'
          readOnly: true
          description: Various count summaries of the content in the version and the
            HREF to view them.
    ReservedResourcesResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
    SigningServiceResponse:
      type: object
      description: A serializer for the model declaring a signing service.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: A unique name used to recognize a script.
        public_key:
          type: string
          description: The value of a public key used for the repository verification.
        pubkey_fingerprint:
          type: string
          description: The fingerprint of the public key.
        script:
          type: string
          description: An absolute path to a script which is going to be used for
            the signing.
      required:
      - name
      - pubkey_fingerprint
      - public_key
      - script
    StatusResponse:
      type: object
      description: Serializer for the status information of the app
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/VersionResponse'
          description: Version information of Pulp components
        online_workers:
          type: array
          items:
            $ref: '#/components/schemas/WorkerResponse'
          description: List of online workers known to the application. An online
            worker is actively heartbeating and can respond to new work
        online_content_apps:
          type: array
          items:
            $ref: '#/components/schemas/ContentAppStatusResponse'
          description: List of online content apps known to the application. An online
            content app is actively heartbeating and can serve data to clients
        database_connection:
          allOf:
          - $ref: '#/components/schemas/DatabaseConnectionResponse'
          description: Database connection information
        redis_connection:
          allOf:
          - $ref: '#/components/schemas/RedisConnectionResponse'
          description: Redis connection information
        storage:
          allOf:
          - $ref: '#/components/schemas/StorageResponse'
          description: Storage information
      required:
      - database_connection
      - online_content_apps
      - online_workers
      - redis_connection
      - versions
    StorageResponse:
      type: object
      description: Serializer for information about the storage system
      properties:
        total:
          type: integer
          description: Total number of bytes
          minimum: 0
        used:
          type: integer
          description: Number of bytes in use
          minimum: 0
        free:
          type: integer
          description: Number of free bytes
          minimum: 0
      required:
      - free
      - total
      - used
    SyncList:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        policy:
          $ref: '#/components/schemas/Policy8baEnum'
        upstream_repository:
          type: string
          format: uuid
        collections:
          type: array
          items:
            $ref: '#/components/schemas/SyncListCollectionSummary'
        namespaces:
          type: array
          items:
            type: string
        groups:
          type: string
      required:
      - collections
      - groups
      - name
      - namespaces
      - upstream_repository
    SyncListCollectionSummary:
      type: object
      properties:
        namespace:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
      required:
      - name
      - namespace
    SyncListCollectionSummaryResponse:
      type: object
      properties:
        namespace:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
      required:
      - name
      - namespace
    SyncListResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        policy:
          $ref: '#/components/schemas/Policy8baEnum'
        upstream_repository:
          type: string
          format: uuid
        repository:
          type: string
          format: uuid
          readOnly: true
        collections:
          type: array
          items:
            $ref: '#/components/schemas/SyncListCollectionSummaryResponse'
        namespaces:
          type: array
          items:
            type: string
        groups:
          type: string
      required:
      - collections
      - groups
      - name
      - namespaces
      - upstream_repository
    TagCopy:
      type: object
      description: Serializer for copying tags from a source repository to a destination
        repository.
      properties:
        source_repository:
          type: string
          format: uri
          description: A URI of the repository to copy content from.
        source_repository_version:
          type: string
          format: uri
          description: A URI of the repository version to copy content from.
        names:
          type: array
          items: {}
          description: A list of tag names to copy.
    TagImage:
      type: object
      description: A serializer for parsing and validating data associated with a
        manifest tagging.
      properties:
        tag:
          type: string
          description: A tag name
          pattern: ^[A-Za-z0-9][A-Za-z0-9._-]*$
        digest:
          type: string
          description: sha256 of the Manifest file
      required:
      - digest
      - tag
    TagResponse:
      type: object
      description: A serializer for the Tag model.
      properties:
        name:
          type: string
          readOnly: true
    TaskGroupResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        description:
          type: string
          description: A description of the task group.
        all_tasks_dispatched:
          type: boolean
          description: Whether all tasks have been spawned for this task group.
        waiting:
          type: integer
          readOnly: true
          description: Number of tasks in the 'waiting' state
        skipped:
          type: integer
          readOnly: true
          description: Number of tasks in the 'skipped' state
        running:
          type: integer
          readOnly: true
          description: Number of tasks in the 'running' state
        completed:
          type: integer
          readOnly: true
          description: Number of tasks in the 'completed' state
        canceled:
          type: integer
          readOnly: true
          description: Number of tasks in the 'canceled' state
        failed:
          type: integer
          readOnly: true
          description: Number of tasks in the 'failed' state
        group_progress_reports:
          type: array
          items:
            $ref: '#/components/schemas/GroupProgressReportResponse'
          readOnly: true
      required:
      - all_tasks_dispatched
      - description
    TaskResponse:
      type: object
      properties:
        pulp_id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        state:
          type: string
        error:
          type: object
          nullable: true
        worker:
          type: object
          nullable: true
          readOnly: true
        parent_task:
          type: string
          format: uuid
          nullable: true
        child_tasks:
          type: array
          items:
            type: string
            format: uuid
        repository:
          type: string
          nullable: true
          readOnly: true
        progress_reports:
          type: array
          items:
            $ref: '#/components/schemas/ProgressReportResponse'
          readOnly: true
      required:
      - child_tasks
      - created_at
      - finished_at
      - name
      - pulp_id
      - started_at
      - state
      - updated_at
    TaskSummaryResponse:
      type: object
      description: |-
        TaskSerializer but without detail fields.

        For use in /tasks/<str:pk>/ detail views.
      properties:
        pulp_id:
          type: string
          format: uuid
        name:
          type: string
        repository:
          type: string
          nullable: true
          readOnly: true
        state:
          type: string
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        href:
          type: string
          readOnly: true
      required:
      - finished_at
      - name
      - pulp_id
      - started_at
      - state
    UnTagImage:
      type: object
      description: A serializer for parsing and validating data associated with a
        manifest untagging.
      properties:
        tag:
          type: string
          description: A tag name
          pattern: ^[A-Za-z0-9][A-Za-z0-9._-]*$
      required:
      - tag
    UnpaginatedCollectionVersionResponse:
      type: object
      description: A serializer for unpaginated CollectionVersion.
      properties:
        version:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        requires_ansible:
          type: string
          nullable: true
          maxLength: 255
        artifact:
          allOf:
          - $ref: '#/components/schemas/ArtifactRefResponse'
          readOnly: true
        collection:
          allOf:
          - $ref: '#/components/schemas/CollectionRefResponse'
          readOnly: true
        download_url:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        namespace:
          allOf:
          - $ref: '#/components/schemas/CollectionNamespaceResponse'
          readOnly: true
        metadata:
          allOf:
          - $ref: '#/components/schemas/CollectionMetadataResponse'
          readOnly: true
      required:
      - created_at
      - updated_at
    Upload:
      type: object
      description: Serializer for chunked uploads.
      properties:
        size:
          type: integer
          description: The size of the upload in bytes.
      required:
      - size
    UploadChunk:
      type: object
      description: A mixin for validating unknown serializers' fields.
      properties:
        file:
          type: string
          format: binary
          writeOnly: true
          description: A chunk of the uploaded file.
        sha256:
          type: string
          writeOnly: true
          nullable: true
          description: The SHA-256 checksum of the chunk if available.
      required:
      - file
    UploadChunkResponse:
      type: object
      description: A mixin for validating unknown serializers' fields.
      properties:
        offset:
          type: integer
          readOnly: true
        size:
          type: integer
          readOnly: true
    UploadCommit:
      type: object
      description: A mixin for validating unknown serializers' fields.
      properties:
        sha256:
          type: string
          description: The expected sha256 checksum for the file.
      required:
      - sha256
    UploadDetailResponse:
      type: object
      description: Serializer for chunked uploads.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        size:
          type: integer
          description: The size of the upload in bytes.
        completed:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when upload is committed.
        chunks:
          type: array
          items:
            $ref: '#/components/schemas/UploadChunkResponse'
          readOnly: true
      required:
      - size
    UploadResponse:
      type: object
      description: Serializer for chunked uploads.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        size:
          type: integer
          description: The size of the upload in bytes.
        completed:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when upload is committed.
      required:
      - size
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - username
    UserGroupResponse:
      type: object
      description: Serializer for Groups that belong to an User.
      properties:
        name:
          type: string
          description: Name.
          maxLength: 150
        pulp_href:
          type: string
          format: uri
          readOnly: true
      required:
      - name
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - username
    VersionResponse:
      type: object
      description: Serializer for the version information of Pulp components
      properties:
        component:
          type: string
          description: Name of a versioned component of Pulp
        version:
          type: string
          description: Version of the component (e.g. 3.0.0)
      required:
      - component
      - version
    WorkerResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          readOnly: true
          description: The name of the worker.
        last_heartbeat:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the last time the worker talked to the service.
    ansible.AnsibleDistribution:
      type: object
      description: Serializer for Ansible Distributions.
      properties:
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        content_guard:
          type: string
          format: uri
          nullable: true
          description: An optional content-guard.
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
      required:
      - base_path
      - name
    ansible.AnsibleDistributionResponse:
      type: object
      description: Serializer for Ansible Distributions.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        content_guard:
          type: string
          format: uri
          nullable: true
          description: An optional content-guard.
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
        client_url:
          type: string
          readOnly: true
          description: The URL of a Collection content source.
      required:
      - base_path
      - name
    ansible.AnsibleRepository:
      type: object
      description: Serializer for Ansible Repositories.
      properties:
        pulp_labels:
          type: object
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
        last_synced_metadata_time:
          type: string
          format: date-time
          nullable: true
          description: Last synced metadata time.
      required:
      - name
    ansible.AnsibleRepositoryResponse:
      type: object
      description: Serializer for Ansible Repositories.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        versions_href:
          type: string
          format: uri
          readOnly: true
        pulp_labels:
          type: object
        latest_version_href:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
        last_synced_metadata_time:
          type: string
          format: date-time
          nullable: true
          description: Last synced metadata time.
      required:
      - name
    ansible.CollectionRemote:
      type: object
      description: A serializer for Collection Remotes.
      properties:
        url:
          type: string
          description: The URL of an external content source.
        auth_url:
          type: string
          nullable: true
          description: The URL to receive a session token from, e.g. used with Automation
            Hub.
          maxLength: 255
        token:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 2000
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        requirements_file:
          type: string
          nullable: true
          description: The string version of Collection requirements yaml.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
          description: Remote user.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: Remote password.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          nullable: true
          description: User for proxy authentication.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: Password for proxy authentication.
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
      required:
      - url
    ansible.CollectionRemoteResponse:
      type: object
      description: A serializer for Collection Remotes.
      properties:
        pk:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        url:
          type: string
          description: The URL of an external content source.
        auth_url:
          type: string
          nullable: true
          description: The URL to receive a session token from, e.g. used with Automation
            Hub.
          maxLength: 255
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        requirements_file:
          type: string
          nullable: true
          description: The string version of Collection requirements yaml.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
          description: Remote user.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        last_sync_task:
          type: string
          readOnly: true
        repositories:
          type: string
          readOnly: true
        pulp_href:
          type: string
          format: uri
          readOnly: true
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          nullable: true
          description: User for proxy authentication.
        write_only_fields:
          type: string
          readOnly: true
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
      required:
      - url
    ansible.CollectionResponse:
      type: object
      description: A serializer for Ansible Collections.
      properties:
        name:
          type: string
          description: The name of the Collection.
        namespace:
          type: string
          description: The namespace of the Collection.
      required:
      - name
      - namespace
    ansible.CollectionVersion:
      type: object
      description: A serializer for CollectionVersion Content.
      properties:
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        id:
          type: string
          format: uuid
          description: A collection identifier.
        authors:
          type: array
          items:
            type: string
          description: A list of the CollectionVersion content's authors.
        contents:
          type: array
          items:
            type: object
          description: A JSON field with data about the contents.
        dependencies:
          type: object
          description: A dict declaring Collections that this collection requires
            to be installed for it to be usable.
        description:
          type: string
          description: A short summary description of the collection.
        docs_blob:
          type: object
          description: A JSON field holding the various documentation blobs in the
            collection.
        manifest:
          type: object
          description: A JSON field holding MANIFEST.json data.
        files:
          type: object
          description: A JSON field holding FILES.json data.
        documentation:
          type: string
          description: The URL to any online docs.
          maxLength: 2000
        homepage:
          type: string
          description: The URL to the homepage of the collection/project.
          maxLength: 2000
        issues:
          type: string
          description: The URL to the collection issue tracker.
          maxLength: 2000
        license:
          type: array
          items:
            type: string
          description: A list of licenses for content inside of a collection.
        name:
          type: string
          description: The name of the collection.
          maxLength: 32
        namespace:
          type: string
          description: The namespace of the collection.
          maxLength: 32
        repository:
          type: string
          description: The URL of the originating SCM repository.
          maxLength: 2000
        version:
          type: string
          description: The version of the collection.
          maxLength: 32
        requires_ansible:
          type: string
          nullable: true
          description: The version of Ansible required to use the collection. Multiple
            versions can be separated with a comma.
          maxLength: 255
      required:
      - artifact
      - authors
      - contents
      - dependencies
      - description
      - docs_blob
      - documentation
      - files
      - homepage
      - id
      - issues
      - license
      - manifest
      - name
      - namespace
      - repository
      - version
    ansible.CollectionVersionResponse:
      type: object
      description: A serializer for CollectionVersion Content.
      properties:
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        md5:
          type: string
          readOnly: true
          description: The MD5 checksum if available.
        sha1:
          type: string
          readOnly: true
          description: The SHA-1 checksum if available.
        sha224:
          type: string
          readOnly: true
          description: The SHA-224 checksum if available.
        sha256:
          type: string
          readOnly: true
          description: The SHA-256 checksum if available.
        sha384:
          type: string
          readOnly: true
          description: The SHA-384 checksum if available.
        sha512:
          type: string
          readOnly: true
          description: The SHA-512 checksum if available.
        id:
          type: string
          format: uuid
          description: A collection identifier.
        authors:
          type: array
          items:
            type: string
          description: A list of the CollectionVersion content's authors.
        contents:
          type: array
          items:
            type: object
          description: A JSON field with data about the contents.
        dependencies:
          type: object
          description: A dict declaring Collections that this collection requires
            to be installed for it to be usable.
        description:
          type: string
          description: A short summary description of the collection.
        docs_blob:
          type: object
          description: A JSON field holding the various documentation blobs in the
            collection.
        manifest:
          type: object
          description: A JSON field holding MANIFEST.json data.
        files:
          type: object
          description: A JSON field holding FILES.json data.
        documentation:
          type: string
          description: The URL to any online docs.
          maxLength: 2000
        homepage:
          type: string
          description: The URL to the homepage of the collection/project.
          maxLength: 2000
        issues:
          type: string
          description: The URL to the collection issue tracker.
          maxLength: 2000
        license:
          type: array
          items:
            type: string
          description: A list of licenses for content inside of a collection.
        name:
          type: string
          description: The name of the collection.
          maxLength: 32
        namespace:
          type: string
          description: The namespace of the collection.
          maxLength: 32
        repository:
          type: string
          description: The URL of the originating SCM repository.
          maxLength: 2000
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ansible.TagResponse'
          readOnly: true
        version:
          type: string
          description: The version of the collection.
          maxLength: 32
        requires_ansible:
          type: string
          nullable: true
          description: The version of Ansible required to use the collection. Multiple
            versions can be separated with a comma.
          maxLength: 255
      required:
      - artifact
      - authors
      - contents
      - dependencies
      - description
      - docs_blob
      - documentation
      - files
      - homepage
      - id
      - issues
      - license
      - manifest
      - name
      - namespace
      - repository
      - version
    ansible.Role:
      type: object
      description: A serializer for Role versions.
      properties:
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        version:
          type: string
        name:
          type: string
        namespace:
          type: string
      required:
      - artifact
      - name
      - namespace
      - version
    ansible.RoleRemote:
      type: object
      description: A serializer for Ansible Remotes.
      properties:
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to authenticte to the proxy.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to authenticte to the proxy.
        username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to be used for authentication when syncing.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to be used for authentication when syncing.
        pulp_labels:
          type: object
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
      required:
      - name
      - url
    ansible.RoleRemoteResponse:
      type: object
      description: A serializer for Ansible Remotes.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        pulp_labels:
          type: object
        pulp_last_updated:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the most recent update of the remote.
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
      required:
      - name
      - url
    ansible.RoleResponse:
      type: object
      description: A serializer for Role versions.
      properties:
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        version:
          type: string
        name:
          type: string
        namespace:
          type: string
      required:
      - artifact
      - name
      - namespace
      - version
    ansible.Tag:
      type: object
      description: A serializer for nesting in the CollectionVersion model.
      properties: {}
    ansible.TagResponse:
      type: object
      description: A serializer for nesting in the CollectionVersion model.
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the Tag.
    container.BlobResponse:
      type: object
      description: Serializer for Blobs.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        digest:
          type: string
          description: sha256 of the Blob file
        media_type:
          type: string
          description: Blob media type of the file
      required:
      - artifact
      - digest
      - media_type
    container.ContainerDistribution:
      type: object
      description: A serializer for ContainerDistribution.
      properties:
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
        pulp_labels:
          type: object
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        content_guard:
          type: string
          format: uri
          description: An optional content-guard. If none is specified, a default
            one will be used.
        private:
          type: boolean
          description: Restrict pull access to explicitly authorized users. Defaults
            to unrestricted pull access.
        description:
          type: string
          nullable: true
          description: An optional description.
      required:
      - base_path
      - name
    container.ContainerDistributionResponse:
      type: object
      description: A serializer for ContainerDistribution.
      properties:
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_labels:
          type: object
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        content_guard:
          type: string
          format: uri
          description: An optional content-guard. If none is specified, a default
            one will be used.
        registry_path:
          type: string
          readOnly: true
          description: The Registry hostame/name/ to use with docker pull command
            defined by this distribution.
        namespace:
          type: string
          format: uri
          readOnly: true
          description: Namespace this distribution belongs to.
        private:
          type: boolean
          description: Restrict pull access to explicitly authorized users. Defaults
            to unrestricted pull access.
        description:
          type: string
          nullable: true
          description: An optional description.
      required:
      - base_path
      - name
    container.ContainerNamespace:
      type: object
      description: Serializer for ContainerNamespaces.
      properties:
        name:
          type: string
          maxLength: 255
      required:
      - name
    container.ContainerNamespaceResponse:
      type: object
      description: Serializer for ContainerNamespaces.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          maxLength: 255
      required:
      - name
    container.ContainerPushRepositoryResponse:
      type: object
      description: Serializer for Container Push Repositories.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        versions_href:
          type: string
          format: uri
          readOnly: true
        pulp_labels:
          type: object
        latest_version_href:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
      required:
      - name
    container.ContainerRemote:
      type: object
      description: A Serializer for ContainerRemote.
      properties:
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to authenticte to the proxy.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to authenticte to the proxy.
        username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to be used for authentication when syncing.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to be used for authentication when syncing.
        pulp_labels:
          type: object
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/Policy762Enum'
          default: immediate
          description: "\n        immediate - All manifests and blobs are downloaded\
            \ and saved during a sync.\n        on_demand - Only tags and manifests\
            \ are downloaded. Blobs are not\n                    downloaded until\
            \ they are requested for the first time by a client.\n        streamed\
            \ - Blobs are streamed to the client with every request and never saved.\n\
            \        "
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
        upstream_name:
          type: string
          description: Name of the upstream repository
        include_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to include during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'include_tags' is\
            \ evaluated before 'exclude_tags'.\n            "
        exclude_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to exclude during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'exclude_tags' is\
            \ evaluated after 'include_tags'.\n            "
      required:
      - name
      - upstream_name
      - url
    container.ContainerRemoteResponse:
      type: object
      description: A Serializer for ContainerRemote.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        pulp_labels:
          type: object
        pulp_last_updated:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the most recent update of the remote.
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/Policy762Enum'
          default: immediate
          description: "\n        immediate - All manifests and blobs are downloaded\
            \ and saved during a sync.\n        on_demand - Only tags and manifests\
            \ are downloaded. Blobs are not\n                    downloaded until\
            \ they are requested for the first time by a client.\n        streamed\
            \ - Blobs are streamed to the client with every request and never saved.\n\
            \        "
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
        upstream_name:
          type: string
          description: Name of the upstream repository
        include_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to include during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'include_tags' is\
            \ evaluated before 'exclude_tags'.\n            "
        exclude_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to exclude during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'exclude_tags' is\
            \ evaluated after 'include_tags'.\n            "
      required:
      - name
      - upstream_name
      - url
    container.ContainerRepository:
      type: object
      description: Serializer for Container Repositories.
      properties:
        pulp_labels:
          type: object
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
      required:
      - name
    container.ContainerRepositoryResponse:
      type: object
      description: Serializer for Container Repositories.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        versions_href:
          type: string
          format: uri
          readOnly: true
        pulp_labels:
          type: object
        latest_version_href:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
      required:
      - name
    container.ContentRedirectContentGuard:
      type: object
      description: A serializer for ContentRedirectContentGuard.
      properties:
        name:
          type: string
          description: The unique name.
        description:
          type: string
          nullable: true
          description: An optional description.
      required:
      - name
    container.ContentRedirectContentGuardResponse:
      type: object
      description: A serializer for ContentRedirectContentGuard.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: The unique name.
        description:
          type: string
          nullable: true
          description: An optional description.
      required:
      - name
    container.ManifestResponse:
      type: object
      description: Serializer for Manifests.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        digest:
          type: string
          description: sha256 of the Manifest file
        schema_version:
          type: integer
          description: Manifest schema version
        media_type:
          type: string
          description: Manifest media type of the file
        listed_manifests:
          type: array
          items:
            type: string
            format: uri
          description: Manifests that are referenced by this Manifest List
        config_blob:
          type: string
          format: uri
          description: Blob that contains configuration for this Manifest
        blobs:
          type: array
          items:
            type: string
            format: uri
          description: Blobs that are referenced by this Manifest
      required:
      - artifact
      - blobs
      - digest
      - listed_manifests
      - media_type
      - schema_version
    container.TagResponse:
      type: object
      description: Serializer for Tags.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: Tag name
        tagged_manifest:
          type: string
          format: uri
          description: Manifest that is tagged
      required:
      - name
      - tagged_manifest
    galaxy.Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    galaxy.LoginResponse:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: http://localhost:5001/
