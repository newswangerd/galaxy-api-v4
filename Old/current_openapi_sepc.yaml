openapi: 3.0.3
info:
  title: Automation Hub API
  version: v3
  description: Fetch, Upload, Organize, and Distribute Ansible Collections
  contact:
    name: Pulp Team
    email: pulp-list@redhat.com
    url: https://pulpproject.org
  license:
    name: GPLv2+
    url: https://raw.githubusercontent.com/ansible/galaxy_ng/master/LICENSE
  x-logo:
    url: https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg
  x-pulp-app-versions:
    core: 3.11.0.post0
    container: 2.5.2
    ansible: 0.7.1
    galaxy: 4.4.0dev
paths:
  /ansible/collections/:
    post:
      operationId: upload_collection
      description: Create an artifact and trigger an asynchronous task to create Collection
        content from it.
      summary: Upload a collection
      tags:
      - 'Ansible: Collections'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionOneShot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionOneShot'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /api/automation-hub/:
    get:
      operationId: api_automation_hub_get
      description: ''
      tags:
      - 'Api: Automation-Hub'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/_ui/:
    get:
      operationId: api_automation_hub__ui_read
      description: ''
      tags:
      - 'Api: _Ui'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/_ui/v1/auth/login/:
    get:
      operationId: api_automation_hub__ui_v1_auth_login_get
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui V1 Login'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/galaxy.LoginResponse'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_auth_login_post
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui V1 Login'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/galaxy.Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/galaxy.Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/galaxy.Login'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/galaxy.LoginResponse'
          description: ''
  /api/automation-hub/_ui/v1/auth/logout/:
    post:
      operationId: api_automation_hub__ui_v1_auth_logout_post
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui V1 Logout'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/_ui/v1/collection-versions/:
    get:
      operationId: api_automation_hub__ui_v1_collection_versions_list
      description: ''
      summary: List collection versions
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: repository
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - collection
            - namespace
            - pulp_created
            - version
        description: Ordering
        explode: false
        style: form
      - in: query
        name: version
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Collection-Versions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedgalaxy.LoginResponseList'
          description: ''
  '{ansible_collection_version_href}':
    get:
      operationId: content_ansible_collection_versions_read
      description: ViewSet for Ansible Collection.
      summary: Inspect a collection version
      parameters:
      - in: path
        name: ansible_collection_version_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Content: Collection_Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.CollectionVersionResponse'
          description: ''
  /api/automation-hub/_ui/v1/distributions/:
    get:
      operationId: api_automation_hub__ui_v1_distributions_list
      description: ''
      summary: List ansible distributions
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Distributions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDistributionResponseList'
          description: ''
  '{ansible_ansible_distribution_href}':
    get:
      operationId: distributions_ansible_ansible_read
      description: ViewSet for Ansible Distributions.
      summary: Inspect an ansible distribution
      parameters:
      - in: path
        name: ansible_ansible_distribution_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Distributions: Ansible'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.AnsibleDistributionResponse'
          description: ''
    put:
      operationId: distributions_ansible_ansible_update
      description: Trigger an asynchronous update task
      summary: Update an ansible distribution
      parameters:
      - in: path
        name: ansible_ansible_distribution_href
        schema:
          type: string
        required: true
      tags:
      - 'Distributions: Ansible'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleDistribution'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleDistribution'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleDistribution'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    patch:
      operationId: distributions_ansible_ansible_partial_update
      description: Trigger an asynchronous partial update task
      summary: Update an ansible distribution
      parameters:
      - in: path
        name: ansible_ansible_distribution_href
        schema:
          type: string
        required: true
      tags:
      - 'Distributions: Ansible'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedansible.AnsibleDistribution'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedansible.AnsibleDistribution'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedansible.AnsibleDistribution'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    delete:
      operationId: distributions_ansible_ansible_delete
      description: Trigger an asynchronous delete task
      summary: Delete an ansible distribution
      parameters:
      - in: path
        name: ansible_ansible_distribution_href
        schema:
          type: string
        required: true
      tags:
      - 'Distributions: Ansible'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /api/automation-hub/_ui/v1/execution-environments/namespaces/:
    get:
      operationId: api_automation_hub__ui_v1_execution_environments_namespaces_list
      description: ''
      summary: List container namespaces
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Namespaces'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContainerNamespaceDetailResponseList'
          description: ''
  '{galaxy_container_namespace_href}':
    get:
      operationId: container_namespace_read
      description: ''
      summary: Inspect a container namespace
      parameters:
      - in: path
        name: galaxy_container_namespace_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Container: Namespace'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerNamespaceDetailResponse'
          description: ''
    put:
      operationId: container_namespace_update
      description: ''
      summary: Update a container namespace
      parameters:
      - in: path
        name: galaxy_container_namespace_href
        schema:
          type: string
        required: true
      tags:
      - 'Container: Namespace'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerNamespaceDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContainerNamespaceDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContainerNamespaceDetail'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerNamespaceDetailResponse'
          description: ''
  /api/automation-hub/_ui/v1/execution-environments/repositories/:
    get:
      operationId: api_automation_hub__ui_v1_execution_environments_repositories_list
      description: ''
      summary: List container distributions
      parameters:
      - in: query
        name: description
        schema:
          type: string
          nullable: true
      - in: query
        name: description__contains
        schema:
          type: string
          nullable: true
      - in: query
        name: description__icontains
        schema:
          type: string
          nullable: true
      - in: query
        name: description__startswith
        schema:
          type: string
          nullable: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: my_permissions
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__icontains
        schema:
          type: string
      - in: query
        name: name__startswith
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -created
            - -description
            - -name
            - -updated
            - created
            - description
            - name
            - updated
        description: Ordering
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Repositories'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContainerRepositoryResponseList'
          description: ''
  '{galaxy_container_distribution_href}':
    get:
      operationId: container_repository_read
      description: ''
      summary: Inspect a container distribution
      parameters:
      - in: path
        name: galaxy_container_distribution_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Container: Repository'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerRepositoryResponse'
          description: ''
  /api/automation-hub/_ui/v1/execution-environments/repositories/{base_path}/_content/history/:
    get:
      operationId: api_automation_hub__ui_v1_execution_environments_repositories__content_history_list
      description: ''
      parameters:
      - in: path
        name: base_path
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Execution-Environments Repositories History'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContainerRepositoryHistoryResponseList'
          description: ''
  /api/automation-hub/_ui/v1/execution-environments/repositories/{base_path}/_content/images/:
    get:
      operationId: api_automation_hub__ui_v1_execution_environments_repositories__content_images_list
      description: ''
      parameters:
      - in: path
        name: base_path
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Execution-Environments Repositories Images'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContainerManifestResponseList'
          description: ''
  /api/automation-hub/_ui/v1/execution-environments/repositories/{base_path}/_content/images/{manifest_ref}/:
    get:
      operationId: api_automation_hub__ui_v1_execution_environments_repositories__content_images_read
      description: ''
      parameters:
      - in: path
        name: base_path
        schema:
          type: string
        required: true
      - in: path
        name: manifest_ref
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Execution-Environments Repositories Images'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerManifestDetailResponse'
          description: ''
  '{galaxy_container_distro_readme_href}_content/readme/':
    get:
      operationId: _content_readme_read
      description: ''
      summary: Inspect a container distro readme
      parameters:
      - in: path
        name: galaxy_container_distro_readme_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - '_Content: Readme'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerReadmeResponse'
          description: ''
    put:
      operationId: _content_readme_update
      description: ''
      summary: Update a container distro readme
      parameters:
      - in: path
        name: galaxy_container_distro_readme_href
        schema:
          type: string
        required: true
      tags:
      - '_Content: Readme'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContainerReadme'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContainerReadme'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContainerReadme'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContainerReadmeResponse'
          description: ''
  /api/automation-hub/_ui/v1/feature-flags/:
    get:
      operationId: api_automation_hub__ui_v1_feature_flags_get
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui Feature-Flags'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/_ui/v1/groups/:
    get:
      operationId: groups_list
      description: |-
        ViewSet for Group.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: List groups
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__startswith
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -name
            - name
        description: Ordering
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Groups
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupResponseList'
          description: ''
    post:
      operationId: groups_create
      description: |-
        ViewSet for Group.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Create a group
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: ''
  '{auth_group_href}model-permissions/':
    get:
      operationId: groups_model_permissions_list
      description: List group permissions.
      summary: List permissions
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Groups: Model_Permissions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionResponseList'
          description: ''
    post:
      operationId: groups_model_permissions_create
      description: Add a model permission to a group.
      summary: Create a permission
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      tags:
      - 'Groups: Model_Permissions'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: ''
  '{auth_groups_model_permission_href}':
    get:
      operationId: groups_model_permissions_read
      description: Retrieve a model permission from a group.
      summary: Inspect a permission
      parameters:
      - in: path
        name: auth_groups_model_permission_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Groups: Model_Permissions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: ''
    delete:
      operationId: groups_model_permissions_delete
      description: Remove a model permission from a group.
      summary: Delete a permission
      parameters:
      - in: path
        name: auth_groups_model_permission_href
        schema:
          type: string
        required: true
      tags:
      - 'Groups: Model_Permissions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  '{auth_group_href}users/':
    get:
      operationId: groups_users_list
      description: List group users.
      summary: List users
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Groups: Users'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupUserResponseList'
          description: ''
    post:
      operationId: groups_users_create
      description: Add a user to a group.
      summary: Create an user
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      tags:
      - 'Groups: Users'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GroupUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupUser'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserResponse'
          description: ''
  '{auth_groups_user_href}':
    delete:
      operationId: groups_users_delete
      description: Remove a user from a group.
      summary: Delete an user
      parameters:
      - in: path
        name: auth_groups_user_href
        schema:
          type: string
        required: true
      tags:
      - 'Groups: Users'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  '{auth_group_href}':
    get:
      operationId: groups_read
      description: |-
        ViewSet for Group.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Inspect a group
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Groups
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: ''
    delete:
      operationId: groups_delete
      description: |-
        ViewSet for Group.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Delete a group
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      tags:
      - Groups
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
    put:
      operationId: groups_update
      description: |-
        ViewSet for Group.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Update a group
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: ''
    patch:
      operationId: groups_partial_update
      description: |-
        ViewSet for Group.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Update a group
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGroup'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: ''
  /api/automation-hub/_ui/v1/imports/collections/:
    get:
      operationId: api_automation_hub__ui_v1_imports_collections_list
      description: ViewSet for CollectionImports.
      summary: List collection imports
      parameters:
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -created
            - created
        description: Ordering
        explode: false
        style: form
      - in: query
        name: version
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui V1 Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImportTaskListResponseList'
          description: ''
  '{ansible_collection_import_href}':
    get:
      operationId: collection_import_read
      description: Returns a CollectionImport object.
      summary: Inspect a collection import
      parameters:
      - in: path
        name: ansible_collection_import_href
        schema:
          type: string
        required: true
      - in: query
        name: since
        schema:
          type: string
        description: Filter messages since a given timestamp
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Collection: Import'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionImportDetailResponse'
          description: ''
  /api/automation-hub/_ui/v1/me/:
    get:
      operationId: api_automation_hub__ui_v1_me_read
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui Me'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUserResponse'
          description: ''
    put:
      operationId: api_automation_hub__ui_v1_me_update
      description: ''
      tags:
      - 'Api: Automation-Hub _Ui Me'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrentUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CurrentUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CurrentUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentUserResponse'
          description: ''
  /api/automation-hub/_ui/v1/my-distributions/:
    get:
      operationId: api_automation_hub__ui_v1_my_distributions_list
      description: ''
      summary: List ansible distributions
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui My-Distributions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDistributionResponseList'
          description: ''
  /api/automation-hub/_ui/v1/my-namespaces/:
    get:
      operationId: api_automation_hub__ui_v1_my_namespaces_list
      description: ''
      summary: List namespaces
      parameters:
      - in: query
        name: company
        schema:
          type: string
      - in: query
        name: keywords
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -company
            - -id
            - -name
            - company
            - id
            - name
        description: Ordering
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui My-Namespaces'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNamespaceSummaryResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_my_namespaces_create
      description: Override to validate for name duplication before serializer validation.
      summary: Create a namespace
      tags:
      - 'Api: Automation-Hub _Ui My-Namespaces'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Namespace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponse'
          description: ''
  '{galaxy_namespace_href}':
    get:
      operationId: namespace_instance_read
      description: ''
      summary: Inspect a namespace
      parameters:
      - in: path
        name: galaxy_namespace_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Namespace: Instance'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponse'
          description: ''
    put:
      operationId: namespace_instance_update
      description: ''
      summary: Update a namespace
      parameters:
      - in: path
        name: galaxy_namespace_href
        schema:
          type: string
        required: true
      tags:
      - 'Namespace: Instance'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Namespace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponse'
          description: ''
    patch:
      operationId: namespace_instance_partial_update
      description: ''
      summary: Update a namespace
      parameters:
      - in: path
        name: galaxy_namespace_href
        schema:
          type: string
        required: true
      tags:
      - 'Namespace: Instance'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedNamespace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedNamespace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedNamespace'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponse'
          description: ''
    delete:
      operationId: namespace_instance_delete
      description: ''
      summary: Delete a namespace
      parameters:
      - in: path
        name: galaxy_namespace_href
        schema:
          type: string
        required: true
      tags:
      - 'Namespace: Instance'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/automation-hub/_ui/v1/my-synclists/:
    get:
      operationId: api_automation_hub__ui_v1_my_synclists_list
      description: ''
      summary: List sync lists
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui My-Synclists'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSyncListResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_my_synclists_create
      description: ''
      summary: Create a sync list
      tags:
      - 'Api: Automation-Hub _Ui My-Synclists'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyncList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyncList'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncListResponse'
          description: ''
  '{galaxy_sync_list_href}':
    get:
      operationId: sync_list_instance_read
      description: ''
      summary: Inspect a sync list
      parameters:
      - in: path
        name: galaxy_sync_list_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Sync: Instance'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncListResponse'
          description: ''
    put:
      operationId: sync_list_instance_update
      description: ''
      summary: Update a sync list
      parameters:
      - in: path
        name: galaxy_sync_list_href
        schema:
          type: string
        required: true
      tags:
      - 'Sync: Instance'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyncList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyncList'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncListResponse'
          description: ''
    patch:
      operationId: sync_list_instance_partial_update
      description: ''
      summary: Update a sync list
      parameters:
      - in: path
        name: galaxy_sync_list_href
        schema:
          type: string
        required: true
      tags:
      - 'Sync: Instance'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSyncList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSyncList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSyncList'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncListResponse'
          description: ''
    delete:
      operationId: sync_list_instance_delete
      description: ''
      summary: Delete a sync list
      parameters:
      - in: path
        name: galaxy_sync_list_href
        schema:
          type: string
        required: true
      tags:
      - 'Sync: Instance'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  '{galaxy_sync_list_href}curate/':
    post:
      operationId: curate_curate
      description: ''
      parameters:
      - in: path
        name: galaxy_sync_list_href
        schema:
          type: string
        required: true
      tags:
      - Curate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyncList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyncList'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncListResponse'
          description: ''
  /api/automation-hub/_ui/v1/namespaces/:
    get:
      operationId: api_automation_hub__ui_v1_namespaces_list
      description: ''
      summary: List namespaces
      parameters:
      - in: query
        name: company
        schema:
          type: string
      - in: query
        name: keywords
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -company
            - -id
            - -name
            - company
            - id
            - name
        description: Ordering
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Namespaces'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNamespaceSummaryResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_namespaces_create
      description: Override to validate for name duplication before serializer validation.
      summary: Create a namespace
      tags:
      - 'Api: Automation-Hub _Ui Namespaces'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Namespace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponse'
          description: ''
  /api/automation-hub/_ui/v1/remotes/:
    get:
      operationId: api_automation_hub__ui_v1_remotes_list
      description: ''
      summary: List collection remotes
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Remotes'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedansible.CollectionRemoteResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_remotes_create
      description: ''
      summary: Create a collection remote
      tags:
      - 'Api: Automation-Hub _Ui Remotes'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.CollectionRemoteResponse'
          description: ''
  '{ansible_collection_remote_href}':
    get:
      operationId: remotes_ansible_collection_read
      description: ViewSet for Collection Remotes.
      summary: Inspect a collection remote
      parameters:
      - in: path
        name: ansible_collection_remote_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Remotes: Collection'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.CollectionRemoteResponse'
          description: ''
    put:
      operationId: remotes_ansible_collection_update
      description: Trigger an asynchronous update task
      summary: Update a collection remote
      parameters:
      - in: path
        name: ansible_collection_remote_href
        schema:
          type: string
        required: true
      tags:
      - 'Remotes: Collection'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    patch:
      operationId: remotes_ansible_collection_partial_update
      description: Trigger an asynchronous partial update task
      summary: Update a collection remote
      parameters:
      - in: path
        name: ansible_collection_remote_href
        schema:
          type: string
        required: true
      tags:
      - 'Remotes: Collection'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedansible.CollectionRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedansible.CollectionRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedansible.CollectionRemote'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    delete:
      operationId: remotes_ansible_collection_delete
      description: Trigger an asynchronous delete task
      summary: Delete a collection remote
      parameters:
      - in: path
        name: ansible_collection_remote_href
        schema:
          type: string
        required: true
      tags:
      - 'Remotes: Collection'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /api/automation-hub/_ui/v1/repo/{path}/:
    get:
      operationId: api_automation_hub__ui_v1_repo_list
      description: |-
        Viewset that uses CollectionVersion's within distribution to display data for Collection's.

        Collection list is filterable by FilterSet and includes latest CollectionVersion.

        Collection detail includes CollectionVersion that is latest or via query param 'version'.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Repo'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedgalaxy.LoginResponseList'
          description: ''
  /api/automation-hub/_ui/v1/repo/{path}/{namespace}/{name}/:
    get:
      operationId: api_automation_hub__ui_v1_repo_read
      description: |-
        Viewset that uses CollectionVersion's within distribution to display data for Collection's.

        Collection list is filterable by FilterSet and includes latest CollectionVersion.

        Collection detail includes CollectionVersion that is latest or via query param 'version'.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Repo'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/galaxy.LoginResponse'
          description: ''
  /api/automation-hub/_ui/v1/synclists/:
    get:
      operationId: api_automation_hub__ui_v1_synclists_list
      description: ''
      summary: List sync lists
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Synclists'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSyncListResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_synclists_create
      description: ''
      summary: Create a sync list
      tags:
      - 'Api: Automation-Hub _Ui Synclists'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncList'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyncList'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyncList'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncListResponse'
          description: ''
  /api/automation-hub/_ui/v1/tags/:
    get:
      operationId: api_automation_hub__ui_v1_tags_list
      description: ''
      summary: List tags
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Tags'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagResponseList'
          description: ''
  /api/automation-hub/_ui/v1/users/:
    get:
      operationId: api_automation_hub__ui_v1_users_list
      description: ''
      summary: List users
      parameters:
      - in: query
        name: date_joined
        schema:
          type: string
          format: date-time
      - in: query
        name: email
        schema:
          type: string
          format: email
      - in: query
        name: email__contains
        schema:
          type: string
          format: email
      - in: query
        name: email__startswith
        schema:
          type: string
          format: email
      - in: query
        name: first_name
        schema:
          type: string
      - in: query
        name: first_name__contains
        schema:
          type: string
      - in: query
        name: first_name__startswith
        schema:
          type: string
      - in: query
        name: groups
        schema:
          type: array
          items:
            type: integer
        description: The groups this user belongs to. A user will get all permissions
          granted to each of their groups.
      - in: query
        name: groups__name
        schema:
          type: string
      - in: query
        name: last_name
        schema:
          type: string
      - in: query
        name: last_name__contains
        schema:
          type: string
      - in: query
        name: last_name__startswith
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -date_joined
            - -email
            - -first_name
            - -last_name
            - -username
            - date_joined
            - email
            - first_name
            - last_name
            - username
        description: Ordering
        explode: false
        style: form
      - in: query
        name: username
        schema:
          type: string
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
      - in: query
        name: username__contains
        schema:
          type: string
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
      - in: query
        name: username__startswith
        schema:
          type: string
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub _Ui Users'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserResponseList'
          description: ''
    post:
      operationId: api_automation_hub__ui_v1_users_create
      description: ''
      summary: Create an user
      tags:
      - 'Api: Automation-Hub _Ui Users'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
  '{galaxy_user_href}':
    get:
      operationId: users_read
      description: |-
        ViewSet for User.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Inspect an user
      parameters:
      - in: path
        name: galaxy_user_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
    put:
      operationId: user_instance_update
      description: ''
      summary: Update an user
      parameters:
      - in: path
        name: galaxy_user_href
        schema:
          type: string
        required: true
      tags:
      - 'User: Instance'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
    patch:
      operationId: user_instance_partial_update
      description: ''
      summary: Update an user
      parameters:
      - in: path
        name: galaxy_user_href
        schema:
          type: string
        required: true
      tags:
      - 'User: Instance'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
    delete:
      operationId: user_instance_delete
      description: ''
      summary: Delete an user
      parameters:
      - in: path
        name: galaxy_user_href
        schema:
          type: string
        required: true
      tags:
      - 'User: Instance'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/automation-hub/api/:
    get:
      operationId: api_automation_hub_api_get
      description: ''
      tags:
      - 'Api: Api'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/:
    get:
      operationId: api_automation_hub_content_get
      description: ''
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Content'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/api/:
    get:
      operationId: api_automation_hub_content_api_get
      description: ''
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Api'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/v3/artifacts/collections/:
    post:
      operationId: api_automation_hub_content_v3_artifacts_collections_create
      description: Dispatch a Collection creation task.
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Content V3 Collections'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionUploadWithDownloadUrl'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionUploadWithDownloadUrl'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionUploadWithDownloadUrlResponse'
          description: ''
  /api/automation-hub/content/{path}/v3/artifacts/collections/{path}/{filename}:
    get:
      operationId: api_automation_hub_content_v3_artifacts_collections_read
      description: ''
      parameters:
      - in: path
        name: filename
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content V3 Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/v3/collections/:
    get:
      operationId: api_automation_hub_content_v3_collections_list
      description: ViewSet for Collections.
      parameters:
      - in: query
        name: deprecated
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionWithFixedHrefsResponseList'
          description: ''
  /api/automation-hub/content/{path}/v3/collections/{namespace}/{name}/:
    get:
      operationId: api_automation_hub_content_v3_collections_read
      description: ViewSet for Collections.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
          description: ''
    patch:
      operationId: api_automation_hub_content_v3_collections_update
      description: Update a Collection object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Content Collections'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
          description: ''
  /api/automation-hub/content/{path}/v3/collections/{namespace}/{name}/versions/:
    get:
      operationId: api_automation_hub_content_v3_collections_versions_list
      description: Returns paginated CollectionVersions list.
      parameters:
      - in: query
        name: is_highest
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: query
        name: name
        schema:
          type: string
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: tags
        schema:
          type: string
        description: Filter by comma separate list of tags that must all be matched
      - in: query
        name: version
        schema:
          type: string
        description: Filter results where version matches value
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content V3 Versions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionVersionWithDownloadUrlResponseList'
          description: ''
  /api/automation-hub/content/{path}/v3/collections/{namespace}/{name}/versions/{version}/:
    get:
      operationId: api_automation_hub_content_v3_collections_versions_read
      description: Returns a CollectionVersion object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content V3 Versions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionWithDownloadUrlResponse'
          description: ''
  /api/automation-hub/content/{path}/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/:
    get:
      operationId: api_automation_hub_content_v3_collections_versions_docs_blob_read
      description: Returns a CollectionVersion object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content V3 Collections Docs-Blob'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionDocsResponse'
          description: ''
  /api/automation-hub/content/{path}/v3/collections/{namespace}/{name}/versions/{version}/move/{source_path}/{dest_path}/:
    post:
      operationId: api_automation_hub_content_v3_collections_versions_move_move_content
      description: |-
        Remove content from source repo and add to destination repo.

        Creates new RepositoryVersion of source repo without content included.
        Creates new RepositoryVersion of destination repo with content included.
      parameters:
      - in: path
        name: dest_path
        schema:
          type: string
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: path
        name: source_path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Content V3 Collections Move'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/v3/sync/:
    post:
      operationId: api_automation_hub_content_v3_sync_sync
      description: ''
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Content Sync'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/content/{path}/v3/sync/config/:
    get:
      operationId: api_automation_hub_content_v3_sync_config_read
      description: ''
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Content V3 Config'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.CollectionRemoteResponse'
          description: ''
    put:
      operationId: api_automation_hub_content_v3_sync_config_update
      description: ''
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Content V3 Config'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.CollectionRemoteResponse'
          description: ''
  '{task_href}v3/tasks/':
    get:
      operationId: tasks_list
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: List tasks
      parameters:
      - in: query
        name: child_tasks
        schema:
          type: string
          format: uuid
        description: Foreign Key referenced by HREF
      - in: query
        name: created_resources
        schema:
          type: string
          format: uuid
      - in: query
        name: finished_at
        schema:
          type: string
          format: date-time
          nullable: true
        description: ISO 8601 formatted dates are supported
      - in: query
        name: finished_at__gt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is greater than value
      - in: query
        name: finished_at__gte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is greater than or equal to
          value
      - in: query
        name: finished_at__lt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is less than value
      - in: query
        name: finished_at__lte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is less than or equal to value
      - in: query
        name: finished_at__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            nullable: true
        description: Filter results where finished_at is between two comma separated
          values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: parent_task
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: reserved_resources_record
        schema:
          type: string
          format: uuid
      - in: query
        name: started_at
        schema:
          type: string
          format: date-time
          nullable: true
        description: ISO 8601 formatted dates are supported
      - in: query
        name: started_at__gt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is greater than value
      - in: query
        name: started_at__gte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is greater than or equal to value
      - in: query
        name: started_at__lt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is less than value
      - in: query
        name: started_at__lte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is less than or equal to value
      - in: query
        name: started_at__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            nullable: true
        description: Filter results where started_at is between two comma separated
          values
        explode: false
        style: form
      - in: query
        name: state
        schema:
          type: string
          enum:
          - canceled
          - completed
          - failed
          - running
          - skipped
          - waiting
      - in: query
        name: state__in
        schema:
          type: array
          items:
            type: string
            enum:
            - canceled
            - completed
            - failed
            - running
            - skipped
            - waiting
        description: Filter results where state is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: task_group
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: path
        name: task_href
        schema:
          type: string
        required: true
      - in: query
        name: worker
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: worker__in
        schema:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
        description: Filter results where worker is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Tasks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskSummaryResponseList'
          description: ''
  '{task_href}':
    get:
      operationId: tasks_read
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: Inspect a task
      parameters:
      - in: path
        name: task_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
          description: ''
    patch:
      operationId: tasks_cancel
      description: This operation cancels a task.
      summary: Cancel a task
      parameters:
      - in: path
        name: task_href
        schema:
          type: string
        required: true
      tags:
      - Tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskCancel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskCancel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskCancel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
          description: ''
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
          description: ''
    delete:
      operationId: tasks_delete
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: Delete a task
      parameters:
      - in: path
        name: task_href
        schema:
          type: string
        required: true
      tags:
      - Tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/automation-hub/v3/artifacts/collections/:
    post:
      operationId: api_automation_hub_v3_artifacts_collections_create
      description: Dispatch a Collection creation task.
      tags:
      - 'Api: Automation-Hub V3 Collections'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionUploadWithDownloadUrl'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionUploadWithDownloadUrl'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionUploadWithDownloadUrlResponse'
          description: ''
  /api/automation-hub/v3/artifacts/collections/{path}/{filename}:
    get:
      operationId: api_automation_hub_v3_artifacts_collections_read
      description: ''
      parameters:
      - in: path
        name: filename
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub V3 Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/v3/auth/token/:
    post:
      operationId: api_automation_hub_v3_auth_token_post
      description: Create or refresh user token.
      tags:
      - 'Api: Automation-Hub V3 Token'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_automation_hub_v3_auth_token_delete
      description: Invalidate user token.
      tags:
      - 'Api: Automation-Hub V3 Token'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/automation-hub/v3/collections/:
    get:
      operationId: api_automation_hub_v3_collections_list
      description: ViewSet for Collections.
      parameters:
      - in: query
        name: deprecated
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionWithFixedHrefsResponseList'
          description: ''
  /api/automation-hub/v3/collections/{namespace}/{name}/:
    get:
      operationId: api_automation_hub_v3_collections_read
      description: ViewSet for Collections.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Collections'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
          description: ''
    patch:
      operationId: api_automation_hub_v3_collections_update
      description: Update a Collection object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub Collections'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollectionWithFixedHrefs'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
          description: ''
  /api/automation-hub/v3/collections/{namespace}/{name}/versions/:
    get:
      operationId: api_automation_hub_v3_collections_versions_list
      description: Returns paginated CollectionVersions list.
      parameters:
      - in: query
        name: is_highest
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: query
        name: name
        schema:
          type: string
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: tags
        schema:
          type: string
        description: Filter by comma separate list of tags that must all be matched
      - in: query
        name: version
        schema:
          type: string
        description: Filter results where version matches value
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub V3 Versions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionVersionWithDownloadUrlResponseList'
          description: ''
  /api/automation-hub/v3/collections/{namespace}/{name}/versions/{version}/:
    get:
      operationId: api_automation_hub_v3_collections_versions_read
      description: Returns a CollectionVersion object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub V3 Versions'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionWithDownloadUrlResponse'
          description: ''
  /api/automation-hub/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/:
    get:
      operationId: api_automation_hub_v3_collections_versions_docs_blob_read
      description: Returns a CollectionVersion object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub V3 Collections Docs-Blob'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionDocsResponse'
          description: ''
  /api/automation-hub/v3/collections/{namespace}/{name}/versions/{version}/move/{source_path}/{dest_path}/:
    post:
      operationId: api_automation_hub_v3_collections_versions_move_move_content
      description: |-
        Remove content from source repo and add to destination repo.

        Creates new RepositoryVersion of source repo without content included.
        Creates new RepositoryVersion of destination repo with content included.
      parameters:
      - in: path
        name: dest_path
        schema:
          type: string
        required: true
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: source_path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      tags:
      - 'Api: Automation-Hub V3 Collections Move'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/automation-hub/v3/namespaces/:
    get:
      operationId: api_automation_hub_v3_namespaces_list
      description: ''
      summary: List namespaces
      parameters:
      - in: query
        name: company
        schema:
          type: string
      - in: query
        name: keywords
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: sort
        schema:
          type: array
          items:
            type: string
            enum:
            - -company
            - -id
            - -name
            - company
            - id
            - name
        description: Ordering
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Namespaces'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNamespaceSummaryResponseList'
          description: ''
    post:
      operationId: api_automation_hub_v3_namespaces_create
      description: Override to validate for name duplication before serializer validation.
      summary: Create a namespace
      tags:
      - 'Api: Automation-Hub Namespaces'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Namespace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Namespace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Namespace'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamespaceResponse'
          description: ''
  /api/automation-hub/v3/openapi.json:
    get:
      operationId: api_automation_hub_v3_openapi.json_get
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - th
          - tr
          - tt
          - udm
          - uk
          - ur
          - vi
          - zh-hans
          - zh-hant
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Openapi.Json'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/automation-hub/v3/openapi.yaml:
    get:
      operationId: api_automation_hub_v3_openapi.yaml_get
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - th
          - tr
          - tt
          - udm
          - uk
          - ur
          - vi
          - zh-hans
          - zh-hant
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Automation-Hub Openapi.Yaml'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/automation-hub/v3/tasks/:
    get:
      operationId: tasks_list
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: List tasks
      parameters:
      - in: query
        name: child_tasks
        schema:
          type: string
          format: uuid
        description: Foreign Key referenced by HREF
      - in: query
        name: created_resources
        schema:
          type: string
          format: uuid
      - in: query
        name: finished_at
        schema:
          type: string
          format: date-time
          nullable: true
        description: ISO 8601 formatted dates are supported
      - in: query
        name: finished_at__gt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is greater than value
      - in: query
        name: finished_at__gte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is greater than or equal to
          value
      - in: query
        name: finished_at__lt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is less than value
      - in: query
        name: finished_at__lte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is less than or equal to value
      - in: query
        name: finished_at__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            nullable: true
        description: Filter results where finished_at is between two comma separated
          values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: parent_task
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: reserved_resources_record
        schema:
          type: string
          format: uuid
      - in: query
        name: started_at
        schema:
          type: string
          format: date-time
          nullable: true
        description: ISO 8601 formatted dates are supported
      - in: query
        name: started_at__gt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is greater than value
      - in: query
        name: started_at__gte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is greater than or equal to value
      - in: query
        name: started_at__lt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is less than value
      - in: query
        name: started_at__lte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is less than or equal to value
      - in: query
        name: started_at__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            nullable: true
        description: Filter results where started_at is between two comma separated
          values
        explode: false
        style: form
      - in: query
        name: state
        schema:
          type: string
          enum:
          - canceled
          - completed
          - failed
          - running
          - skipped
          - waiting
      - in: query
        name: state__in
        schema:
          type: array
          items:
            type: string
            enum:
            - canceled
            - completed
            - failed
            - running
            - skipped
            - waiting
        description: Filter results where state is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: task_group
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: worker
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: worker__in
        schema:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
        description: Filter results where worker is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Tasks
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskSummaryResponseList'
          description: ''
  /pulp/api/v3/access_policies/:
    get:
      operationId: access_policies_list
      description: |-
        ViewSet for AccessPolicy.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: List access policys
      parameters:
      - in: query
        name: customized
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: viewset_name
        schema:
          type: string
        description: Filter results where viewset_name matches value
      - in: query
        name: viewset_name__contains
        schema:
          type: string
        description: Filter results where viewset_name contains value
      - in: query
        name: viewset_name__icontains
        schema:
          type: string
        description: Filter results where viewset_name contains value
      - in: query
        name: viewset_name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where viewset_name is in a comma-separated list
          of values
        explode: false
        style: form
      - in: query
        name: viewset_name__startswith
        schema:
          type: string
        description: Filter results where viewset_name starts with value
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Access_Policies
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccessPolicyResponseList'
          description: ''
  '{access_policy_href}':
    get:
      operationId: access_policies_read
      description: |-
        ViewSet for AccessPolicy.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Inspect an access policy
      parameters:
      - in: path
        name: access_policy_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Access_Policies
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyResponse'
          description: ''
    put:
      operationId: access_policies_update
      description: |-
        ViewSet for AccessPolicy.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Update an access policy
      parameters:
      - in: path
        name: access_policy_href
        schema:
          type: string
        required: true
      tags:
      - Access_Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessPolicy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessPolicy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AccessPolicy'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyResponse'
          description: ''
    patch:
      operationId: access_policies_partial_update
      description: |-
        ViewSet for AccessPolicy.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Update an access policy
      parameters:
      - in: path
        name: access_policy_href
        schema:
          type: string
        required: true
      tags:
      - Access_Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAccessPolicy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAccessPolicy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAccessPolicy'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessPolicyResponse'
          description: ''
  /pulp/api/v3/ansible/collections/:
    get:
      operationId: ansible_collections_list
      description: Viewset for Ansible Collections.
      summary: List collections
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Ansible: Collections'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedansible.CollectionResponseList'
          description: ''
  '{ansible_collection_href}':
    get:
      operationId: galaxy_collection_detail_get
      description: Get the detail view of a Collection.
      parameters:
      - in: path
        name: ansible_collection_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Galaxy: Detail'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalaxyCollectionResponse'
          description: ''
  /pulp/api/v3/ansible/copy/:
    post:
      operationId: copy_content
      description: Trigger an asynchronous task to copy ansible content from one repository
        into another, creating a new repository version.
      summary: Copy content
      tags:
      - 'Ansible: Copy'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Copy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Copy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Copy'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/artifacts/:
    get:
      operationId: artifacts_list
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: List artifacts
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: md5
        schema:
          type: string
          nullable: true
        description: Filter results where md5 matches value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: sha1
        schema:
          type: string
          nullable: true
        description: Filter results where sha1 matches value
      - in: query
        name: sha224
        schema:
          type: string
          nullable: true
        description: Filter results where sha224 matches value
      - in: query
        name: sha256
        schema:
          type: string
        description: Filter results where sha256 matches value
      - in: query
        name: sha384
        schema:
          type: string
          nullable: true
        description: Filter results where sha384 matches value
      - in: query
        name: sha512
        schema:
          type: string
          nullable: true
        description: Filter results where sha512 matches value
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Artifacts
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArtifactResponseList'
          description: ''
    post:
      operationId: artifacts_create
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: Create an artifact
      tags:
      - Artifacts
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artifact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Artifact'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactResponse'
          description: ''
  '{artifact_href}':
    get:
      operationId: artifacts_read
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: Inspect an artifact
      parameters:
      - in: path
        name: artifact_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Artifacts
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArtifactResponse'
          description: ''
    delete:
      operationId: artifacts_delete
      description: Remove Artifact only if it is not associated with any Content.
      summary: Delete an artifact
      parameters:
      - in: path
        name: artifact_href
        schema:
          type: string
        required: true
      tags:
      - Artifacts
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /pulp/api/v3/content/:
    get:
      operationId: content_list
      description: Endpoint to list all content.
      summary: List content
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Content
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMultipleArtifactContentResponseList'
          description: ''
  /pulp/api/v3/content/ansible/collection_versions/:
    get:
      operationId: content_ansible_collection_versions_list
      description: ViewSet for Ansible Collection.
      summary: List collection versions
      parameters:
      - in: query
        name: is_highest
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: tags
        schema:
          type: string
        description: Filter by comma separate list of tags that must all be matched
      - in: query
        name: version
        schema:
          type: string
        description: Filter results where version matches value
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Content: Collection_Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedansible.CollectionVersionResponseList'
          description: ''
    post:
      operationId: content_ansible_collection_versions_create
      description: ViewSet for Ansible Collection.
      summary: Create a collection version
      tags:
      - 'Content: Collection_Versions'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.CollectionVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.CollectionVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.CollectionVersion'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.CollectionVersionResponse'
          description: ''
  /pulp/api/v3/content/ansible/roles/:
    get:
      operationId: content_ansible_roles_list
      description: ViewSet for Role.
      summary: List roles
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
        description: Filter results where name matches value
      - in: query
        name: namespace
        schema:
          type: string
        description: Filter results where namespace matches value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: version
        schema:
          type: string
        description: Filter results where version matches value
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Content: Roles'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedansible.RoleResponseList'
          description: ''
    post:
      operationId: content_ansible_roles_create
      description: ViewSet for Role.
      summary: Create a role
      tags:
      - 'Content: Roles'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.Role'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.Role'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.Role'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.RoleResponse'
          description: ''
  '{ansible_role_href}':
    get:
      operationId: content_ansible_roles_read
      description: ViewSet for Role.
      summary: Inspect a role
      parameters:
      - in: path
        name: ansible_role_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Content: Roles'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.RoleResponse'
          description: ''
  /pulp/api/v3/content/container/blobs/:
    get:
      operationId: content_container_blobs_list
      description: ViewSet for Blobs.
      summary: List blobs
      parameters:
      - in: query
        name: digest
        schema:
          type: string
        description: Filter results where digest matches value
      - in: query
        name: digest__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where digest is in a comma-separated list of values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: media_type
        schema:
          type: string
          enum:
          - application/vnd.docker.container.image.v1+json
          - application/vnd.docker.image.rootfs.diff.tar.gzip
          - application/vnd.docker.image.rootfs.foreign.diff.tar.gzip
          - application/vnd.oci.image.config.v1+json
          - application/vnd.oci.image.layer.nondistributable.v1.tar+gzip
          - application/vnd.oci.image.layer.v1.tar+gzip
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Content: Blobs'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedcontainer.BlobResponseList'
          description: ''
  '{container_blob_href}':
    get:
      operationId: content_container_blobs_read
      description: ViewSet for Blobs.
      summary: Inspect a blob
      parameters:
      - in: path
        name: container_blob_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Content: Blobs'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.BlobResponse'
          description: ''
  /pulp/api/v3/content/container/manifests/:
    get:
      operationId: content_container_manifests_list
      description: ViewSet for Manifest.
      summary: List manifests
      parameters:
      - in: query
        name: digest
        schema:
          type: string
        description: Filter results where digest matches value
      - in: query
        name: digest__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where digest is in a comma-separated list of values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: media_type
        schema:
          type: string
          enum:
          - application/vnd.docker.distribution.manifest.list.v2+json
          - application/vnd.docker.distribution.manifest.v1+json
          - application/vnd.docker.distribution.manifest.v2+json
          - application/vnd.oci.image.index.v1+json
          - application/vnd.oci.image.manifest.v1+json
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Content: Manifests'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedcontainer.ManifestResponseList'
          description: ''
  '{container_manifest_href}':
    get:
      operationId: content_container_manifests_read
      description: ViewSet for Manifest.
      summary: Inspect a manifest
      parameters:
      - in: path
        name: container_manifest_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Content: Manifests'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ManifestResponse'
          description: ''
  /pulp/api/v3/content/container/tags/:
    get:
      operationId: content_container_tags_list
      description: ViewSet for Tag.
      summary: List tags
      parameters:
      - in: query
        name: digest
        schema:
          type: array
          items:
            type: string
        description: Multiple values may be separated by commas.
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: media_type
        schema:
          type: string
          enum:
          - application/vnd.docker.distribution.manifest.list.v2+json
          - application/vnd.docker.distribution.manifest.v1+json
          - application/vnd.docker.distribution.manifest.v2+json
          - application/vnd.oci.image.index.v1+json
          - application/vnd.oci.image.manifest.v1+json
      - in: query
        name: name
        schema:
          type: string
        description: Filter results where name matches value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Content: Tags'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedcontainer.TagResponseList'
          description: ''
  '{container_tag_href}':
    get:
      operationId: content_container_tags_read
      description: ViewSet for Tag.
      summary: Inspect a tag
      parameters:
      - in: path
        name: container_tag_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Content: Tags'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.TagResponse'
          description: ''
  /pulp/api/v3/contentguards/:
    get:
      operationId: contentguards_list
      description: Endpoint to list all contentguards.
      summary: List content guards
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Contentguards
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedContentGuardResponseList'
          description: ''
  /pulp/api/v3/contentguards/container/content_redirect/:
    get:
      operationId: contentguards_container_content_redirect_list
      description: Content guard to protect preauthenticated redirects to the content
        app.
      summary: List content redirect content guards
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Contentguards: Content_Redirect'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedcontainer.ContentRedirectContentGuardResponseList'
          description: ''
    post:
      operationId: contentguards_container_content_redirect_create
      description: Content guard to protect preauthenticated redirects to the content
        app.
      summary: Create a content redirect content guard
      tags:
      - 'Contentguards: Content_Redirect'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container.ContentRedirectContentGuard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/container.ContentRedirectContentGuard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/container.ContentRedirectContentGuard'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContentRedirectContentGuardResponse'
          description: ''
  '{container_content_redirect_content_guard_href}':
    get:
      operationId: contentguards_container_content_redirect_read
      description: Content guard to protect preauthenticated redirects to the content
        app.
      summary: Inspect a content redirect content guard
      parameters:
      - in: path
        name: container_content_redirect_content_guard_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Contentguards: Content_Redirect'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContentRedirectContentGuardResponse'
          description: ''
    put:
      operationId: contentguards_container_content_redirect_update
      description: Content guard to protect preauthenticated redirects to the content
        app.
      summary: Update a content redirect content guard
      parameters:
      - in: path
        name: container_content_redirect_content_guard_href
        schema:
          type: string
        required: true
      tags:
      - 'Contentguards: Content_Redirect'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container.ContentRedirectContentGuard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/container.ContentRedirectContentGuard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/container.ContentRedirectContentGuard'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContentRedirectContentGuardResponse'
          description: ''
    patch:
      operationId: contentguards_container_content_redirect_partial_update
      description: Content guard to protect preauthenticated redirects to the content
        app.
      summary: Update a content redirect content guard
      parameters:
      - in: path
        name: container_content_redirect_content_guard_href
        schema:
          type: string
        required: true
      tags:
      - 'Contentguards: Content_Redirect'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContentRedirectContentGuard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContentRedirectContentGuard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContentRedirectContentGuard'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContentRedirectContentGuardResponse'
          description: ''
    delete:
      operationId: contentguards_container_content_redirect_delete
      description: Content guard to protect preauthenticated redirects to the content
        app.
      summary: Delete a content redirect content guard
      parameters:
      - in: path
        name: container_content_redirect_content_guard_href
        schema:
          type: string
        required: true
      tags:
      - 'Contentguards: Content_Redirect'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /pulp/api/v3/distributions/ansible/ansible/:
    get:
      operationId: distributions_ansible_ansible_list
      description: ViewSet for Ansible Distributions.
      summary: List ansible distributions
      parameters:
      - in: query
        name: base_path
        schema:
          type: string
      - in: query
        name: base_path__contains
        schema:
          type: string
        description: Filter results where base_path contains value
      - in: query
        name: base_path__icontains
        schema:
          type: string
        description: Filter results where base_path contains value
      - in: query
        name: base_path__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where base_path is in a comma-separated list of
          values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_label_select
        schema:
          type: string
        description: Filter labels by search string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Distributions: Ansible'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedansible.AnsibleDistributionResponseList'
          description: ''
    post:
      operationId: distributions_ansible_ansible_create
      description: Trigger an asynchronous create task
      summary: Create an ansible distribution
      tags:
      - 'Distributions: Ansible'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleDistribution'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleDistribution'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleDistribution'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/distributions/container/container/:
    get:
      operationId: distributions_container_container_list
      description: |-
        The Container Distribution will serve the latest version of a Repository if
        ``repository`` is specified. The Container Distribution will serve a specific
        repository version if ``repository_version``. Note that **either**
        ``repository`` or ``repository_version`` can be set on a Container
        Distribution, but not both.
      summary: List container distributions
      parameters:
      - in: query
        name: base_path
        schema:
          type: string
      - in: query
        name: base_path__contains
        schema:
          type: string
        description: Filter results where base_path contains value
      - in: query
        name: base_path__icontains
        schema:
          type: string
        description: Filter results where base_path contains value
      - in: query
        name: base_path__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where base_path is in a comma-separated list of
          values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - in: query
        name: namespace__name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_label_select
        schema:
          type: string
        description: Filter labels by search string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Distributions: Container'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedcontainer.ContainerDistributionResponseList'
          description: ''
    post:
      operationId: distributions_container_container_create
      description: Trigger an asynchronous create task
      summary: Create a container distribution
      tags:
      - 'Distributions: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container.ContainerDistribution'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/container.ContainerDistribution'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/container.ContainerDistribution'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_distribution_href}':
    get:
      operationId: distributions_container_container_read
      description: |-
        The Container Distribution will serve the latest version of a Repository if
        ``repository`` is specified. The Container Distribution will serve a specific
        repository version if ``repository_version``. Note that **either**
        ``repository`` or ``repository_version`` can be set on a Container
        Distribution, but not both.
      summary: Inspect a container distribution
      parameters:
      - in: path
        name: container_container_distribution_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Distributions: Container'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContainerDistributionResponse'
          description: ''
    put:
      operationId: distributions_container_container_update
      description: Trigger an asynchronous update task
      summary: Update a container distribution
      parameters:
      - in: path
        name: container_container_distribution_href
        schema:
          type: string
        required: true
      tags:
      - 'Distributions: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container.ContainerDistribution'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/container.ContainerDistribution'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/container.ContainerDistribution'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    patch:
      operationId: distributions_container_container_partial_update
      description: Trigger an asynchronous partial update task
      summary: Update a container distribution
      parameters:
      - in: path
        name: container_container_distribution_href
        schema:
          type: string
        required: true
      tags:
      - 'Distributions: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContainerDistribution'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContainerDistribution'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContainerDistribution'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    delete:
      operationId: distributions_container_container_delete
      description: Trigger an asynchronous delete task
      summary: Delete a container distribution
      parameters:
      - in: path
        name: container_container_distribution_href
        schema:
          type: string
        required: true
      tags:
      - 'Distributions: Container'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/docs/api.json:
    get:
      operationId: docs_api.json_get
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - th
          - tr
          - tt
          - udm
          - uk
          - ur
          - vi
          - zh-hans
          - zh-hant
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Docs: Api.Json'
      responses:
        '200':
          content:
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /pulp/api/v3/docs/api.yaml:
    get:
      operationId: docs_api.yaml_get
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - th
          - tr
          - tt
          - udm
          - uk
          - ur
          - vi
          - zh-hans
          - zh-hant
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Docs: Api.Yaml'
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /pulp/api/v3/exporters/core/pulp/:
    get:
      operationId: exporters_core_pulp_list
      description: ViewSet for viewing PulpExporters.
      summary: List pulp exporters
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Exporters: Pulp'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPulpExporterResponseList'
          description: ''
    post:
      operationId: exporters_core_pulp_create
      description: ViewSet for viewing PulpExporters.
      summary: Create a pulp exporter
      tags:
      - 'Exporters: Pulp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PulpExporter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PulpExporter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PulpExporter'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulpExporterResponse'
          description: ''
  '{pulp_exporter_href}exports/':
    get:
      operationId: exporters_core_pulp_exports_list
      description: ViewSet for viewing exports from a PulpExporter.
      summary: List pulp exports
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: pulp_exporter_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Exporters: Core Exports'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPulpExportResponseList'
          description: ''
    post:
      operationId: exporters_core_pulp_exports_create
      description: Trigger an asynchronous task to export a set of repositories
      summary: Create a pulp export
      parameters:
      - in: path
        name: pulp_exporter_href
        schema:
          type: string
        required: true
      tags:
      - 'Exporters: Core Exports'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PulpExport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PulpExport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PulpExport'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{pulp_pulp_export_href}':
    get:
      operationId: exporters_core_pulp_exports_read
      description: ViewSet for viewing exports from a PulpExporter.
      summary: Inspect a pulp export
      parameters:
      - in: path
        name: pulp_pulp_export_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Exporters: Core Exports'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulpExportResponse'
          description: ''
    delete:
      operationId: exporters_core_pulp_exports_delete
      description: ViewSet for viewing exports from a PulpExporter.
      summary: Delete a pulp export
      parameters:
      - in: path
        name: pulp_pulp_export_href
        schema:
          type: string
        required: true
      tags:
      - 'Exporters: Core Exports'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  '{pulp_exporter_href}':
    get:
      operationId: exporters_core_pulp_read
      description: ViewSet for viewing PulpExporters.
      summary: Inspect a pulp exporter
      parameters:
      - in: path
        name: pulp_exporter_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Exporters: Pulp'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulpExporterResponse'
          description: ''
    put:
      operationId: exporters_core_pulp_update
      description: ViewSet for viewing PulpExporters.
      summary: Update a pulp exporter
      parameters:
      - in: path
        name: pulp_exporter_href
        schema:
          type: string
        required: true
      tags:
      - 'Exporters: Pulp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PulpExporter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PulpExporter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PulpExporter'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulpExporterResponse'
          description: ''
    patch:
      operationId: exporters_core_pulp_partial_update
      description: ViewSet for viewing PulpExporters.
      summary: Update a pulp exporter
      parameters:
      - in: path
        name: pulp_exporter_href
        schema:
          type: string
        required: true
      tags:
      - 'Exporters: Pulp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPulpExporter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPulpExporter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPulpExporter'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulpExporterResponse'
          description: ''
    delete:
      operationId: exporters_core_pulp_delete
      description: ViewSet for viewing PulpExporters.
      summary: Delete a pulp exporter
      parameters:
      - in: path
        name: pulp_exporter_href
        schema:
          type: string
        required: true
      tags:
      - 'Exporters: Pulp'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /pulp/api/v3/groups/:
    get:
      operationId: groups_list
      description: |-
        ViewSet for Group.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: List groups
      parameters:
      - in: query
        name: id
        schema:
          type: integer
        description: Filter results where id matches value
      - in: query
        name: id__in
        schema:
          type: array
          items:
            type: integer
            readOnly: true
        description: Filter results where id is in a comma-separated list of values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
        description: Filter results where name matches value
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__iexact
        schema:
          type: string
        description: Filter results where name matches value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Groups
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGroupResponseList'
          description: ''
    post:
      operationId: groups_create
      description: |-
        ViewSet for Group.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: Create a group
      tags:
      - Groups
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Group'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupResponse'
          description: ''
  '{auth_group_href}model_permissions/':
    get:
      operationId: groups_model_permissions_list
      description: List group permissions.
      summary: List permissions
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Groups: Model_Permissions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionResponseList'
          description: ''
    post:
      operationId: groups_model_permissions_create
      description: Add a model permission to a group.
      summary: Create a permission
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      tags:
      - 'Groups: Model_Permissions'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: ''
  '{auth_group_href}object_permissions/':
    get:
      operationId: groups_object_permissions_list
      description: List group object permissions.
      summary: List permissions
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Groups: Object_Permissions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionResponseList'
          description: ''
    post:
      operationId: groups_object_permissions_create
      description: Add an object permission to a group.
      summary: Create a permission
      parameters:
      - in: path
        name: auth_group_href
        schema:
          type: string
        required: true
      tags:
      - 'Groups: Object_Permissions'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Permission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: ''
  '{auth_groups_object_permission_href}':
    get:
      operationId: groups_object_permissions_read
      description: Retrieve a model permission from a group.
      summary: Inspect a permission
      parameters:
      - in: path
        name: auth_groups_object_permission_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Groups: Object_Permissions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: ''
    delete:
      operationId: groups_object_permissions_delete
      description: Remove an object permission from a group.
      summary: Delete a permission
      parameters:
      - in: path
        name: auth_groups_object_permission_href
        schema:
          type: string
        required: true
      tags:
      - 'Groups: Object_Permissions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /pulp/api/v3/importers/core/pulp/:
    get:
      operationId: importers_core_pulp_list
      description: ViewSet for PulpImporters.
      summary: List pulp importers
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Importers: Pulp'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPulpImporterResponseList'
          description: ''
    post:
      operationId: importers_core_pulp_create
      description: ViewSet for PulpImporters.
      summary: Create a pulp importer
      tags:
      - 'Importers: Pulp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PulpImporter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PulpImporter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PulpImporter'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulpImporterResponse'
          description: ''
  '{pulp_importer_href}imports/':
    get:
      operationId: importers_core_pulp_imports_list
      description: ViewSet for PulpImports.
      summary: List pulp imports
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: pulp_importer_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Importers: Core Imports'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImportResponseList'
          description: ''
    post:
      operationId: importers_core_pulp_imports_create
      description: Trigger an asynchronous task to import a Pulp export.
      summary: Create a pulp import
      parameters:
      - in: path
        name: pulp_importer_href
        schema:
          type: string
        required: true
      tags:
      - 'Importers: Core Imports'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PulpImport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PulpImport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PulpImport'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{pulp_pulp_import_href}':
    get:
      operationId: importers_core_pulp_imports_read
      description: ViewSet for PulpImports.
      summary: Inspect a pulp import
      parameters:
      - in: path
        name: pulp_pulp_import_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Importers: Core Imports'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportResponse'
          description: ''
    delete:
      operationId: importers_core_pulp_imports_delete
      description: ViewSet for PulpImports.
      summary: Delete a pulp import
      parameters:
      - in: path
        name: pulp_pulp_import_href
        schema:
          type: string
        required: true
      tags:
      - 'Importers: Core Imports'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  '{pulp_importer_href}':
    get:
      operationId: importers_core_pulp_read
      description: ViewSet for PulpImporters.
      summary: Inspect a pulp importer
      parameters:
      - in: path
        name: pulp_importer_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Importers: Pulp'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulpImporterResponse'
          description: ''
    put:
      operationId: importers_core_pulp_update
      description: ViewSet for PulpImporters.
      summary: Update a pulp importer
      parameters:
      - in: path
        name: pulp_importer_href
        schema:
          type: string
        required: true
      tags:
      - 'Importers: Pulp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PulpImporter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PulpImporter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PulpImporter'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulpImporterResponse'
          description: ''
    patch:
      operationId: importers_core_pulp_partial_update
      description: ViewSet for PulpImporters.
      summary: Update a pulp importer
      parameters:
      - in: path
        name: pulp_importer_href
        schema:
          type: string
        required: true
      tags:
      - 'Importers: Pulp'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPulpImporter'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPulpImporter'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPulpImporter'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulpImporterResponse'
          description: ''
    delete:
      operationId: importers_core_pulp_delete
      description: ViewSet for PulpImporters.
      summary: Delete a pulp importer
      parameters:
      - in: path
        name: pulp_importer_href
        schema:
          type: string
        required: true
      tags:
      - 'Importers: Pulp'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /pulp/api/v3/importers/core/pulp/import-check/:
    post:
      operationId: pulp_import_check_post
      description: |-
        Evaluates validity of proposed PulpImport parameters 'toc', 'path', and 'repo_mapping'.

        * Checks that toc, path are in ALLOWED_IMPORT_PATHS
        * if ALLOWED:
          * Checks that toc, path exist and are readable
          * If toc specified, checks that containing dir is writeable
        * Checks that repo_mapping is valid JSON
      summary: Validate the parameters to be used for a PulpImport call
      tags:
      - 'Importers: Core Import-Check'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PulpImportCheck'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PulpImportCheck'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PulpImportCheck'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PulpImportCheckResponse'
          description: ''
  /pulp/api/v3/orphans/:
    delete:
      operationId: orphans_delete
      description: Trigger an asynchronous task that deletes allorphaned content and
        artifacts.
      summary: Delete orphans
      tags:
      - Orphans
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/pulp_ansible/tags/:
    get:
      operationId: pulp_ansible_tags_list
      description: ViewSet for Tag models.
      summary: List tags
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Tags'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagResponseList'
          description: ''
  /pulp/api/v3/pulp_container/namespaces/:
    get:
      operationId: pulp_container_namespaces_list
      description: ViewSet for ContainerNamespaces.
      summary: List container namespaces
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
        description: Filter results where name matches value
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Container: Namespaces'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedcontainer.ContainerNamespaceResponseList'
          description: ''
    post:
      operationId: pulp_container_namespaces_create
      description: ViewSet for ContainerNamespaces.
      summary: Create a container namespace
      tags:
      - 'Pulp_Container: Namespaces'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container.ContainerNamespace'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/container.ContainerNamespace'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/container.ContainerNamespace'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContainerNamespaceResponse'
          description: ''
  '{container_container_namespace_href}':
    get:
      operationId: pulp_container_namespaces_read
      description: ViewSet for ContainerNamespaces.
      summary: Inspect a container namespace
      parameters:
      - in: path
        name: container_container_namespace_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Container: Namespaces'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContainerNamespaceResponse'
          description: ''
    delete:
      operationId: pulp_container_namespaces_delete
      description: Trigger an asynchronous delete task
      summary: Delete a container namespace
      parameters:
      - in: path
        name: container_container_namespace_href
        schema:
          type: string
        required: true
      tags:
      - 'Pulp_Container: Namespaces'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/remotes/ansible/collection/:
    get:
      operationId: remotes_ansible_collection_list
      description: ViewSet for Collection Remotes.
      summary: List collection remotes
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_label_select
        schema:
          type: string
        description: Filter labels by search string
      - in: query
        name: pulp_last_updated
        schema:
          type: string
          format: date-time
        description: ISO 8601 formatted dates are supported
      - in: query
        name: pulp_last_updated__gt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is greater than value
      - in: query
        name: pulp_last_updated__gte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is greater than or equal
          to value
      - in: query
        name: pulp_last_updated__lt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is less than value
      - in: query
        name: pulp_last_updated__lte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is less than or equal
          to value
      - in: query
        name: pulp_last_updated__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            readOnly: true
        description: Filter results where pulp_last_updated is between two comma separated
          values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Remotes: Collection'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedansible.CollectionRemoteResponseList'
          description: ''
    post:
      operationId: remotes_ansible_collection_create
      description: ViewSet for Collection Remotes.
      summary: Create a collection remote
      tags:
      - 'Remotes: Collection'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.CollectionRemote'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.CollectionRemoteResponse'
          description: ''
  /pulp/api/v3/remotes/ansible/role/:
    get:
      operationId: remotes_ansible_role_list
      description: ViewSet for Role Remotes.
      summary: List role remotes
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_label_select
        schema:
          type: string
        description: Filter labels by search string
      - in: query
        name: pulp_last_updated
        schema:
          type: string
          format: date-time
        description: ISO 8601 formatted dates are supported
      - in: query
        name: pulp_last_updated__gt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is greater than value
      - in: query
        name: pulp_last_updated__gte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is greater than or equal
          to value
      - in: query
        name: pulp_last_updated__lt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is less than value
      - in: query
        name: pulp_last_updated__lte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is less than or equal
          to value
      - in: query
        name: pulp_last_updated__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            readOnly: true
        description: Filter results where pulp_last_updated is between two comma separated
          values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Remotes: Role'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedansible.RoleRemoteResponseList'
          description: ''
    post:
      operationId: remotes_ansible_role_create
      description: ViewSet for Role Remotes.
      summary: Create a role remote
      tags:
      - 'Remotes: Role'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.RoleRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.RoleRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.RoleRemote'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.RoleRemoteResponse'
          description: ''
  '{ansible_role_remote_href}':
    get:
      operationId: remotes_ansible_role_read
      description: ViewSet for Role Remotes.
      summary: Inspect a role remote
      parameters:
      - in: path
        name: ansible_role_remote_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Remotes: Role'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.RoleRemoteResponse'
          description: ''
    put:
      operationId: remotes_ansible_role_update
      description: Trigger an asynchronous update task
      summary: Update a role remote
      parameters:
      - in: path
        name: ansible_role_remote_href
        schema:
          type: string
        required: true
      tags:
      - 'Remotes: Role'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.RoleRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.RoleRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.RoleRemote'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    patch:
      operationId: remotes_ansible_role_partial_update
      description: Trigger an asynchronous partial update task
      summary: Update a role remote
      parameters:
      - in: path
        name: ansible_role_remote_href
        schema:
          type: string
        required: true
      tags:
      - 'Remotes: Role'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedansible.RoleRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedansible.RoleRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedansible.RoleRemote'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    delete:
      operationId: remotes_ansible_role_delete
      description: Trigger an asynchronous delete task
      summary: Delete a role remote
      parameters:
      - in: path
        name: ansible_role_remote_href
        schema:
          type: string
        required: true
      tags:
      - 'Remotes: Role'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/remotes/container/container/:
    get:
      operationId: remotes_container_container_list
      description: |-
        Container remotes represent an external repository that implements the Container
        Registry API. Container remotes support deferred downloading by configuring
        the ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide
        significant disk space savings.
      summary: List container remotes
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_label_select
        schema:
          type: string
        description: Filter labels by search string
      - in: query
        name: pulp_last_updated
        schema:
          type: string
          format: date-time
        description: ISO 8601 formatted dates are supported
      - in: query
        name: pulp_last_updated__gt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is greater than value
      - in: query
        name: pulp_last_updated__gte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is greater than or equal
          to value
      - in: query
        name: pulp_last_updated__lt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is less than value
      - in: query
        name: pulp_last_updated__lte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_last_updated is less than or equal
          to value
      - in: query
        name: pulp_last_updated__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            readOnly: true
        description: Filter results where pulp_last_updated is between two comma separated
          values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Remotes: Container'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedcontainer.ContainerRemoteResponseList'
          description: ''
    post:
      operationId: remotes_container_container_create
      description: |-
        Container remotes represent an external repository that implements the Container
        Registry API. Container remotes support deferred downloading by configuring
        the ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide
        significant disk space savings.
      summary: Create a container remote
      tags:
      - 'Remotes: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container.ContainerRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/container.ContainerRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/container.ContainerRemote'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContainerRemoteResponse'
          description: ''
  '{container_container_remote_href}':
    get:
      operationId: remotes_container_container_read
      description: |-
        Container remotes represent an external repository that implements the Container
        Registry API. Container remotes support deferred downloading by configuring
        the ``policy`` field.  ``on_demand`` and ``streamed`` policies can provide
        significant disk space savings.
      summary: Inspect a container remote
      parameters:
      - in: path
        name: container_container_remote_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Remotes: Container'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContainerRemoteResponse'
          description: ''
    put:
      operationId: remotes_container_container_update
      description: Trigger an asynchronous update task
      summary: Update a container remote
      parameters:
      - in: path
        name: container_container_remote_href
        schema:
          type: string
        required: true
      tags:
      - 'Remotes: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container.ContainerRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/container.ContainerRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/container.ContainerRemote'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    patch:
      operationId: remotes_container_container_partial_update
      description: Trigger an asynchronous partial update task
      summary: Update a container remote
      parameters:
      - in: path
        name: container_container_remote_href
        schema:
          type: string
        required: true
      tags:
      - 'Remotes: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContainerRemote'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContainerRemote'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContainerRemote'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    delete:
      operationId: remotes_container_container_delete
      description: Trigger an asynchronous delete task
      summary: Delete a container remote
      parameters:
      - in: path
        name: container_container_remote_href
        schema:
          type: string
        required: true
      tags:
      - 'Remotes: Container'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/repair/:
    post:
      operationId: repair_post
      description: Trigger an asynchronous task that checks for missing or corrupted
        artifacts, and attempts to redownload them.
      summary: Repair Artifact Storage
      tags:
      - Repair
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/repositories/:
    get:
      operationId: repositories_list
      description: Endpoint to list all repositories.
      summary: List repositories
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_label_select
        schema:
          type: string
        description: Filter labels by search string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Repositories
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRepositoryResponseList'
          description: ''
  /pulp/api/v3/repositories/ansible/ansible/:
    get:
      operationId: repositories_ansible_ansible_list
      description: ViewSet for Ansible Repositories.
      summary: List ansible repositorys
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_label_select
        schema:
          type: string
        description: Filter labels by search string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Ansible'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedansible.AnsibleRepositoryResponseList'
          description: ''
    post:
      operationId: repositories_ansible_ansible_create
      description: ViewSet for Ansible Repositories.
      summary: Create an ansible repository
      tags:
      - 'Repositories: Ansible'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleRepository'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleRepository'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleRepository'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.AnsibleRepositoryResponse'
          description: ''
  '{ansible_ansible_repository_href}':
    get:
      operationId: repositories_ansible_ansible_read
      description: ViewSet for Ansible Repositories.
      summary: Inspect an ansible repository
      parameters:
      - in: path
        name: ansible_ansible_repository_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Ansible'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ansible.AnsibleRepositoryResponse'
          description: ''
    put:
      operationId: repositories_ansible_ansible_update
      description: Trigger an asynchronous update task
      summary: Update an ansible repository
      parameters:
      - in: path
        name: ansible_ansible_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Ansible'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleRepository'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleRepository'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ansible.AnsibleRepository'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    patch:
      operationId: repositories_ansible_ansible_partial_update
      description: Trigger an asynchronous partial update task
      summary: Update an ansible repository
      parameters:
      - in: path
        name: ansible_ansible_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Ansible'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedansible.AnsibleRepository'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedansible.AnsibleRepository'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedansible.AnsibleRepository'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    delete:
      operationId: repositories_ansible_ansible_delete
      description: Trigger an asynchronous delete task
      summary: Delete an ansible repository
      parameters:
      - in: path
        name: ansible_ansible_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Ansible'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{ansible_ansible_repository_href}modify/':
    post:
      operationId: repositories_ansible_ansible_modify
      description: Trigger an asynchronous task to create a new repository version.
      summary: Modify Repository Content
      parameters:
      - in: path
        name: ansible_ansible_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Ansible'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryAddRemoveContent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryAddRemoveContent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryAddRemoveContent'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{ansible_ansible_repository_href}sync/':
    post:
      operationId: repositories_ansible_ansible_sync
      description: Trigger an asynchronous task to sync Ansible content.
      parameters:
      - in: path
        name: ansible_ansible_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Ansible'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnsibleRepositorySyncURL'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnsibleRepositorySyncURL'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnsibleRepositorySyncURL'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{ansible_ansible_repository_href}versions/':
    get:
      operationId: repositories_ansible_ansible_versions_list
      description: AnsibleRepositoryVersion represents a single file repository version.
      summary: List repository versions
      parameters:
      - in: path
        name: ansible_ansible_repository_href
        schema:
          type: string
        required: true
      - in: query
        name: content
        schema:
          type: string
        description: Content Unit referenced by HREF
      - in: query
        name: content__in
        schema:
          type: string
        description: Content Unit referenced by HREF
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: number
        schema:
          type: integer
          maximum: 2147483647
      - in: query
        name: number__gt
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is greater than value
      - in: query
        name: number__gte
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is greater than or equal to value
      - in: query
        name: number__lt
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is less than value
      - in: query
        name: number__lte
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is less than or equal to value
      - in: query
        name: number__range
        schema:
          type: array
          items:
            type: integer
            maximum: 2147483647
        description: Filter results where number is between two comma separated values
        explode: false
        style: form
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_created
        schema:
          type: string
          format: date-time
        description: ISO 8601 formatted dates are supported
      - in: query
        name: pulp_created__gt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is greater than value
      - in: query
        name: pulp_created__gte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is greater than or equal to
          value
      - in: query
        name: pulp_created__lt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is less than value
      - in: query
        name: pulp_created__lte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is less than or equal to value
      - in: query
        name: pulp_created__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            readOnly: true
        description: Filter results where pulp_created is between two comma separated
          values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Ansible Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRepositoryVersionResponseList'
          description: ''
  '{ansible_ansible_repository_version_href}':
    get:
      operationId: repositories_ansible_ansible_versions_read
      description: AnsibleRepositoryVersion represents a single file repository version.
      summary: Inspect a repository version
      parameters:
      - in: path
        name: ansible_ansible_repository_version_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Ansible Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryVersionResponse'
          description: ''
    delete:
      operationId: repositories_ansible_ansible_versions_delete
      description: Trigger an asynchronous task to delete a repository version.
      summary: Delete a repository version
      parameters:
      - in: path
        name: ansible_ansible_repository_version_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Ansible Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{ansible_ansible_repository_version_href}repair/':
    post:
      operationId: repositories_ansible_ansible_versions_repair
      description: Trigger an asynchronous task to repair a repository version.
      parameters:
      - in: path
        name: ansible_ansible_repository_version_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Ansible Versions'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryVersion'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/repositories/container/container/:
    get:
      operationId: repositories_container_container_list
      description: ViewSet for container repo.
      summary: List container repositorys
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_label_select
        schema:
          type: string
        description: Filter labels by search string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Container'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedcontainer.ContainerRepositoryResponseList'
          description: ''
    post:
      operationId: repositories_container_container_create
      description: ViewSet for container repo.
      summary: Create a container repository
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container.ContainerRepository'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/container.ContainerRepository'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/container.ContainerRepository'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContainerRepositoryResponse'
          description: ''
  /pulp/api/v3/repositories/container/container-push/:
    get:
      operationId: repositories_container_container_push_list
      description: |-
        ViewSet for a container push repository.

        POST and DELETE are disallowed because a push repository is tightly coupled with a
        ContainerDistribution which handles it automatically.
        Created - during push operation, removed - with ContainerDistribution removal.
      summary: List container push repositorys
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_label_select
        schema:
          type: string
        description: Filter labels by search string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Container-Push'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginatedcontainer.ContainerPushRepositoryResponseList'
          description: ''
  '{container_container_push_repository_href}':
    get:
      operationId: repositories_container_container_push_read
      description: |-
        ViewSet for a container push repository.

        POST and DELETE are disallowed because a push repository is tightly coupled with a
        ContainerDistribution which handles it automatically.
        Created - during push operation, removed - with ContainerDistribution removal.
      summary: Inspect a container push repository
      parameters:
      - in: path
        name: container_container_push_repository_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Container-Push'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContainerPushRepositoryResponse'
          description: ''
  '{container_container_push_repository_href}remove_image/':
    post:
      operationId: repositories_container_container_push_remove_image
      description: Trigger an asynchronous task to remove a manifest and all its associated
        data by a digest
      summary: Delete an image from a repository
      parameters:
      - in: path
        name: container_container_push_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container-Push'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RemoveImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RemoveImage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_push_repository_href}tag/':
    post:
      operationId: repositories_container_container_push_tag
      description: Trigger an asynchronous task to tag an image in the repository
      summary: Create a Tag
      parameters:
      - in: path
        name: container_container_push_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container-Push'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagImage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_push_repository_href}untag/':
    post:
      operationId: repositories_container_container_push_untag
      description: Trigger an asynchronous task to untag an image in the repository
      summary: Delete a tag
      parameters:
      - in: path
        name: container_container_push_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container-Push'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnTagImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnTagImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnTagImage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_push_repository_href}versions/':
    get:
      operationId: repositories_container_container_push_versions_list
      description: |-
        ContainerPushRepositoryVersion represents a single container push repository version.

        Repository versions of a push repository are not allowed to be deleted. Versioning of such
        repositories, as well as creation/removal, happens automatically without explicit user actions.
        Users could make a repository not functional by accident if allowed to delete repository
        versions.
      summary: List repository versions
      parameters:
      - in: path
        name: container_container_push_repository_href
        schema:
          type: string
        required: true
      - in: query
        name: content
        schema:
          type: string
        description: Content Unit referenced by HREF
      - in: query
        name: content__in
        schema:
          type: string
        description: Content Unit referenced by HREF
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: number
        schema:
          type: integer
          maximum: 2147483647
      - in: query
        name: number__gt
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is greater than value
      - in: query
        name: number__gte
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is greater than or equal to value
      - in: query
        name: number__lt
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is less than value
      - in: query
        name: number__lte
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is less than or equal to value
      - in: query
        name: number__range
        schema:
          type: array
          items:
            type: integer
            maximum: 2147483647
        description: Filter results where number is between two comma separated values
        explode: false
        style: form
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_created
        schema:
          type: string
          format: date-time
        description: ISO 8601 formatted dates are supported
      - in: query
        name: pulp_created__gt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is greater than value
      - in: query
        name: pulp_created__gte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is greater than or equal to
          value
      - in: query
        name: pulp_created__lt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is less than value
      - in: query
        name: pulp_created__lte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is less than or equal to value
      - in: query
        name: pulp_created__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            readOnly: true
        description: Filter results where pulp_created is between two comma separated
          values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Container Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRepositoryVersionResponseList'
          description: ''
  '{container_container_push_repository_version_href}':
    get:
      operationId: repositories_container_container_push_versions_read
      description: |-
        ContainerPushRepositoryVersion represents a single container push repository version.

        Repository versions of a push repository are not allowed to be deleted. Versioning of such
        repositories, as well as creation/removal, happens automatically without explicit user actions.
        Users could make a repository not functional by accident if allowed to delete repository
        versions.
      summary: Inspect a repository version
      parameters:
      - in: path
        name: container_container_push_repository_version_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Container Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryVersionResponse'
          description: ''
    delete:
      operationId: repositories_container_container_push_versions_delete
      description: Trigger an asynchronous task to delete a repository version.
      summary: Delete a repository version
      parameters:
      - in: path
        name: container_container_push_repository_version_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_push_repository_version_href}repair/':
    post:
      operationId: repositories_container_container_push_versions_repair
      description: Trigger an asynchronous task to repair a repository version.
      parameters:
      - in: path
        name: container_container_push_repository_version_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container Versions'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryVersion'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_href}':
    get:
      operationId: repositories_container_container_read
      description: ViewSet for container repo.
      summary: Inspect a container repository
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Container'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/container.ContainerRepositoryResponse'
          description: ''
    put:
      operationId: repositories_container_container_update
      description: Trigger an asynchronous update task
      summary: Update a container repository
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/container.ContainerRepository'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/container.ContainerRepository'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/container.ContainerRepository'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    patch:
      operationId: repositories_container_container_partial_update
      description: Trigger an asynchronous partial update task
      summary: Update a container repository
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContainerRepository'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContainerRepository'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Patchedcontainer.ContainerRepository'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
    delete:
      operationId: repositories_container_container_delete
      description: Trigger an asynchronous delete task
      summary: Delete a container repository
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_href}add/':
    post:
      operationId: repositories_container_container_add
      description: Trigger an asynchronous task to recursively add container content.
      summary: Add content
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecursiveManage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecursiveManage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecursiveManage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_href}build_image/':
    post:
      operationId: repositories_container_container_build_image
      description: Trigger an asynchronous task to build an OCI image from a Containerfile.
        A new repository version is created with the new image and tag. This API is
        tech preview in Pulp Container 1.1. Backwards compatibility when upgrading
        is not guaranteed.
      summary: Build an Image
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OCIBuildImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OCIBuildImage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_href}copy_manifests/':
    post:
      operationId: repositories_container_container_copy_manifests
      description: Trigger an asynchronous task to copy manifests
      summary: Copy manifests
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManifestCopy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ManifestCopy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ManifestCopy'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_href}copy_tags/':
    post:
      operationId: repositories_container_container_copy_tags
      description: Trigger an asynchronous task to copy tags
      summary: Copy tags
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCopy'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagCopy'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagCopy'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_href}remove/':
    post:
      operationId: repositories_container_container_remove
      description: Trigger an async task to recursively remove container content.
      summary: Remove content
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecursiveManage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecursiveManage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecursiveManage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_href}sync/':
    post:
      operationId: repositories_container_container_sync
      description: Trigger an asynchronous task to sync content.
      summary: Sync from a remote
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositorySyncURL'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositorySyncURL'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositorySyncURL'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_href}tag/':
    post:
      operationId: repositories_container_container_tag
      description: Trigger an asynchronous task to tag an image in the repository
      summary: Create a Tag
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagImage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_href}untag/':
    post:
      operationId: repositories_container_container_untag
      description: Trigger an asynchronous task to untag an image in the repository
      summary: Delete a tag
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnTagImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnTagImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnTagImage'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_href}versions/':
    get:
      operationId: repositories_container_container_versions_list
      description: ContainerRepositoryVersion represents a single container repository
        version.
      summary: List repository versions
      parameters:
      - in: path
        name: container_container_repository_href
        schema:
          type: string
        required: true
      - in: query
        name: content
        schema:
          type: string
        description: Content Unit referenced by HREF
      - in: query
        name: content__in
        schema:
          type: string
        description: Content Unit referenced by HREF
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: number
        schema:
          type: integer
          maximum: 2147483647
      - in: query
        name: number__gt
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is greater than value
      - in: query
        name: number__gte
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is greater than or equal to value
      - in: query
        name: number__lt
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is less than value
      - in: query
        name: number__lte
        schema:
          type: integer
          maximum: 2147483647
        description: Filter results where number is less than or equal to value
      - in: query
        name: number__range
        schema:
          type: array
          items:
            type: integer
            maximum: 2147483647
        description: Filter results where number is between two comma separated values
        explode: false
        style: form
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: pulp_created
        schema:
          type: string
          format: date-time
        description: ISO 8601 formatted dates are supported
      - in: query
        name: pulp_created__gt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is greater than value
      - in: query
        name: pulp_created__gte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is greater than or equal to
          value
      - in: query
        name: pulp_created__lt
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is less than value
      - in: query
        name: pulp_created__lte
        schema:
          type: string
          format: date-time
        description: Filter results where pulp_created is less than or equal to value
      - in: query
        name: pulp_created__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            readOnly: true
        description: Filter results where pulp_created is between two comma separated
          values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Container Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRepositoryVersionResponseList'
          description: ''
  '{container_container_repository_version_href}':
    get:
      operationId: repositories_container_container_versions_read
      description: ContainerRepositoryVersion represents a single container repository
        version.
      summary: Inspect a repository version
      parameters:
      - in: path
        name: container_container_repository_version_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Repositories: Container Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryVersionResponse'
          description: ''
    delete:
      operationId: repositories_container_container_versions_delete
      description: Trigger an asynchronous task to delete a repository version.
      summary: Delete a repository version
      parameters:
      - in: path
        name: container_container_repository_version_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container Versions'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  '{container_container_repository_version_href}repair/':
    post:
      operationId: repositories_container_container_versions_repair
      description: Trigger an asynchronous task to repair a repository version.
      parameters:
      - in: path
        name: container_container_repository_version_href
        schema:
          type: string
        required: true
      tags:
      - 'Repositories: Container Versions'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryVersion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RepositoryVersion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RepositoryVersion'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/signing-services/:
    get:
      operationId: signing_services_list
      description: A ViewSet that supports browsing of existing signing services.
      summary: List signing services
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Signing-Services
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSigningServiceResponseList'
          description: ''
  '{signing_service_href}':
    get:
      operationId: signing_services_read
      description: A ViewSet that supports browsing of existing signing services.
      summary: Inspect a signing service
      parameters:
      - in: path
        name: signing_service_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Signing-Services
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningServiceResponse'
          description: ''
  /pulp/api/v3/status/:
    get:
      operationId: status_read
      description: |-
        Returns status and app information about Pulp.

        Information includes:
         * version of pulpcore and loaded pulp plugins
         * known workers
         * known content apps
         * database connection status
         * redis connection status
         * disk usage information
      summary: Inspect status of Pulp
      tags:
      - Status
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: ''
  /pulp/api/v3/task-groups/:
    get:
      operationId: task_groups_list
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: List task groups
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Task-Groups
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskGroupResponseList'
          description: ''
  '{task_group_href}':
    get:
      operationId: task_groups_read
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: Inspect a task group
      parameters:
      - in: path
        name: task_group_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Task-Groups
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskGroupResponse'
          description: ''
  /pulp/api/v3/tasks/:
    get:
      operationId: tasks_list
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: List tasks
      parameters:
      - in: query
        name: child_tasks
        schema:
          type: string
          format: uuid
        description: Foreign Key referenced by HREF
      - in: query
        name: created_resources
        schema:
          type: string
          format: uuid
      - in: query
        name: finished_at
        schema:
          type: string
          format: date-time
          nullable: true
        description: ISO 8601 formatted dates are supported
      - in: query
        name: finished_at__gt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is greater than value
      - in: query
        name: finished_at__gte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is greater than or equal to
          value
      - in: query
        name: finished_at__lt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is less than value
      - in: query
        name: finished_at__lte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where finished_at is less than or equal to value
      - in: query
        name: finished_at__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            nullable: true
        description: Filter results where finished_at is between two comma separated
          values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: parent_task
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: reserved_resources_record
        schema:
          type: string
          format: uuid
      - in: query
        name: started_at
        schema:
          type: string
          format: date-time
          nullable: true
        description: ISO 8601 formatted dates are supported
      - in: query
        name: started_at__gt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is greater than value
      - in: query
        name: started_at__gte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is greater than or equal to value
      - in: query
        name: started_at__lt
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is less than value
      - in: query
        name: started_at__lte
        schema:
          type: string
          format: date-time
          nullable: true
        description: Filter results where started_at is less than or equal to value
      - in: query
        name: started_at__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            nullable: true
        description: Filter results where started_at is between two comma separated
          values
        explode: false
        style: form
      - in: query
        name: state
        schema:
          type: string
          enum:
          - canceled
          - completed
          - failed
          - running
          - skipped
          - waiting
      - in: query
        name: state__in
        schema:
          type: array
          items:
            type: string
            enum:
            - canceled
            - completed
            - failed
            - running
            - skipped
            - waiting
        description: Filter results where state is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: task_group
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: worker
        schema:
          type: string
          format: uuid
          nullable: true
        description: Foreign Key referenced by HREF
      - in: query
        name: worker__in
        schema:
          type: array
          items:
            type: string
            format: uuid
            nullable: true
        description: Filter results where worker is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTaskResponseList'
          description: ''
  /pulp/api/v3/uploads/:
    get:
      operationId: uploads_list
      description: View for chunked uploads.
      summary: List uploads
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Uploads
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUploadResponseList'
          description: ''
    post:
      operationId: uploads_create
      description: View for chunked uploads.
      summary: Create an upload
      tags:
      - Uploads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Upload'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Upload'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Upload'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
          description: ''
  '{upload_href}':
    get:
      operationId: uploads_read
      description: View for chunked uploads.
      summary: Inspect an upload
      parameters:
      - in: path
        name: upload_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Uploads
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDetailResponse'
          description: ''
    put:
      operationId: uploads_update
      description: Upload a chunk for an upload.
      summary: Upload a file chunk
      parameters:
      - in: header
        name: Content-Range
        schema:
          type: string
        description: The Content-Range header specifies the location of the file chunk
          within the file.
        required: true
      - in: path
        name: upload_href
        schema:
          type: string
        required: true
      tags:
      - Uploads
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadChunk'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadChunk'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
          description: ''
    delete:
      operationId: uploads_delete
      description: View for chunked uploads.
      summary: Delete an upload
      parameters:
      - in: path
        name: upload_href
        schema:
          type: string
        required: true
      tags:
      - Uploads
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  '{upload_href}commit/':
    post:
      operationId: uploads_commit
      description: Queues a Task that creates an Artifact, and the Upload gets deleted
        and cannot be re-used.
      summary: Finish an Upload
      parameters:
      - in: path
        name: upload_href
        schema:
          type: string
        required: true
      tags:
      - Uploads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadCommit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UploadCommit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadCommit'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp/api/v3/users/:
    get:
      operationId: users_list
      description: |-
        ViewSet for User.

        NOTE: This API endpoint is in "tech preview" and subject to change
      summary: List users
      parameters:
      - in: query
        name: email
        schema:
          type: string
          format: email
        description: Filter results where email matches value
      - in: query
        name: email__contains
        schema:
          type: string
          format: email
        description: Filter results where email contains value
      - in: query
        name: email__icontains
        schema:
          type: string
          format: email
        description: Filter results where email contains value
      - in: query
        name: email__iexact
        schema:
          type: string
          format: email
        description: Filter results where email matches value
      - in: query
        name: email__in
        schema:
          type: array
          items:
            type: string
            format: email
        description: Filter results where email is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: first_name
        schema:
          type: string
        description: Filter results where first_name matches value
      - in: query
        name: first_name__contains
        schema:
          type: string
        description: Filter results where first_name contains value
      - in: query
        name: first_name__icontains
        schema:
          type: string
        description: Filter results where first_name contains value
      - in: query
        name: first_name__iexact
        schema:
          type: string
        description: Filter results where first_name matches value
      - in: query
        name: first_name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where first_name is in a comma-separated list
          of values
        explode: false
        style: form
      - in: query
        name: is_active
        schema:
          type: boolean
        description: Filter results where is_active matches value
      - in: query
        name: is_staff
        schema:
          type: boolean
        description: Filter results where is_staff matches value
      - in: query
        name: last_name
        schema:
          type: string
        description: Filter results where last_name matches value
      - in: query
        name: last_name__contains
        schema:
          type: string
        description: Filter results where last_name contains value
      - in: query
        name: last_name__icontains
        schema:
          type: string
        description: Filter results where last_name contains value
      - in: query
        name: last_name__iexact
        schema:
          type: string
        description: Filter results where last_name matches value
      - in: query
        name: last_name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where last_name is in a comma-separated list of
          values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: username
        schema:
          type: string
        description: Filter results where username matches value
      - in: query
        name: username__contains
        schema:
          type: string
        description: Filter results where username contains value
      - in: query
        name: username__icontains
        schema:
          type: string
        description: Filter results where username contains value
      - in: query
        name: username__iexact
        schema:
          type: string
        description: Filter results where username matches value
      - in: query
        name: username__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where username is in a comma-separated list of
          values
        explode: false
        style: form
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserResponseList'
          description: ''
  '{galaxy_user_href}permissions/':
    get:
      operationId: users_permissions
      description: List user permissions.
      parameters:
      - in: path
        name: galaxy_user_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionResponse'
          description: ''
  /pulp/api/v3/workers/:
    get:
      operationId: workers_list
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: List workers
      parameters:
      - in: query
        name: last_heartbeat
        schema:
          type: string
          format: date-time
        description: ISO 8601 formatted dates are supported
      - in: query
        name: last_heartbeat__gt
        schema:
          type: string
          format: date-time
        description: Filter results where last_heartbeat is greater than value
      - in: query
        name: last_heartbeat__gte
        schema:
          type: string
          format: date-time
        description: Filter results where last_heartbeat is greater than or equal
          to value
      - in: query
        name: last_heartbeat__lt
        schema:
          type: string
          format: date-time
        description: Filter results where last_heartbeat is less than value
      - in: query
        name: last_heartbeat__lte
        schema:
          type: string
          format: date-time
        description: Filter results where last_heartbeat is less than or equal to
          value
      - in: query
        name: last_heartbeat__range
        schema:
          type: array
          items:
            type: string
            format: date-time
            readOnly: true
        description: Filter results where last_heartbeat is between two comma separated
          values
        explode: false
        style: form
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: missing
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__icontains
        schema:
          type: string
        description: Filter results where name contains value
      - in: query
        name: name__in
        schema:
          type: array
          items:
            type: string
        description: Filter results where name is in a comma-separated list of values
        explode: false
        style: form
      - in: query
        name: name__startswith
        schema:
          type: string
        description: Filter results where name starts with value
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: online
        schema:
          type: boolean
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Workers
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWorkerResponseList'
          description: ''
  '{worker_href}':
    get:
      operationId: workers_read
      description: |-
        A customized named ModelViewSet that knows how to register itself with the Pulp API router.

        This viewset is discoverable by its name.
        "Normal" Django Models and Master/Detail models are supported by the ``register_with`` method.

        Attributes:
            lookup_field (str): The name of the field by which an object should be looked up, in
                addition to any parent lookups if this ViewSet is nested. Defaults to 'pk'
            endpoint_name (str): The name of the final path segment that should identify the ViewSet's
                collection endpoint.
            nest_prefix (str): Optional prefix under which this ViewSet should be nested. This must
                correspond to the "parent_prefix" of a router with rest_framework_nested.NestedMixin.
                None indicates this ViewSet should not be nested.
            parent_lookup_kwargs (dict): Optional mapping of key names that would appear in self.kwargs
                to django model filter expressions that can be used with the corresponding value from
                self.kwargs, used only by a nested ViewSet to filter based on the parent object's
                identity.
            schema (DefaultSchema): The schema class to use by default in a viewset.
      summary: Inspect a worker
      parameters:
      - in: path
        name: worker_href
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Workers
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkerResponse'
          description: ''
  /pulp_ansible/galaxy/{path}/api/:
    get:
      operationId: pulp_ansible_galaxy_api_get
      description: Return a response to the "GET" action.
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Api'
      responses:
        '200':
          description: No response body
  '{ansible_role_href}api/v1/roles/':
    get:
      operationId: api_v1_roles_get
      description: APIView for Roles.
      parameters:
      - in: path
        name: ansible_role_href
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Roles'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGalaxyRoleResponseList'
          description: ''
  '{ansible_role_href}versions/':
    get:
      operationId: versions_get
      description: APIView for Role Versions.
      parameters:
      - in: path
        name: ansible_role_href
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Versions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGalaxyRoleVersionResponseList'
          description: ''
  '{ansible_collection_href}api/v2/collections/':
    get:
      operationId: api_v2_collections_get
      description: View for Collection models.
      parameters:
      - in: path
        name: ansible_collection_href
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Api: Collections'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGalaxyCollectionResponseList'
          description: ''
    post:
      operationId: api_v2_collections_post
      description: Queues a task that creates a new Collection from an uploaded artifact.
      parameters:
      - in: path
        name: ansible_collection_href
        schema:
          type: string
        required: true
      tags:
      - 'Api: Collections'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GalaxyCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GalaxyCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GalaxyCollection'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GalaxyCollectionResponse'
          description: ''
  '{ansible_collection_version_href}versions/':
    get:
      operationId: versions_get
      description: APIView for Collections by namespace/name.
      parameters:
      - in: path
        name: ansible_collection_version_href
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - Versions
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGalaxyCollectionVersionResponseList'
          description: ''
  /pulp_ansible/galaxy/{path}/api/v2/collections/{namespace}/{name}/versions/{version}/:
    get:
      operationId: pulp_ansible_galaxy_api_v2_collections_versions_get
      description: Return a response to the "GET" action.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Galaxy Api V2 Versions'
      responses:
        '200':
          description: No response body
  /pulp_ansible/galaxy/{path}/api/v3/:
    get:
      operationId: pulp_ansible_galaxy_api_v3_read
      description: ViewSet for Repository Metadata.
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Galaxy V3'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepoMetadataResponse'
          description: ''
  /pulp_ansible/galaxy/{path}/api/v3/artifacts/collections/:
    post:
      operationId: pulp_ansible_galaxy_api_v3_artifacts_collections_create
      description: Create an artifact and trigger an asynchronous task to create Collection
        content from it.
      summary: Upload a collection
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - 'Pulp_Ansible: Galaxy Api V3 Collections'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CollectionOneShot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CollectionOneShot'
        required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncOperationResponse'
          description: ''
  /pulp_ansible/galaxy/{path}/api/v3/collection_versions/all/:
    get:
      operationId: pulp_ansible_galaxy_api_v3_collection_versions_all_list
      description: Returns paginated CollectionVersions list.
      parameters:
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Galaxy Api V3 All'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UnpaginatedCollectionVersionResponse'
          description: ''
  /pulp_ansible/galaxy/{path}/api/v3/collections/:
    get:
      operationId: pulp_ansible_galaxy_api_v3_collections_list
      description: ViewSet for Collections.
      parameters:
      - in: query
        name: deprecated
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Galaxy Api Collections'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionResponseList'
          description: ''
  /pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/:
    get:
      operationId: pulp_ansible_galaxy_api_v3_collections_read
      description: ViewSet for Collections.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Galaxy Api Collections'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponse'
          description: ''
    patch:
      operationId: pulp_ansible_galaxy_api_v3_collections_update
      description: Update a Collection object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      tags:
      - 'Pulp_Ansible: Galaxy Api Collections'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCollection'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionResponse'
          description: ''
  /pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/:
    get:
      operationId: pulp_ansible_galaxy_api_v3_collections_versions_list
      description: Returns paginated CollectionVersions list.
      parameters:
      - in: query
        name: is_highest
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: query
        name: name
        schema:
          type: string
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: query
        name: namespace
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: q
        schema:
          type: string
      - in: query
        name: repository_version
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_added
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: repository_version_removed
        schema:
          type: string
        description: Repository Version referenced by HREF
      - in: query
        name: tags
        schema:
          type: string
        description: Filter by comma separate list of tags that must all be matched
      - in: query
        name: version
        schema:
          type: string
        description: Filter results where version matches value
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Galaxy Api V3 Versions'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCollectionVersionResponseList'
          description: ''
  /pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/{version}/:
    get:
      operationId: pulp_ansible_galaxy_api_v3_collections_versions_read
      description: Returns a CollectionVersion object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Galaxy Api V3 Versions'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionResponse'
          description: ''
  /pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/:
    get:
      operationId: pulp_ansible_galaxy_api_v3_collections_versions_docs_blob_read
      description: Returns a CollectionVersion object.
      parameters:
      - in: path
        name: name
        schema:
          type: string
        required: true
      - in: path
        name: namespace
        schema:
          type: string
        required: true
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: path
        name: version
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Galaxy Api V3 Collections Docs-Blob'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionVersionDocsResponse'
          description: ''
  /pulp_ansible/galaxy/{path}/api/v3/collections/all/:
    get:
      operationId: pulp_ansible_galaxy_api_v3_collections_all_list
      description: Unpaginated ViewSet for Collections.
      parameters:
      - in: query
        name: deprecated
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
      - in: path
        name: path
        schema:
          type: string
        required: true
      - in: query
        name: fields
        schema:
          type: string
        description: A list of fields to include in the response.
      - in: query
        name: exclude_fields
        schema:
          type: string
        description: A list of fields to exclude from the response.
      tags:
      - 'Pulp_Ansible: Galaxy Api V3 All'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CollectionResponse'
          description: ''
  /token/:
    get:
      operationId: token_get
      description: Handles GET requests for the /token/ endpoint.
      tags:
      - Token
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    AccessPolicy:
      type: object
      description: Serializer for AccessPolicy.
      properties:
        permissions_assignment:
          type: array
          items:
            type: object
          description: List of callables that define the new permissions to be created
            for new objects.
        statements:
          type: array
          items:
            type: object
          description: List of policy statements defining the policy.
      required:
      - permissions_assignment
      - statements
    AccessPolicyResponse:
      type: object
      description: Serializer for AccessPolicy.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        permissions_assignment:
          type: array
          items:
            type: object
          description: List of callables that define the new permissions to be created
            for new objects.
        statements:
          type: array
          items:
            type: object
          description: List of policy statements defining the policy.
        viewset_name:
          type: string
          readOnly: true
          description: The name of ViewSet this AccessPolicy authorizes.
        customized:
          type: boolean
          readOnly: true
          description: True if the AccessPolicy has been user-modified. False otherwise.
      required:
      - permissions_assignment
      - statements
    AnsibleRepositorySyncURL:
      type: object
      description: Serializer for Ansible Repository Sync URL.
      properties:
        remote:
          type: string
          format: uri
          description: A remote to sync from. This will override a remote set on repository.
        mirror:
          type: boolean
          default: false
          description: If ``True``, synchronization will remove all content that is
            not present in the remote repository. If ``False``, sync will be additive
            only.
        optimize:
          type: boolean
          default: true
          description: Whether to optimize sync or not.
    Artifact:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        file:
          type: string
          format: binary
          description: The stored file.
        size:
          type: integer
          description: The size of the file in bytes.
        md5:
          type: string
          nullable: true
          description: The MD5 checksum of the file if available.
        sha1:
          type: string
          nullable: true
          description: The SHA-1 checksum of the file if available.
        sha224:
          type: string
          nullable: true
          description: The SHA-224 checksum of the file if available.
        sha256:
          type: string
          nullable: true
          description: The SHA-256 checksum of the file if available.
        sha384:
          type: string
          nullable: true
          description: The SHA-384 checksum of the file if available.
        sha512:
          type: string
          nullable: true
          description: The SHA-512 checksum of the file if available.
      required:
      - file
    ArtifactRefResponse:
      type: object
      description: A serializer for an Artifact reference.
      properties:
        filename:
          type: string
        sha256:
          type: string
        size:
          type: integer
      required:
      - filename
      - sha256
      - size
    ArtifactResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        file:
          type: string
          description: The stored file.
        size:
          type: integer
          description: The size of the file in bytes.
        md5:
          type: string
          nullable: true
          description: The MD5 checksum of the file if available.
        sha1:
          type: string
          nullable: true
          description: The SHA-1 checksum of the file if available.
        sha224:
          type: string
          nullable: true
          description: The SHA-224 checksum of the file if available.
        sha256:
          type: string
          nullable: true
          description: The SHA-256 checksum of the file if available.
        sha384:
          type: string
          nullable: true
          description: The SHA-384 checksum of the file if available.
        sha512:
          type: string
          nullable: true
          description: The SHA-512 checksum of the file if available.
      required:
      - file
    AsyncOperationResponse:
      type: object
      description: Serializer for asynchronous operations.
      properties:
        task:
          type: string
          format: uri
          description: The href of the task.
      required:
      - task
    CollectionImportDetailResponse:
      type: object
      description: A serializer for a CollectionImport detail view.
      properties:
        id:
          type: string
          format: uuid
        state:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        error:
          type: object
        messages:
          type: object
      required:
      - created_at
      - error
      - finished_at
      - id
      - messages
      - started_at
      - state
      - updated_at
    CollectionMetadataResponse:
      type: object
      description: A serializer for a CollectionVersion metadata.
      properties:
        authors:
          type: array
          items:
            type: string
          readOnly: true
        contents:
          type: object
          readOnly: true
        dependencies:
          type: object
          readOnly: true
        description:
          type: string
          readOnly: true
        documentation:
          type: string
          readOnly: true
        homepage:
          type: string
          readOnly: true
        issues:
          type: string
          readOnly: true
        license:
          type: array
          items:
            type: string
          readOnly: true
        repository:
          type: string
          readOnly: true
        tags:
          type: array
          items:
            type: string
      required:
      - tags
    CollectionNamespaceResponse:
      type: object
      description: A serializer for a Collection Version namespace field.
      properties:
        name:
          type: string
      required:
      - name
    CollectionOneShot:
      type: object
      description: A serializer for the Collection One Shot Upload API.
      properties:
        file:
          type: string
          format: binary
          description: The Collection tarball.
        sha256:
          type: string
          description: An optional sha256 checksum of the uploaded file.
        expected_namespace:
          type: string
          description: The expected 'namespace' of the Collection to be verified against
            the metadata during import.
        expected_name:
          type: string
          description: The expected 'name' of the Collection to be verified against
            the metadata during import.
        expected_version:
          type: string
          description: The expected version of the Collection to be verified against
            the metadata during import.
      required:
      - file
    CollectionRefResponse:
      type: object
      description: A serializer for a Collection reference.
      properties:
        id:
          type: string
        name:
          type: string
        href:
          type: string
          readOnly: true
      required:
      - id
      - name
    CollectionResponse:
      type: object
      description: A serializer for a Collection.
      properties:
        href:
          type: string
          readOnly: true
        namespace:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        deprecated:
          type: boolean
          readOnly: true
        versions_url:
          type: string
          readOnly: true
        highest_version:
          type: object
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    CollectionUploadWithDownloadUrl:
      type: object
      description: A serializer for the Collection One Shot Upload API.
      properties:
        file:
          type: string
          format: binary
        sha256:
          type: string
      required:
      - file
    CollectionUploadWithDownloadUrlResponse:
      type: object
      description: A serializer for the Collection One Shot Upload API.
      properties:
        file:
          type: string
        sha256:
          type: string
      required:
      - file
    CollectionVersionDocsResponse:
      type: object
      description: A serializer to display the docs_blob of a CollectionVersion.
      properties:
        docs_blob:
          type: object
      required:
      - docs_blob
    CollectionVersionResponse:
      type: object
      description: A serializer for a CollectionVersion.
      properties:
        version:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        requires_ansible:
          type: string
          nullable: true
          maxLength: 255
        artifact:
          allOf:
          - $ref: '#/components/schemas/ArtifactRefResponse'
          readOnly: true
        collection:
          allOf:
          - $ref: '#/components/schemas/CollectionRefResponse'
          readOnly: true
        download_url:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        namespace:
          allOf:
          - $ref: '#/components/schemas/CollectionNamespaceResponse'
          readOnly: true
        metadata:
          allOf:
          - $ref: '#/components/schemas/CollectionMetadataResponse'
          readOnly: true
        manifest:
          type: object
          readOnly: true
          description: A JSON field holding MANIFEST.json data.
        files:
          type: object
          readOnly: true
          description: A JSON field holding FILES.json data.
      required:
      - created_at
      - updated_at
    CollectionVersionWithDownloadUrlResponse:
      type: object
      description: A serializer for a CollectionVersion.
      properties:
        version:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        requires_ansible:
          type: string
          nullable: true
          maxLength: 255
        artifact:
          allOf:
          - $ref: '#/components/schemas/ArtifactRefResponse'
          readOnly: true
        collection:
          allOf:
          - $ref: '#/components/schemas/CollectionWithFixedHrefsRefResponse'
          readOnly: true
        download_url:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        namespace:
          allOf:
          - $ref: '#/components/schemas/CollectionNamespaceResponse'
          readOnly: true
        metadata:
          allOf:
          - $ref: '#/components/schemas/CollectionMetadataResponse'
          readOnly: true
        manifest:
          type: object
          readOnly: true
          description: A JSON field holding MANIFEST.json data.
        files:
          type: object
          readOnly: true
          description: A JSON field holding FILES.json data.
      required:
      - created_at
      - updated_at
    CollectionWithFixedHrefsRefResponse:
      type: object
      description: A serializer for a Collection reference.
      properties:
        id:
          type: string
        name:
          type: string
        href:
          type: string
          readOnly: true
      required:
      - id
      - name
    CollectionWithFixedHrefsResponse:
      type: object
      description: A serializer for a Collection.
      properties:
        href:
          type: string
          readOnly: true
        namespace:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        deprecated:
          type: boolean
          readOnly: true
        versions_url:
          type: string
          readOnly: true
        highest_version:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    ContainerManifestDetailResponse:
      type: object
      properties:
        pulp_id:
          type: string
          format: uuid
          readOnly: true
        digest:
          type: string
          maxLength: 255
        schema_version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        media_type:
          $ref: '#/components/schemas/MediaTypeEnum'
        config_blob:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
        layers:
          type: string
          readOnly: true
      required:
      - digest
      - media_type
      - schema_version
    ContainerManifestResponse:
      type: object
      properties:
        pulp_id:
          type: string
          format: uuid
          readOnly: true
        digest:
          type: string
          maxLength: 255
        schema_version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        media_type:
          $ref: '#/components/schemas/MediaTypeEnum'
        config_blob:
          type: string
          readOnly: true
        tags:
          type: string
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
        layers:
          type: string
          readOnly: true
      required:
      - digest
      - media_type
      - schema_version
    ContainerNamespaceDetail:
      type: object
      properties:
        groups:
          type: string
      required:
      - groups
    ContainerNamespaceDetailResponse:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        my_permissions:
          allOf:
          - $ref: '#/components/schemas/MyPermissionsFieldResponse'
          readOnly: true
        owners:
          type: string
          readOnly: true
        groups:
          type: string
      required:
      - groups
    ContainerNamespaceResponse:
      type: object
      properties:
        name:
          type: string
          readOnly: true
        my_permissions:
          allOf:
          - $ref: '#/components/schemas/MyPermissionsFieldResponse'
          readOnly: true
        owners:
          type: string
          readOnly: true
    ContainerReadme:
      type: object
      properties:
        text:
          type: string
    ContainerReadmeResponse:
      type: object
      properties:
        updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        text:
          type: string
    ContainerRepositoryHistoryResponse:
      type: object
      properties:
        pulp_id:
          type: string
          format: uuid
          readOnly: true
        added:
          type: string
          readOnly: true
        removed:
          type: string
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
        number:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - number
    ContainerRepositoryResponse:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        pulp:
          type: string
          readOnly: true
        namespace:
          $ref: '#/components/schemas/ContainerNamespaceResponse'
        description:
          type: string
          readOnly: true
        created:
          type: string
          readOnly: true
        updated:
          type: string
          readOnly: true
      required:
      - namespace
    ContentAppStatusResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the worker.
        last_heartbeat:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the last time the worker talked to the service.
    ContentGuardResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: The unique name.
        description:
          type: string
          nullable: true
          description: An optional description.
      required:
      - name
    ContentSummary:
      type: object
      description: Serializer for the RepositoryVersion content summary
      properties:
        added:
          type: object
        removed:
          type: object
        present:
          type: object
      required:
      - added
      - present
      - removed
    ContentSummaryResponse:
      type: object
      description: Serializer for the RepositoryVersion content summary
      properties:
        added:
          type: object
        removed:
          type: object
        present:
          type: object
      required:
      - added
      - present
      - removed
    Copy:
      type: object
      description: A serializer for Content Copy API.
      properties:
        config:
          type: object
          description: A JSON document describing sources, destinations, and content
            to be copied
      required:
      - config
    CurrentUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - username
    CurrentUserResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          readOnly: true
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
        model_permissions:
          type: string
          readOnly: true
      required:
      - username
    DatabaseConnectionResponse:
      type: object
      description: Serializer for the database connection information
      properties:
        connected:
          type: boolean
          description: Info about whether the app can connect to the database
      required:
      - connected
    DistributionResponse:
      type: object
      properties:
        pulp_id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        base_path:
          type: string
        repository:
          $ref: '#/components/schemas/RepositoryResponse'
      required:
      - base_path
      - name
      - repository
    EvaluationResponse:
      type: object
      description: Results from evaluating a proposed parameter to a PulpImport call.
      properties:
        context:
          type: string
          description: Parameter value being evaluated.
        is_valid:
          type: boolean
          description: True if evaluation passed, false otherwise.
        messages:
          type: array
          items:
            type: string
          description: Messages describing results of all evaluations done. May be
            an empty list.
      required:
      - context
      - is_valid
      - messages
    GalaxyCollection:
      type: object
      description: A serializer for a Collection.
      properties:
        id:
          type: string
        name:
          type: string
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
      required:
      - created
      - id
      - modified
      - name
    GalaxyCollectionResponse:
      type: object
      description: A serializer for a Collection.
      properties:
        id:
          type: string
        name:
          type: string
        namespace:
          type: object
          readOnly: true
        href:
          type: string
          readOnly: true
        versions_url:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
        modified:
          type: string
          format: date-time
        latest_version:
          type: object
          readOnly: true
      required:
      - created
      - id
      - modified
      - name
    GalaxyCollectionVersionResponse:
      type: object
      description: A serializer for a CollectionVersion.
      properties:
        version:
          type: string
        href:
          type: string
          readOnly: true
        namespace:
          type: object
          readOnly: true
        collection:
          type: object
          readOnly: true
        artifact:
          type: object
          readOnly: true
        metadata:
          $ref: '#/components/schemas/CollectionMetadataResponse'
      required:
      - metadata
      - version
    GalaxyRoleResponse:
      type: object
      description: A serializer for Galaxy's representation of Roles.
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        namespace:
          type: string
      required:
      - name
      - namespace
    GalaxyRoleVersionResponse:
      type: object
      description: A serializer for Galaxy's representation of Role versions.
      properties:
        name:
          type: string
        source:
          type: string
          readOnly: true
      required:
      - name
    Group:
      type: object
      description: Serializer for Group.
      properties:
        name:
          type: string
          description: Name
          maxLength: 150
      required:
      - name
    GroupProgressReportResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        message:
          type: string
          readOnly: true
          description: The message shown to the user for the group progress report.
        code:
          type: string
          readOnly: true
          description: Identifies the type of group progress report'.
        total:
          type: integer
          readOnly: true
          description: The total count of items.
        done:
          type: integer
          readOnly: true
          description: The count of items already processed. Defaults to 0.
        suffix:
          type: string
          readOnly: true
          nullable: true
          description: The suffix to be shown with the group progress report.
    GroupResponse:
      type: object
      description: Serializer for Group.
      properties:
        name:
          type: string
          description: Name
          maxLength: 150
        pulp_href:
          type: string
          format: uri
          readOnly: true
        id:
          type: integer
          readOnly: true
      required:
      - name
    GroupUser:
      type: object
      description: Serializer for Users that belong to a Group.
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          maxLength: 150
      required:
      - username
    GroupUserResponse:
      type: object
      description: Serializer for Users that belong to a Group.
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          maxLength: 150
        pulp_href:
          type: string
          format: uri
          readOnly: true
      required:
      - username
    ImportResponse:
      type: object
      description: Serializer for Imports.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        task:
          type: string
          format: uri
          description: A URI of the Task that ran the Import.
        params:
          type: object
          description: Any parameters that were used to create the import.
      required:
      - params
      - task
    ImportTaskDetailResponse:
      type: object
      description: A serializer for a CollectionImport list view.
      properties:
        id:
          type: string
          format: uuid
        state:
          type: string
        namespace:
          type: string
        name:
          type: string
        version:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        error:
          type: object
        messages:
          type: object
      required:
      - created_at
      - error
      - finished_at
      - id
      - messages
      - name
      - namespace
      - started_at
      - state
      - updated_at
      - version
    ImportTaskListResponse:
      type: object
      description: A serializer for a CollectionImport list view.
      properties:
        id:
          type: string
          format: uuid
        state:
          type: string
        namespace:
          type: string
        name:
          type: string
        version:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
      required:
      - created_at
      - finished_at
      - id
      - name
      - namespace
      - started_at
      - state
      - updated_at
      - version
    ManifestCopy:
      type: object
      description: Serializer for copying manifests from a source repository to a
        destination repository.
      properties:
        source_repository:
          type: string
          format: uri
          description: A URI of the repository to copy content from.
        source_repository_version:
          type: string
          format: uri
          description: A URI of the repository version to copy content from.
        digests:
          type: array
          items: {}
          description: A list of manifest digests to copy.
        media_types:
          type: array
          items:
            $ref: '#/components/schemas/MediaTypesEnum'
          description: A list of media_types to copy.
    MediaTypeEnum:
      enum:
      - application/vnd.docker.distribution.manifest.v1+json
      - application/vnd.docker.distribution.manifest.v2+json
      - application/vnd.docker.distribution.manifest.list.v2+json
      - application/vnd.oci.image.manifest.v1+json
      - application/vnd.oci.image.index.v1+json
      type: string
    MediaTypesEnum:
      enum:
      - application/vnd.docker.distribution.manifest.v1+json
      - application/vnd.docker.distribution.manifest.v2+json
      - application/vnd.docker.distribution.manifest.list.v2+json
      - application/vnd.oci.image.manifest.v1+json
      - application/vnd.oci.image.index.v1+json
      type: string
    MultipleArtifactContentResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        artifacts:
          type: object
          description: 'A dict mapping relative paths inside the Content to the correspondingArtifact
            URLs. E.g.: {''relative/path'': ''/artifacts/1/'''
      required:
      - artifacts
    MyPermissionsField:
      type: object
    MyPermissionsFieldResponse:
      type: object
    Namespace:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        links:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceLink'
        groups:
          type: string
        resources:
          type: string
      required:
      - groups
      - name
    NamespaceLink:
      type: object
      properties:
        name:
          type: string
          maxLength: 32
        url:
          type: string
          maxLength: 256
      required:
      - name
      - url
    NamespaceLinkResponse:
      type: object
      properties:
        name:
          type: string
          maxLength: 32
        url:
          type: string
          maxLength: 256
      required:
      - name
      - url
    NamespaceResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        links:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceLinkResponse'
        groups:
          type: string
        resources:
          type: string
      required:
      - groups
      - name
    NamespaceSummaryResponse:
      type: object
      description: |-
        NamespaceSerializer but without 'links' or 'resources'.

        For use in _ui/collection detail views.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        groups:
          type: string
      required:
      - groups
    OCIBuildImage:
      type: object
      description: |-
        Serializer for building an OCI container image from a Containerfile.

        The Containerfile can either be specified via an artifact url, or a new file can be uploaded.
        A repository must be specified, to which the container image content will be added.
      properties:
        containerfile_artifact:
          type: string
          format: uri
          description: Artifact representing the Containerfile that should be used
            to run buildah.
        containerfile:
          type: string
          format: binary
          description: An uploaded Containerfile that should be used to run buildah.
        tag:
          type: string
          default: latest
          description: A tag name for the new image being built.
        artifacts:
          type: object
          description: A JSON string where each key is an artifact href and the value
            is it's relative path (name) inside the /pulp_working_directory of the
            build container executing the Containerfile.
    PaginatedAccessPolicyResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccessPolicyResponse'
    PaginatedArtifactResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ArtifactResponse'
    PaginatedCollectionResponseList:
      type: object
      properties:
        meta:
          type: object
          properties:
            count:
              type: integer
              example: 123
        links:
          type: object
          properties:
            first:
              type: string
              nullable: true
            previous:
              type: string
              nullable: true
            next:
              type: string
              nullable: true
            last:
              type: string
              nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/CollectionResponse'
    PaginatedCollectionVersionResponseList:
      type: object
      properties:
        meta:
          type: object
          properties:
            count:
              type: integer
              example: 123
        links:
          type: object
          properties:
            first:
              type: string
              nullable: true
            previous:
              type: string
              nullable: true
            next:
              type: string
              nullable: true
            last:
              type: string
              nullable: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/CollectionVersionResponse'
    PaginatedCollectionVersionWithDownloadUrlResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CollectionVersionWithDownloadUrlResponse'
    PaginatedCollectionWithFixedHrefsResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/CollectionWithFixedHrefsResponse'
    PaginatedContainerManifestResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContainerManifestResponse'
    PaginatedContainerNamespaceDetailResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContainerNamespaceDetailResponse'
    PaginatedContainerRepositoryHistoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContainerRepositoryHistoryResponse'
    PaginatedContainerRepositoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContainerRepositoryResponse'
    PaginatedContentGuardResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContentGuardResponse'
    PaginatedDistributionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DistributionResponse'
    PaginatedGalaxyCollectionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GalaxyCollectionResponse'
    PaginatedGalaxyCollectionVersionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/GalaxyCollectionVersionResponse'
    PaginatedGalaxyRoleResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GalaxyRoleResponse'
    PaginatedGalaxyRoleVersionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GalaxyRoleVersionResponse'
    PaginatedGroupResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupResponse'
    PaginatedGroupUserResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/GroupUserResponse'
    PaginatedImportResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ImportResponse'
    PaginatedImportTaskListResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ImportTaskListResponse'
    PaginatedMultipleArtifactContentResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MultipleArtifactContentResponse'
    PaginatedNamespaceSummaryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceSummaryResponse'
    PaginatedPermissionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PermissionResponse'
    PaginatedPulpExportResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PulpExportResponse'
    PaginatedPulpExporterResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PulpExporterResponse'
    PaginatedPulpImporterResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PulpImporterResponse'
    PaginatedRepositoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryResponse'
    PaginatedRepositoryVersionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RepositoryVersionResponse'
    PaginatedSigningServiceResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SigningServiceResponse'
    PaginatedSyncListResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SyncListResponse'
    PaginatedTagResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
    PaginatedTaskGroupResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskGroupResponse'
    PaginatedTaskResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskResponse'
    PaginatedTaskSummaryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TaskSummaryResponse'
    PaginatedUploadResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UploadResponse'
    PaginatedUserResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
    PaginatedWorkerResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/WorkerResponse'
    Paginatedansible.AnsibleDistributionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.AnsibleDistributionResponse'
    Paginatedansible.AnsibleRepositoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.AnsibleRepositoryResponse'
    Paginatedansible.CollectionRemoteResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.CollectionRemoteResponse'
    Paginatedansible.CollectionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.CollectionResponse'
    Paginatedansible.CollectionVersionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.CollectionVersionResponse'
    Paginatedansible.RoleRemoteResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.RoleRemoteResponse'
    Paginatedansible.RoleResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ansible.RoleResponse'
    Paginatedcontainer.BlobResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.BlobResponse'
    Paginatedcontainer.ContainerDistributionResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContainerDistributionResponse'
    Paginatedcontainer.ContainerNamespaceResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContainerNamespaceResponse'
    Paginatedcontainer.ContainerPushRepositoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContainerPushRepositoryResponse'
    Paginatedcontainer.ContainerRemoteResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContainerRemoteResponse'
    Paginatedcontainer.ContainerRepositoryResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContainerRepositoryResponse'
    Paginatedcontainer.ContentRedirectContentGuardResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ContentRedirectContentGuardResponse'
    Paginatedcontainer.ManifestResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.ManifestResponse'
    Paginatedcontainer.TagResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/container.TagResponse'
    Paginatedgalaxy.LoginResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/galaxy.LoginResponse'
    PatchedAccessPolicy:
      type: object
      description: Serializer for AccessPolicy.
      properties:
        permissions_assignment:
          type: array
          items:
            type: object
          description: List of callables that define the new permissions to be created
            for new objects.
        statements:
          type: array
          items:
            type: object
          description: List of policy statements defining the policy.
    PatchedCollection:
      type: object
      description: A serializer for a Collection.
      properties: {}
    PatchedCollectionWithFixedHrefs:
      type: object
      description: A serializer for a Collection.
      properties: {}
    PatchedGroup:
      type: object
      description: Serializer for Group.
      properties:
        name:
          type: string
          description: Name
          maxLength: 150
    PatchedNamespace:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        company:
          type: string
          maxLength: 64
        email:
          type: string
          maxLength: 256
        avatar_url:
          type: string
          format: uri
          maxLength: 256
        description:
          type: string
          maxLength: 256
        links:
          type: array
          items:
            $ref: '#/components/schemas/NamespaceLink'
        groups:
          type: string
        resources:
          type: string
    PatchedPulpExporter:
      type: object
      description: Serializer for pulp exporters.
      properties:
        name:
          type: string
          description: Unique name of the file system exporter.
        path:
          type: string
          description: File system directory to store exported tar.gzs.
        repositories:
          type: array
          items:
            type: string
            format: uri
        last_export:
          type: string
          format: uri
          nullable: true
          description: Last attempted export for this PulpExporter
    PatchedPulpImporter:
      type: object
      description: Serializer for PulpImporters.
      properties:
        name:
          type: string
          description: Unique name of the Importer.
        repo_mapping:
          type: object
          description: 'Mapping of repo names in an export file to the repo names
            in Pulp. For example, if the export has a repo named ''foo'' and the repo
            to import content into was ''bar'', the mapping would be "{''foo'': ''bar''}".'
    PatchedSyncList:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        policy:
          $ref: '#/components/schemas/Policy8baEnum'
        upstream_repository:
          type: string
          format: uuid
        collections:
          type: array
          items:
            $ref: '#/components/schemas/SyncListCollectionSummary'
        namespaces:
          type: array
          items:
            type: string
        groups:
          type: string
    PatchedTaskCancel:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        state:
          type: string
          description: The desired state of the task. Only 'canceled' is accepted.
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
    Patchedansible.AnsibleDistribution:
      type: object
      description: Serializer for Ansible Distributions.
      properties:
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        content_guard:
          type: string
          format: uri
          nullable: true
          description: An optional content-guard.
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
    Patchedansible.AnsibleRepository:
      type: object
      description: Serializer for Ansible Repositories.
      properties:
        pulp_labels:
          type: object
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
        last_synced_metadata_time:
          type: string
          format: date-time
          nullable: true
          description: Last synced metadata time.
    Patchedansible.CollectionRemote:
      type: object
      description: A serializer for Collection Remotes.
      properties:
        url:
          type: string
          description: The URL of an external content source.
        auth_url:
          type: string
          nullable: true
          description: The URL to receive a session token from, e.g. used with Automation
            Hub.
          maxLength: 255
        token:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 2000
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        requirements_file:
          type: string
          nullable: true
          description: The string version of Collection requirements yaml.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
          description: Remote user.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: Remote password.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          nullable: true
          description: User for proxy authentication.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: Password for proxy authentication.
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
    Patchedansible.RoleRemote:
      type: object
      description: A serializer for Ansible Remotes.
      properties:
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to authenticte to the proxy.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to authenticte to the proxy.
        username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to be used for authentication when syncing.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to be used for authentication when syncing.
        pulp_labels:
          type: object
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
    Patchedcontainer.ContainerDistribution:
      type: object
      description: A serializer for ContainerDistribution.
      properties:
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
        pulp_labels:
          type: object
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        content_guard:
          type: string
          format: uri
          description: An optional content-guard. If none is specified, a default
            one will be used.
        private:
          type: boolean
          description: Restrict pull access to explicitly authorized users. Defaults
            to unrestricted pull access.
        description:
          type: string
          nullable: true
          description: An optional description.
    Patchedcontainer.ContainerRemote:
      type: object
      description: A Serializer for ContainerRemote.
      properties:
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to authenticte to the proxy.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to authenticte to the proxy.
        username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to be used for authentication when syncing.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to be used for authentication when syncing.
        pulp_labels:
          type: object
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/Policy762Enum'
          default: immediate
          description: "\n        immediate - All manifests and blobs are downloaded\
            \ and saved during a sync.\n        on_demand - Only tags and manifests\
            \ are downloaded. Blobs are not\n                    downloaded until\
            \ they are requested for the first time by a client.\n        streamed\
            \ - Blobs are streamed to the client with every request and never saved.\n\
            \        "
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
        upstream_name:
          type: string
          description: Name of the upstream repository
        include_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to include during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'include_tags' is\
            \ evaluated before 'exclude_tags'.\n            "
        exclude_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to exclude during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'exclude_tags' is\
            \ evaluated after 'include_tags'.\n            "
    Patchedcontainer.ContainerRepository:
      type: object
      description: Serializer for Container Repositories.
      properties:
        pulp_labels:
          type: object
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
    Patchedcontainer.ContentRedirectContentGuard:
      type: object
      description: A serializer for ContentRedirectContentGuard.
      properties:
        name:
          type: string
          description: The unique name.
        description:
          type: string
          nullable: true
          description: An optional description.
    Permission:
      type: object
      description: Serializer for User/Group object permission.
      properties: {}
    PermissionResponse:
      type: object
      description: Serializer for User/Group object permission.
      properties:
        pulp_href:
          type: string
          readOnly: true
        id:
          type: integer
          readOnly: true
        permission:
          type: string
          readOnly: true
        obj:
          type: string
          readOnly: true
          description: Content object.
    Policy762Enum:
      enum:
      - immediate
      - on_demand
      - streamed
      type: string
    Policy8baEnum:
      enum:
      - exclude
      - include
      type: string
    PolicyDb6Enum:
      enum:
      - immediate
      - When syncing, download all metadata and content now.
      type: string
    ProgressReportResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        message:
          type: string
          readOnly: true
          description: The message shown to the user for the progress report.
        code:
          type: string
          readOnly: true
          description: Identifies the type of progress report'.
        state:
          type: string
          readOnly: true
          description: 'The current state of the progress report. The possible values
            are: ''waiting'', ''skipped'', ''running'', ''completed'', ''failed''
            and ''canceled''. The default is ''waiting''.'
        total:
          type: integer
          readOnly: true
          description: The total count of items.
        done:
          type: integer
          readOnly: true
          description: The count of items already processed. Defaults to 0.
        suffix:
          type: string
          readOnly: true
          nullable: true
          description: The suffix to be shown with the progress report.
    PulpExport:
      type: object
      description: Serializer for PulpExports.
      properties:
        task:
          type: string
          format: uri
          nullable: true
          description: A URI of the task that ran the Export.
        full:
          type: boolean
          writeOnly: true
          default: true
          description: Do a Full (true) or Incremental (false) export.
        dry_run:
          type: boolean
          writeOnly: true
          default: false
          description: Generate report on what would be exported and disk-space required.
        versions:
          type: array
          items:
            type: string
            format: uri
            writeOnly: true
          writeOnly: true
          description: List of explicit repo-version hrefs to export (replaces current_version).
        chunk_size:
          type: string
          writeOnly: true
          description: Chunk export-tarfile into pieces of chunk_size bytes.Recognizes
            units of B/KB/MB/GB/TB.
        start_versions:
          type: array
          items:
            type: string
            format: uri
            writeOnly: true
          writeOnly: true
          description: List of explicit last-exported-repo-version hrefs (replaces
            last_export).
    PulpExportResponse:
      type: object
      description: Serializer for PulpExports.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        task:
          type: string
          format: uri
          nullable: true
          description: A URI of the task that ran the Export.
        exported_resources:
          type: array
          items: {}
          readOnly: true
          description: Resources that were exported.
        params:
          type: object
          readOnly: true
          description: Any additional parameters that were used to create the export.
        output_file_info:
          type: object
          readOnly: true
          description: 'Dictionary of filename: sha256hash entries for export-output-file(s)'
        toc_info:
          type: object
          readOnly: true
          description: Filename and sha256-checksum of table-of-contents for this
            export
    PulpExporter:
      type: object
      description: Serializer for pulp exporters.
      properties:
        name:
          type: string
          description: Unique name of the file system exporter.
        path:
          type: string
          description: File system directory to store exported tar.gzs.
        repositories:
          type: array
          items:
            type: string
            format: uri
        last_export:
          type: string
          format: uri
          nullable: true
          description: Last attempted export for this PulpExporter
      required:
      - name
      - path
      - repositories
    PulpExporterResponse:
      type: object
      description: Serializer for pulp exporters.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: Unique name of the file system exporter.
        path:
          type: string
          description: File system directory to store exported tar.gzs.
        repositories:
          type: array
          items:
            type: string
            format: uri
        last_export:
          type: string
          format: uri
          nullable: true
          description: Last attempted export for this PulpExporter
      required:
      - name
      - path
      - repositories
    PulpImport:
      type: object
      description: Serializer for call to import into Pulp.
      properties:
        path:
          type: string
          description: Path to export that will be imported.
        toc:
          type: string
          description: Path to a table-of-contents file describing chunks to be validated,
            reassembled, and imported.
    PulpImportCheck:
      type: object
      description: |-
        Check validity of provided import-options.

        Provides the ability to check that an import is 'sane' without having to actually
        create an importer.
      properties:
        path:
          type: string
          description: Path to export-tar-gz that will be imported.
        toc:
          type: string
          description: Path to a table-of-contents file describing chunks to be validated,
            reassembled, and imported.
        repo_mapping:
          type: string
          description: 'Mapping of repo names in an export file to the repo names
            in Pulp. For example, if the export has a repo named ''foo'' and the repo
            to import content into was ''bar'', the mapping would be "{''foo'': ''bar''}".'
    PulpImportCheckResponse:
      type: object
      description: Return the response to a PulpImport import-check call.
      properties:
        toc:
          allOf:
          - $ref: '#/components/schemas/EvaluationResponse'
          description: Evaluation of proposed 'toc' file for PulpImport
        path:
          allOf:
          - $ref: '#/components/schemas/EvaluationResponse'
          description: Evaluation of proposed 'path' file for PulpImport
        repo_mapping:
          allOf:
          - $ref: '#/components/schemas/EvaluationResponse'
          description: Evaluation of proposed 'repo_mapping' file for PulpImport
    PulpImporter:
      type: object
      description: Serializer for PulpImporters.
      properties:
        name:
          type: string
          description: Unique name of the Importer.
        repo_mapping:
          type: object
          description: 'Mapping of repo names in an export file to the repo names
            in Pulp. For example, if the export has a repo named ''foo'' and the repo
            to import content into was ''bar'', the mapping would be "{''foo'': ''bar''}".'
      required:
      - name
    PulpImporterResponse:
      type: object
      description: Serializer for PulpImporters.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: Unique name of the Importer.
        repo_mapping:
          type: object
          description: 'Mapping of repo names in an export file to the repo names
            in Pulp. For example, if the export has a repo named ''foo'' and the repo
            to import content into was ''bar'', the mapping would be "{''foo'': ''bar''}".'
      required:
      - name
    RecursiveManage:
      type: object
      description: Serializer for adding and removing content to/from a Container
        repository.
      properties:
        content_units:
          type: array
          items: {}
          description: A list of content units to operate on.
    RedisConnectionResponse:
      type: object
      description: Serializer for information about the Redis connection
      properties:
        connected:
          type: boolean
          description: Info about whether the app can connect to Redis
      required:
      - connected
    RemoveImage:
      type: object
      description: A serializer for parsing and validating data associated with the
        image removal.
      properties:
        digest:
          type: string
          description: sha256 of the Manifest file
      required:
      - digest
    RepoMetadataResponse:
      type: object
      description: A serializer to display RepositoryVersion metadata.
      properties:
        published:
          type: string
          format: date-time
      required:
      - published
    RepositoryAddRemoveContent:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        add_content_units:
          type: array
          items: {}
          description: A list of content units to add to a new repository version.
            This content is added after remove_content_units are removed.
        remove_content_units:
          type: array
          items: {}
          description: A list of content units to remove from the latest repository
            version. You may also specify '*' as an entry to remove all content. This
            content is removed before add_content_units are added.
        base_version:
          type: string
          format: uri
          description: A repository version whose content will be used as the initial
            set of content for the new repository version
    RepositoryResponse:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        pulp_id:
          type: string
          format: uuid
          readOnly: true
        pulp_last_updated:
          type: string
          format: date-time
          readOnly: true
        content_count:
          type: string
          readOnly: true
      required:
      - name
    RepositorySyncURL:
      type: object
      description: A mixin for validating unknown serializers' fields.
      properties:
        remote:
          type: string
          format: uri
          description: A remote to sync from. This will override a remote set on repository.
        mirror:
          type: boolean
          default: false
          description: If ``True``, synchronization will remove all content that is
            not present in the remote repository. If ``False``, sync will be additive
            only.
    RepositoryVersion:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        base_version:
          type: string
          format: uri
          description: A repository version whose content was used as the initial
            set of content for this repository version
    RepositoryVersionResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        number:
          type: integer
          readOnly: true
        base_version:
          type: string
          format: uri
          description: A repository version whose content was used as the initial
            set of content for this repository version
        content_summary:
          allOf:
          - $ref: '#/components/schemas/ContentSummaryResponse'
          readOnly: true
          description: Various count summaries of the content in the version and the
            HREF to view them.
    ReservedResourcesResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
    SigningServiceResponse:
      type: object
      description: A serializer for the model declaring a signing service.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: A unique name used to recognize a script.
        public_key:
          type: string
          description: The value of a public key used for the repository verification.
        pubkey_fingerprint:
          type: string
          description: The fingerprint of the public key.
        script:
          type: string
          description: An absolute path to a script which is going to be used for
            the signing.
      required:
      - name
      - pubkey_fingerprint
      - public_key
      - script
    StatusResponse:
      type: object
      description: Serializer for the status information of the app
      properties:
        versions:
          type: array
          items:
            $ref: '#/components/schemas/VersionResponse'
          description: Version information of Pulp components
        online_workers:
          type: array
          items:
            $ref: '#/components/schemas/WorkerResponse'
          description: List of online workers known to the application. An online
            worker is actively heartbeating and can respond to new work
        online_content_apps:
          type: array
          items:
            $ref: '#/components/schemas/ContentAppStatusResponse'
          description: List of online content apps known to the application. An online
            content app is actively heartbeating and can serve data to clients
        database_connection:
          allOf:
          - $ref: '#/components/schemas/DatabaseConnectionResponse'
          description: Database connection information
        redis_connection:
          allOf:
          - $ref: '#/components/schemas/RedisConnectionResponse'
          description: Redis connection information
        storage:
          allOf:
          - $ref: '#/components/schemas/StorageResponse'
          description: Storage information
      required:
      - database_connection
      - online_content_apps
      - online_workers
      - redis_connection
      - versions
    StorageResponse:
      type: object
      description: Serializer for information about the storage system
      properties:
        total:
          type: integer
          description: Total number of bytes
          minimum: 0
        used:
          type: integer
          description: Number of bytes in use
          minimum: 0
        free:
          type: integer
          description: Number of free bytes
          minimum: 0
      required:
      - free
      - total
      - used
    SyncList:
      type: object
      properties:
        name:
          type: string
          maxLength: 64
        policy:
          $ref: '#/components/schemas/Policy8baEnum'
        upstream_repository:
          type: string
          format: uuid
        collections:
          type: array
          items:
            $ref: '#/components/schemas/SyncListCollectionSummary'
        namespaces:
          type: array
          items:
            type: string
        groups:
          type: string
      required:
      - collections
      - groups
      - name
      - namespaces
      - upstream_repository
    SyncListCollectionSummary:
      type: object
      properties:
        namespace:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
      required:
      - name
      - namespace
    SyncListCollectionSummaryResponse:
      type: object
      properties:
        namespace:
          type: string
          maxLength: 64
        name:
          type: string
          maxLength: 64
      required:
      - name
      - namespace
    SyncListResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 64
        policy:
          $ref: '#/components/schemas/Policy8baEnum'
        upstream_repository:
          type: string
          format: uuid
        repository:
          type: string
          format: uuid
          readOnly: true
        collections:
          type: array
          items:
            $ref: '#/components/schemas/SyncListCollectionSummaryResponse'
        namespaces:
          type: array
          items:
            type: string
        groups:
          type: string
      required:
      - collections
      - groups
      - name
      - namespaces
      - upstream_repository
    TagCopy:
      type: object
      description: Serializer for copying tags from a source repository to a destination
        repository.
      properties:
        source_repository:
          type: string
          format: uri
          description: A URI of the repository to copy content from.
        source_repository_version:
          type: string
          format: uri
          description: A URI of the repository version to copy content from.
        names:
          type: array
          items: {}
          description: A list of tag names to copy.
    TagImage:
      type: object
      description: A serializer for parsing and validating data associated with a
        manifest tagging.
      properties:
        tag:
          type: string
          description: A tag name
          pattern: ^[A-Za-z0-9][A-Za-z0-9._-]*$
        digest:
          type: string
          description: sha256 of the Manifest file
      required:
      - digest
      - tag
    TagResponse:
      type: object
      description: A serializer for the Tag model.
      properties:
        name:
          type: string
          readOnly: true
    TaskGroupResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        description:
          type: string
          description: A description of the task group.
        all_tasks_dispatched:
          type: boolean
          description: Whether all tasks have been spawned for this task group.
        waiting:
          type: integer
          readOnly: true
          description: Number of tasks in the 'waiting' state
        skipped:
          type: integer
          readOnly: true
          description: Number of tasks in the 'skipped' state
        running:
          type: integer
          readOnly: true
          description: Number of tasks in the 'running' state
        completed:
          type: integer
          readOnly: true
          description: Number of tasks in the 'completed' state
        canceled:
          type: integer
          readOnly: true
          description: Number of tasks in the 'canceled' state
        failed:
          type: integer
          readOnly: true
          description: Number of tasks in the 'failed' state
        group_progress_reports:
          type: array
          items:
            $ref: '#/components/schemas/GroupProgressReportResponse'
          readOnly: true
      required:
      - all_tasks_dispatched
      - description
    TaskResponse:
      type: object
      properties:
        pulp_id:
          type: string
          format: uuid
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
        state:
          type: string
        error:
          type: object
          nullable: true
        worker:
          type: object
          nullable: true
          readOnly: true
        parent_task:
          type: string
          format: uuid
          nullable: true
        child_tasks:
          type: array
          items:
            type: string
            format: uuid
        repository:
          type: string
          nullable: true
          readOnly: true
        progress_reports:
          type: array
          items:
            $ref: '#/components/schemas/ProgressReportResponse'
          readOnly: true
      required:
      - child_tasks
      - created_at
      - finished_at
      - name
      - pulp_id
      - started_at
      - state
      - updated_at
    TaskSummaryResponse:
      type: object
      description: |-
        TaskSerializer but without detail fields.

        For use in /tasks/<str:pk>/ detail views.
      properties:
        pulp_id:
          type: string
          format: uuid
        name:
          type: string
        repository:
          type: string
          nullable: true
          readOnly: true
        state:
          type: string
        started_at:
          type: string
          format: date-time
        finished_at:
          type: string
          format: date-time
        href:
          type: string
          readOnly: true
      required:
      - finished_at
      - name
      - pulp_id
      - started_at
      - state
    UnTagImage:
      type: object
      description: A serializer for parsing and validating data associated with a
        manifest untagging.
      properties:
        tag:
          type: string
          description: A tag name
          pattern: ^[A-Za-z0-9][A-Za-z0-9._-]*$
      required:
      - tag
    UnpaginatedCollectionVersionResponse:
      type: object
      description: A serializer for unpaginated CollectionVersion.
      properties:
        version:
          type: string
          readOnly: true
        href:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        requires_ansible:
          type: string
          nullable: true
          maxLength: 255
        artifact:
          allOf:
          - $ref: '#/components/schemas/ArtifactRefResponse'
          readOnly: true
        collection:
          allOf:
          - $ref: '#/components/schemas/CollectionRefResponse'
          readOnly: true
        download_url:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        namespace:
          allOf:
          - $ref: '#/components/schemas/CollectionNamespaceResponse'
          readOnly: true
        metadata:
          allOf:
          - $ref: '#/components/schemas/CollectionMetadataResponse'
          readOnly: true
      required:
      - created_at
      - updated_at
    Upload:
      type: object
      description: Serializer for chunked uploads.
      properties:
        size:
          type: integer
          description: The size of the upload in bytes.
      required:
      - size
    UploadChunk:
      type: object
      description: A mixin for validating unknown serializers' fields.
      properties:
        file:
          type: string
          format: binary
          writeOnly: true
          description: A chunk of the uploaded file.
        sha256:
          type: string
          writeOnly: true
          nullable: true
          description: The SHA-256 checksum of the chunk if available.
      required:
      - file
    UploadChunkResponse:
      type: object
      description: A mixin for validating unknown serializers' fields.
      properties:
        offset:
          type: integer
          readOnly: true
        size:
          type: integer
          readOnly: true
    UploadCommit:
      type: object
      description: A mixin for validating unknown serializers' fields.
      properties:
        sha256:
          type: string
          description: The expected sha256 checksum for the file.
      required:
      - sha256
    UploadDetailResponse:
      type: object
      description: Serializer for chunked uploads.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        size:
          type: integer
          description: The size of the upload in bytes.
        completed:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when upload is committed.
        chunks:
          type: array
          items:
            $ref: '#/components/schemas/UploadChunkResponse'
          readOnly: true
      required:
      - size
    UploadResponse:
      type: object
      description: Serializer for chunked uploads.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        size:
          type: integer
          description: The size of the upload in bytes.
        completed:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp when upload is committed.
      required:
      - size
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - username
    UserGroupResponse:
      type: object
      description: Serializer for Groups that belong to an User.
      properties:
        name:
          type: string
          description: Name.
          maxLength: 150
        pulp_href:
          type: string
          format: uri
          readOnly: true
      required:
      - name
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
      required:
      - username
    VersionResponse:
      type: object
      description: Serializer for the version information of Pulp components
      properties:
        component:
          type: string
          description: Name of a versioned component of Pulp
        version:
          type: string
          description: Version of the component (e.g. 3.0.0)
      required:
      - component
      - version
    WorkerResponse:
      type: object
      description: |-
        Base serializer for use with :class:`pulpcore.app.models.Model`

        This ensures that all Serializers provide values for the 'pulp_href` field.

        The class provides a default for the ``ref_name`` attribute in the
        ModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions
        of plugins are namespaced properly.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          readOnly: true
          description: The name of the worker.
        last_heartbeat:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the last time the worker talked to the service.
    ansible.AnsibleDistribution:
      type: object
      description: Serializer for Ansible Distributions.
      properties:
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        content_guard:
          type: string
          format: uri
          nullable: true
          description: An optional content-guard.
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
      required:
      - base_path
      - name
    ansible.AnsibleDistributionResponse:
      type: object
      description: Serializer for Ansible Distributions.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        content_guard:
          type: string
          format: uri
          nullable: true
          description: An optional content-guard.
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
        client_url:
          type: string
          readOnly: true
          description: The URL of a Collection content source.
      required:
      - base_path
      - name
    ansible.AnsibleRepository:
      type: object
      description: Serializer for Ansible Repositories.
      properties:
        pulp_labels:
          type: object
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
        last_synced_metadata_time:
          type: string
          format: date-time
          nullable: true
          description: Last synced metadata time.
      required:
      - name
    ansible.AnsibleRepositoryResponse:
      type: object
      description: Serializer for Ansible Repositories.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        versions_href:
          type: string
          format: uri
          readOnly: true
        pulp_labels:
          type: object
        latest_version_href:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
        last_synced_metadata_time:
          type: string
          format: date-time
          nullable: true
          description: Last synced metadata time.
      required:
      - name
    ansible.CollectionRemote:
      type: object
      description: A serializer for Collection Remotes.
      properties:
        url:
          type: string
          description: The URL of an external content source.
        auth_url:
          type: string
          nullable: true
          description: The URL to receive a session token from, e.g. used with Automation
            Hub.
          maxLength: 255
        token:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 2000
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        requirements_file:
          type: string
          nullable: true
          description: The string version of Collection requirements yaml.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
          description: Remote user.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: Remote password.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          nullable: true
          description: User for proxy authentication.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: Password for proxy authentication.
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
      required:
      - url
    ansible.CollectionRemoteResponse:
      type: object
      description: A serializer for Collection Remotes.
      properties:
        pk:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          readOnly: true
        url:
          type: string
          description: The URL of an external content source.
        auth_url:
          type: string
          nullable: true
          description: The URL to receive a session token from, e.g. used with Automation
            Hub.
          maxLength: 255
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        requirements_file:
          type: string
          nullable: true
          description: The string version of Collection requirements yaml.
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
          description: Remote user.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        last_sync_task:
          type: string
          readOnly: true
        repositories:
          type: string
          readOnly: true
        pulp_href:
          type: string
          format: uri
          readOnly: true
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          nullable: true
          description: User for proxy authentication.
        write_only_fields:
          type: string
          readOnly: true
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
      required:
      - url
    ansible.CollectionResponse:
      type: object
      description: A serializer for Ansible Collections.
      properties:
        name:
          type: string
          description: The name of the Collection.
        namespace:
          type: string
          description: The namespace of the Collection.
      required:
      - name
      - namespace
    ansible.CollectionVersion:
      type: object
      description: A serializer for CollectionVersion Content.
      properties:
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        id:
          type: string
          format: uuid
          description: A collection identifier.
        authors:
          type: array
          items:
            type: string
          description: A list of the CollectionVersion content's authors.
        contents:
          type: array
          items:
            type: object
          description: A JSON field with data about the contents.
        dependencies:
          type: object
          description: A dict declaring Collections that this collection requires
            to be installed for it to be usable.
        description:
          type: string
          description: A short summary description of the collection.
        docs_blob:
          type: object
          description: A JSON field holding the various documentation blobs in the
            collection.
        manifest:
          type: object
          description: A JSON field holding MANIFEST.json data.
        files:
          type: object
          description: A JSON field holding FILES.json data.
        documentation:
          type: string
          description: The URL to any online docs.
          maxLength: 2000
        homepage:
          type: string
          description: The URL to the homepage of the collection/project.
          maxLength: 2000
        issues:
          type: string
          description: The URL to the collection issue tracker.
          maxLength: 2000
        license:
          type: array
          items:
            type: string
          description: A list of licenses for content inside of a collection.
        name:
          type: string
          description: The name of the collection.
          maxLength: 32
        namespace:
          type: string
          description: The namespace of the collection.
          maxLength: 32
        repository:
          type: string
          description: The URL of the originating SCM repository.
          maxLength: 2000
        version:
          type: string
          description: The version of the collection.
          maxLength: 32
        requires_ansible:
          type: string
          nullable: true
          description: The version of Ansible required to use the collection. Multiple
            versions can be separated with a comma.
          maxLength: 255
      required:
      - artifact
      - authors
      - contents
      - dependencies
      - description
      - docs_blob
      - documentation
      - files
      - homepage
      - id
      - issues
      - license
      - manifest
      - name
      - namespace
      - repository
      - version
    ansible.CollectionVersionResponse:
      type: object
      description: A serializer for CollectionVersion Content.
      properties:
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        md5:
          type: string
          readOnly: true
          description: The MD5 checksum if available.
        sha1:
          type: string
          readOnly: true
          description: The SHA-1 checksum if available.
        sha224:
          type: string
          readOnly: true
          description: The SHA-224 checksum if available.
        sha256:
          type: string
          readOnly: true
          description: The SHA-256 checksum if available.
        sha384:
          type: string
          readOnly: true
          description: The SHA-384 checksum if available.
        sha512:
          type: string
          readOnly: true
          description: The SHA-512 checksum if available.
        id:
          type: string
          format: uuid
          description: A collection identifier.
        authors:
          type: array
          items:
            type: string
          description: A list of the CollectionVersion content's authors.
        contents:
          type: array
          items:
            type: object
          description: A JSON field with data about the contents.
        dependencies:
          type: object
          description: A dict declaring Collections that this collection requires
            to be installed for it to be usable.
        description:
          type: string
          description: A short summary description of the collection.
        docs_blob:
          type: object
          description: A JSON field holding the various documentation blobs in the
            collection.
        manifest:
          type: object
          description: A JSON field holding MANIFEST.json data.
        files:
          type: object
          description: A JSON field holding FILES.json data.
        documentation:
          type: string
          description: The URL to any online docs.
          maxLength: 2000
        homepage:
          type: string
          description: The URL to the homepage of the collection/project.
          maxLength: 2000
        issues:
          type: string
          description: The URL to the collection issue tracker.
          maxLength: 2000
        license:
          type: array
          items:
            type: string
          description: A list of licenses for content inside of a collection.
        name:
          type: string
          description: The name of the collection.
          maxLength: 32
        namespace:
          type: string
          description: The namespace of the collection.
          maxLength: 32
        repository:
          type: string
          description: The URL of the originating SCM repository.
          maxLength: 2000
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ansible.TagResponse'
          readOnly: true
        version:
          type: string
          description: The version of the collection.
          maxLength: 32
        requires_ansible:
          type: string
          nullable: true
          description: The version of Ansible required to use the collection. Multiple
            versions can be separated with a comma.
          maxLength: 255
      required:
      - artifact
      - authors
      - contents
      - dependencies
      - description
      - docs_blob
      - documentation
      - files
      - homepage
      - id
      - issues
      - license
      - manifest
      - name
      - namespace
      - repository
      - version
    ansible.Role:
      type: object
      description: A serializer for Role versions.
      properties:
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        version:
          type: string
        name:
          type: string
        namespace:
          type: string
      required:
      - artifact
      - name
      - namespace
      - version
    ansible.RoleRemote:
      type: object
      description: A serializer for Ansible Remotes.
      properties:
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to authenticte to the proxy.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to authenticte to the proxy.
        username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to be used for authentication when syncing.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to be used for authentication when syncing.
        pulp_labels:
          type: object
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
      required:
      - name
      - url
    ansible.RoleRemoteResponse:
      type: object
      description: A serializer for Ansible Remotes.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        pulp_labels:
          type: object
        pulp_last_updated:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the most recent update of the remote.
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDb6Enum'
          default: immediate
          description: The policy to use when downloading content.
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
      required:
      - name
      - url
    ansible.RoleResponse:
      type: object
      description: A serializer for Role versions.
      properties:
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        version:
          type: string
        name:
          type: string
        namespace:
          type: string
      required:
      - artifact
      - name
      - namespace
      - version
    ansible.Tag:
      type: object
      description: A serializer for nesting in the CollectionVersion model.
      properties: {}
    ansible.TagResponse:
      type: object
      description: A serializer for nesting in the CollectionVersion model.
      properties:
        name:
          type: string
          readOnly: true
          description: The name of the Tag.
    container.BlobResponse:
      type: object
      description: Serializer for Blobs.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        digest:
          type: string
          description: sha256 of the Blob file
        media_type:
          type: string
          description: Blob media type of the file
      required:
      - artifact
      - digest
      - media_type
    container.ContainerDistribution:
      type: object
      description: A serializer for ContainerDistribution.
      properties:
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
        pulp_labels:
          type: object
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        content_guard:
          type: string
          format: uri
          description: An optional content-guard. If none is specified, a default
            one will be used.
        private:
          type: boolean
          description: Restrict pull access to explicitly authorized users. Defaults
            to unrestricted pull access.
        description:
          type: string
          nullable: true
          description: An optional description.
      required:
      - base_path
      - name
    container.ContainerDistributionResponse:
      type: object
      description: A serializer for ContainerDistribution.
      properties:
        base_path:
          type: string
          description: The base (relative) path component of the published url. Avoid
            paths that                     overlap with other distribution base paths
            (e.g. "foo" and "foo/bar")
        name:
          type: string
          description: A unique name. Ex, `rawhide` and `stable`.
        repository_version:
          type: string
          format: uri
          nullable: true
          description: RepositoryVersion to be served
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_labels:
          type: object
        repository:
          type: string
          format: uri
          nullable: true
          description: The latest RepositoryVersion for this Repository will be served.
        content_guard:
          type: string
          format: uri
          description: An optional content-guard. If none is specified, a default
            one will be used.
        registry_path:
          type: string
          readOnly: true
          description: The Registry hostame/name/ to use with docker pull command
            defined by this distribution.
        namespace:
          type: string
          format: uri
          readOnly: true
          description: Namespace this distribution belongs to.
        private:
          type: boolean
          description: Restrict pull access to explicitly authorized users. Defaults
            to unrestricted pull access.
        description:
          type: string
          nullable: true
          description: An optional description.
      required:
      - base_path
      - name
    container.ContainerNamespace:
      type: object
      description: Serializer for ContainerNamespaces.
      properties:
        name:
          type: string
          maxLength: 255
      required:
      - name
    container.ContainerNamespaceResponse:
      type: object
      description: Serializer for ContainerNamespaces.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          maxLength: 255
      required:
      - name
    container.ContainerPushRepositoryResponse:
      type: object
      description: Serializer for Container Push Repositories.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        versions_href:
          type: string
          format: uri
          readOnly: true
        pulp_labels:
          type: object
        latest_version_href:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
      required:
      - name
    container.ContainerRemote:
      type: object
      description: A Serializer for ContainerRemote.
      properties:
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        client_key:
          type: string
          writeOnly: true
          nullable: true
          description: A PEM encoded private key used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        proxy_username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to authenticte to the proxy.
        proxy_password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to authenticte to the proxy.
        username:
          type: string
          writeOnly: true
          nullable: true
          description: The username to be used for authentication when syncing.
        password:
          type: string
          writeOnly: true
          nullable: true
          description: The password to be used for authentication when syncing.
        pulp_labels:
          type: object
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/Policy762Enum'
          default: immediate
          description: "\n        immediate - All manifests and blobs are downloaded\
            \ and saved during a sync.\n        on_demand - Only tags and manifests\
            \ are downloaded. Blobs are not\n                    downloaded until\
            \ they are requested for the first time by a client.\n        streamed\
            \ - Blobs are streamed to the client with every request and never saved.\n\
            \        "
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
        upstream_name:
          type: string
          description: Name of the upstream repository
        include_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to include during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'include_tags' is\
            \ evaluated before 'exclude_tags'.\n            "
        exclude_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to exclude during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'exclude_tags' is\
            \ evaluated after 'include_tags'.\n            "
      required:
      - name
      - upstream_name
      - url
    container.ContainerRemoteResponse:
      type: object
      description: A Serializer for ContainerRemote.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: A unique name for this remote.
        url:
          type: string
          description: The URL of an external content source.
        ca_cert:
          type: string
          nullable: true
          description: A PEM encoded CA certificate used to validate the server certificate
            presented by the remote server.
        client_cert:
          type: string
          nullable: true
          description: A PEM encoded client certificate used for authentication.
        tls_validation:
          type: boolean
          description: If True, TLS peer validation must be performed.
        proxy_url:
          type: string
          nullable: true
          description: 'The proxy URL. Format: scheme://host:port'
        pulp_labels:
          type: object
        pulp_last_updated:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of the most recent update of the remote.
        download_concurrency:
          type: integer
          minimum: 1
          description: Total number of simultaneous connections.
        policy:
          allOf:
          - $ref: '#/components/schemas/Policy762Enum'
          default: immediate
          description: "\n        immediate - All manifests and blobs are downloaded\
            \ and saved during a sync.\n        on_demand - Only tags and manifests\
            \ are downloaded. Blobs are not\n                    downloaded until\
            \ they are requested for the first time by a client.\n        streamed\
            \ - Blobs are streamed to the client with every request and never saved.\n\
            \        "
        total_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.total (q.v.) for download-connections.
          minimum: 0.0
        connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.connect (q.v.) for download-connections.
          minimum: 0.0
        sock_connect_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_connect (q.v.) for download-connections.
          minimum: 0.0
        sock_read_timeout:
          type: number
          format: float
          nullable: true
          description: aiohttp.ClientTimeout.sock_read (q.v.) for download-connections.
          minimum: 0.0
        headers:
          type: array
          items:
            type: object
          description: Headers for aiohttp.Clientsession
        rate_limit:
          type: integer
          nullable: true
          description: Limits total download rate in requests per second
        upstream_name:
          type: string
          description: Name of the upstream repository
        include_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to include during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'include_tags' is\
            \ evaluated before 'exclude_tags'.\n            "
        exclude_tags:
          type: array
          items:
            type: string
          nullable: true
          description: "\n            A list of tags to exclude during sync.\n   \
            \         Wildcards *, ? are recognized.\n            'exclude_tags' is\
            \ evaluated after 'include_tags'.\n            "
      required:
      - name
      - upstream_name
      - url
    container.ContainerRepository:
      type: object
      description: Serializer for Container Repositories.
      properties:
        pulp_labels:
          type: object
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
      required:
      - name
    container.ContainerRepositoryResponse:
      type: object
      description: Serializer for Container Repositories.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        versions_href:
          type: string
          format: uri
          readOnly: true
        pulp_labels:
          type: object
        latest_version_href:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: A unique name for this repository.
        description:
          type: string
          nullable: true
          description: An optional description.
        remote:
          type: string
          format: uri
          nullable: true
      required:
      - name
    container.ContentRedirectContentGuard:
      type: object
      description: A serializer for ContentRedirectContentGuard.
      properties:
        name:
          type: string
          description: The unique name.
        description:
          type: string
          nullable: true
          description: An optional description.
      required:
      - name
    container.ContentRedirectContentGuardResponse:
      type: object
      description: A serializer for ContentRedirectContentGuard.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: The unique name.
        description:
          type: string
          nullable: true
          description: An optional description.
      required:
      - name
    container.ManifestResponse:
      type: object
      description: Serializer for Manifests.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        artifact:
          type: string
          format: uri
          description: Artifact file representing the physical content
        digest:
          type: string
          description: sha256 of the Manifest file
        schema_version:
          type: integer
          description: Manifest schema version
        media_type:
          type: string
          description: Manifest media type of the file
        listed_manifests:
          type: array
          items:
            type: string
            format: uri
          description: Manifests that are referenced by this Manifest List
        config_blob:
          type: string
          format: uri
          description: Blob that contains configuration for this Manifest
        blobs:
          type: array
          items:
            type: string
            format: uri
          description: Blobs that are referenced by this Manifest
      required:
      - artifact
      - blobs
      - digest
      - listed_manifests
      - media_type
      - schema_version
    container.TagResponse:
      type: object
      description: Serializer for Tags.
      properties:
        pulp_href:
          type: string
          format: uri
          readOnly: true
        pulp_created:
          type: string
          format: date-time
          readOnly: true
          description: Timestamp of creation.
        name:
          type: string
          description: Tag name
        tagged_manifest:
          type: string
          format: uri
          description: Manifest that is tagged
      required:
      - name
      - tagged_manifest
    galaxy.Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    galaxy.LoginResponse:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
servers:
- url: http://localhost:5001/
